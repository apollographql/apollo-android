// Signature format: 3.0
package com.apollographql.apollo {

  public final class ApolloCallback<D extends com.apollographql.apollo.api.Operation.Data> extends com.apollographql.apollo.ApolloCall.Callback<D> {
    ctor public ApolloCallback(com.apollographql.apollo.ApolloCall.Callback<D> callback, android.os.Handler handler);
    method public com.apollographql.apollo.ApolloCall.Callback<D> getDelegate();
    method public void onFailure(com.apollographql.apollo.exception.ApolloException e);
    method public void onResponse(com.apollographql.apollo.api.Response<D> response);
    property public final com.apollographql.apollo.ApolloCall.Callback<D> delegate;
    field public static final com.apollographql.apollo.ApolloCallback.Companion Companion;
  }

  public static final class ApolloCallback.Companion {
    method public <D extends com.apollographql.apollo.api.Operation.Data> com.apollographql.apollo.ApolloCallback<D> wrap(com.apollographql.apollo.ApolloCall.Callback<D> callback, android.os.Handler handler);
  }

  public final class ApolloPrefetchCallback extends com.apollographql.apollo.ApolloPrefetch.Callback {
    ctor public ApolloPrefetchCallback(com.apollographql.apollo.ApolloPrefetch.Callback callback, android.os.Handler handler);
    method public com.apollographql.apollo.ApolloPrefetch.Callback getDelegate();
    method public void onFailure(com.apollographql.apollo.exception.ApolloException e);
    method public void onSuccess();
    property public final com.apollographql.apollo.ApolloPrefetch.Callback delegate;
    field public static final com.apollographql.apollo.ApolloPrefetchCallback.Companion Companion;
  }

  public static final class ApolloPrefetchCallback.Companion {
    method public <T> com.apollographql.apollo.ApolloPrefetchCallback wrap(com.apollographql.apollo.ApolloPrefetch.Callback callback, android.os.Handler handler);
  }

}

