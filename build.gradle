subprojects {
  apply from: "../gradle/dependencies.gradle"

  buildscript {
    repositories {
      jcenter()
      maven { url "https://jitpack.io" }
      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
      classpath dep.kotlinGradlePlugin
    }
  }
  repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  group = GROUP
  version = VERSION_NAME

  if (!project.name.equals('apollo-gradle-plugin')) {
    apply plugin: 'checkstyle'

    checkstyle {
      configFile rootProject.file('checkstyle.xml')
      configProperties = ['checkstyle.cache.file': rootProject.file('build/checkstyle.cache')]
      ignoreFailures false
      showViolations true
    }

    task checkstyle(type: Checkstyle) {
      source 'src/main/java'
      include '**/*.java'

      classpath = files()
    }

    afterEvaluate {
      if (project.tasks.findByName('check')) {
        check.dependsOn('checkstyle')
      }
    }
  }
}

// This prevents the plugin from adding the snapshot version of
// apollo-runtime dependencies to the dependencies set
def skipApolloRuntimeDep() {
  System.setProperty("apollographql.skipRuntimeDep", "true")
}
// Clears the skipRuntimeDep property for other modules
def clearSkipApolloRuntimeDep() {
  if (System.getProperty("apollographql.skipRuntimeDep") != null) {
    System.clearProperty("apollographql.skipRuntimeDep")
  }
}

if (System.env.TRAVIS == 'true') {
  // attempt to reduce memory overhead of the tests running on travis
  tasks.withType(GroovyCompile) {
    groovyOptions.fork = false
  }
  tasks.withType(Test) {
    jvmArgs '-Xmx512m'
  }
}
