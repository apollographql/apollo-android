//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.directives

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.directives.adapter.TestQuery_ResponseAdapter
import com.example.directives.adapter.TestQuery_VariablesAdapter
import com.example.directives.responsefields.TestQuery_ResponseFields
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val includeName: Boolean,
  val skipFriends: Boolean
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      /**
       * The name of the character
       */
      val name: String?,
      /**
       * The friends of the character exposed as a connection with edges
       */
      val friendsConnection: FriendsConnection?
    ) {
      data class FriendsConnection(
        /**
         * The total number of friends
         */
        val totalCount: Int?
      )
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "7d815b13df95ab484c7b20cb8059c07e3a8688d1ea0a251bff6d3f0b6fdb1cb7"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($includeName: Boolean!, $skipFriends: Boolean!) @operationDirective(dummy:
     * "hello") {
     *   hero {
     *     name @include(if: $includeName)
     *     friendsConnection @skip(if: $skipFriends) {
     *       totalCount
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}includeName: Boolean!, ${'$'}skipFriends: Boolean!) @operationDirective(dummy: \"hello\") { hero { name @include(if: ${'$'}includeName) friendsConnection @skip(if: ${'$'}skipFriends) { totalCount } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
