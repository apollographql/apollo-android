//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_field_with_multiple_fieldsets

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.nested_field_with_multiple_fieldsets.adapter.TestQuery_ResponseAdapter
import com.example.nested_field_with_multiple_fieldsets.selections.TestQuerySelections
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections

  data class Data(
    val iface1: Iface1?
  ) : Query.Data {
    interface Iface1 {
      val __typename: String

      val iface2: Iface2?

      interface Iface2 {
        val __typename: String

        val scalar1: String?

        companion object {
          fun Iface2.asImpl2() = this as? Impl2Iface2
        }
      }

      interface Impl2Iface2 : Iface2 {
        override val __typename: String

        override val scalar1: String?

        val scalar2: String?
      }

      companion object {
        fun Iface1.asImpl1() = this as? Impl1Iface1
      }
    }

    data class Impl1Iface1(
      override val __typename: String,
      override val iface2: Iface2?
    ) : Iface1 {
      interface Iface2 : Iface1.Iface2 {
        override val __typename: String

        override val scalar1: String?

        val scalar3: String?

        companion object {
          fun Iface2.asImpl2() = this as? Impl2Iface2
        }
      }

      data class Impl2Iface2(
        override val __typename: String,
        override val scalar1: String?,
        override val scalar2: String?,
        override val scalar3: String?,
        val scalar4: String?
      ) : Iface2, Iface1.Impl2Iface2

      data class OtherIface2(
        override val __typename: String,
        override val scalar1: String?,
        override val scalar3: String?
      ) : Iface2, Iface1.Iface2
    }

    data class OtherIface1(
      override val __typename: String,
      override val iface2: Iface2?
    ) : Iface1 {
      interface Iface2 : Iface1.Iface2 {
        override val __typename: String

        override val scalar1: String?

        companion object {
          fun Iface2.asImpl2() = this as? Impl2Iface2
        }
      }

      data class Impl2Iface2(
        override val __typename: String,
        override val scalar1: String?,
        override val scalar2: String?
      ) : Iface2, Iface1.Impl2Iface2

      data class OtherIface2(
        override val __typename: String,
        override val scalar1: String?
      ) : Iface2, Iface1.Iface2
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "39e196d404a902ae82f38401080d30922ca3eadf8fd6dc53ef53d4673c6af264"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   iface1 {
     *     __typename
     *     ... on Iface1 {
     *       iface2 {
     *         __typename
     *         ... on Iface2 {
     *           scalar1
     *         }
     *         ... on Impl2 {
     *           scalar2
     *         }
     *       }
     *     }
     *     ... on Impl1 {
     *       iface2 {
     *         __typename
     *         ... on Iface2 {
     *           scalar3
     *         }
     *         ... on Impl2 {
     *           scalar4
     *         }
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { iface1 { __typename ... on Iface1 { iface2 { __typename ... on Iface2 { scalar1 } ... on Impl2 { scalar2 } } } ... on Impl1 { iface2 { __typename ... on Iface2 { scalar3 } ... on Impl2 { scalar4 } } } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
