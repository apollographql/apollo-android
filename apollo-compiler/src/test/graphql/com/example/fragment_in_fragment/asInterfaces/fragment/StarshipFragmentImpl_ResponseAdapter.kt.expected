//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.collections.List

object StarshipFragmentImpl_ResponseAdapter {
  object Data : ResponseAdapter<StarshipFragmentImpl.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "id", "name", "pilotConnection")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        StarshipFragmentImpl.Data {
      var __typename: String? = null
      var id: String? = null
      var name: String? = null
      var pilotConnection: StarshipFragmentImpl.Data.PilotConnection? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          1 -> id = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          2 -> name = NullableStringResponseAdapter.fromResponse(reader, responseAdapterCache)
          3 -> pilotConnection = PilotConnection.obj().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return StarshipFragmentImpl.Data(
        __typename = __typename!!,
        id = id!!,
        name = name,
        pilotConnection = pilotConnection
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: StarshipFragmentImpl.Data
    ) {
      writer.name("__typename")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
      writer.name("id")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.id)
      writer.name("name")
      NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
      writer.name("pilotConnection")
      PilotConnection.obj().nullable().toResponse(writer, responseAdapterCache,
          value.pilotConnection)
    }

    object PilotConnection : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection> {
      val RESPONSE_NAMES: List<String> = listOf("edges")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          StarshipFragmentImpl.Data.PilotConnection {
        var edges: List<StarshipFragmentImpl.Data.PilotConnection.Edge?>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> edges = Edge.obj().nullable().list().nullable().fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return StarshipFragmentImpl.Data.PilotConnection(
          edges = edges
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: StarshipFragmentImpl.Data.PilotConnection
      ) {
        writer.name("edges")
        Edge.obj().nullable().list().nullable().toResponse(writer, responseAdapterCache,
            value.edges)
      }

      object Edge : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
            StarshipFragmentImpl.Data.PilotConnection.Edge {
          var node: StarshipFragmentImpl.Data.PilotConnection.Edge.Node? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.obj().nullable().fromResponse(reader, responseAdapterCache)
              else -> break
            }
          }
          return StarshipFragmentImpl.Data.PilotConnection.Edge(
            node = node
          )
        }

        override fun toResponse(
          writer: JsonWriter,
          responseAdapterCache: ResponseAdapterCache,
          value: StarshipFragmentImpl.Data.PilotConnection.Edge
        ) {
          writer.name("node")
          Node.obj().nullable().toResponse(writer, responseAdapterCache, value.node)
        }

        object Node : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge.Node> {
          val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "homeworld")

          override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
              StarshipFragmentImpl.Data.PilotConnection.Edge.Node {
            var __typename: String? = null
            var name: String? = null
            var homeworld: StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
                1 -> name = NullableStringResponseAdapter.fromResponse(reader, responseAdapterCache)
                2 -> homeworld = Homeworld.obj().nullable().fromResponse(reader,
                    responseAdapterCache)
                else -> break
              }
            }
            return StarshipFragmentImpl.Data.PilotConnection.Edge.Node(
              __typename = __typename!!,
              name = name,
              homeworld = homeworld
            )
          }

          override fun toResponse(
            writer: JsonWriter,
            responseAdapterCache: ResponseAdapterCache,
            value: StarshipFragmentImpl.Data.PilotConnection.Edge.Node
          ) {
            writer.name("__typename")
            StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
            writer.name("name")
            NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
            writer.name("homeworld")
            Homeworld.obj().nullable().toResponse(writer, responseAdapterCache, value.homeworld)
          }

          object Homeworld :
              ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld> {
            val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

            override fun fromResponse(reader: JsonReader,
                responseAdapterCache: ResponseAdapterCache):
                StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld {
              var __typename: String? = null
              var name: String? = null
              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
                  1 -> name = NullableStringResponseAdapter.fromResponse(reader,
                      responseAdapterCache)
                  else -> break
                }
              }
              return StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld(
                __typename = __typename!!,
                name = name
              )
            }

            override fun toResponse(
              writer: JsonWriter,
              responseAdapterCache: ResponseAdapterCache,
              value: StarshipFragmentImpl.Data.PilotConnection.Edge.Node.Homeworld
            ) {
              writer.name("__typename")
              StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
              writer.name("name")
              NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
            }
          }
        }
      }
    }
  }
}
