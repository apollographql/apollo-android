// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.adapter

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ListResponseAdapter
import com.apollographql.apollo.api.internal.NullableResponseAdapter
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.json.JsonReader
import com.apollographql.apollo.api.internal.json.JsonWriter
import com.apollographql.apollo.api.internal.stringResponseAdapter
import com.apollographql.apollo.exception.UnexpectedNullValue
import com.example.fragment_in_fragment.AllStarships
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class AllStarships_ResponseAdapter(
  customScalarAdapters: CustomScalarAdapters
) : ResponseAdapter<AllStarships.Data> {
  val allStarshipsAdapter:
      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships?> =
      NullableResponseAdapter(AllStarships(customScalarAdapters))

  override fun fromResponse(reader: JsonReader, __typename: String?):
      com.example.fragment_in_fragment.AllStarships.Data {
    var allStarships: com.example.fragment_in_fragment.AllStarships.Data.AllStarships? = null
    reader.beginObject()
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> allStarships = allStarshipsAdapter.fromResponse(reader)
        else -> break
      }
    }
    reader.endObject()
    return com.example.fragment_in_fragment.AllStarships.Data(
      allStarships = allStarships
    )
  }

  override fun toResponse(writer: JsonWriter,
      value: com.example.fragment_in_fragment.AllStarships.Data) {
    allStarshipsAdapter.toResponse(writer, value.allStarships)
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("StarshipsConnection"),
        responseName = "allStarships",
        fieldName = "allStarships",
        arguments = mapOf<String, Any?>(
          "first" to 7),
        conditions = emptyList(),
        fieldSets = listOf(
          ResponseField.FieldSet(null, AllStarships.RESPONSE_FIELDS)
        ),
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }

  class AllStarships(
    customScalarAdapters: CustomScalarAdapters
  ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships> {
    val edgesAdapter:
        ResponseAdapter<List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge?>?>
        =
        NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edge(customScalarAdapters))))

    override fun fromResponse(reader: JsonReader, __typename: String?):
        com.example.fragment_in_fragment.AllStarships.Data.AllStarships {
      var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge?>? = null
      reader.beginObject()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = edgesAdapter.fromResponse(reader)
          else -> break
        }
      }
      reader.endObject()
      return com.example.fragment_in_fragment.AllStarships.Data.AllStarships(
        edges = edges
      )
    }

    override fun toResponse(writer: JsonWriter,
        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships) {
      edgesAdapter.toResponse(writer, value.edges)
    }

    companion object {
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipsEdge")),
          responseName = "edges",
          fieldName = "edges",
          arguments = emptyMap(),
          conditions = emptyList(),
          fieldSets = listOf(
            ResponseField.FieldSet(null, Edge.RESPONSE_FIELDS)
          ),
        )
      )

      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
    }

    class Edge(
      customScalarAdapters: CustomScalarAdapters
    ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge> {
      val nodeAdapter:
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node?>
          = NullableResponseAdapter(Node(customScalarAdapters))

      override fun fromResponse(reader: JsonReader, __typename: String?):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge {
        var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node? = null
        reader.beginObject()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> node = nodeAdapter.fromResponse(reader)
            else -> break
          }
        }
        reader.endObject()
        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge(
          node = node
        )
      }

      override fun toResponse(writer: JsonWriter,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge) {
        nodeAdapter.toResponse(writer, value.node)
      }

      companion object {
        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Object("Starship"),
            responseName = "node",
            fieldName = "node",
            arguments = emptyMap(),
            conditions = emptyList(),
            fieldSets = listOf(
              ResponseField.FieldSet("Starship", Node.StarshipNode.RESPONSE_FIELDS),
              ResponseField.FieldSet(null, Node.OtherNode.RESPONSE_FIELDS),
            ),
          )
        )

        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
      }

      class Node(
        customScalarAdapters: CustomScalarAdapters
      ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node>
          {
        val starshipNodeAdapter: StarshipNode =
            com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.StarshipNode(customScalarAdapters)

        val otherNodeAdapter: OtherNode =
            com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.OtherNode(customScalarAdapters)

        override fun fromResponse(reader: JsonReader, __typename: String?):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node {
          reader.beginObject()
          check(reader.nextName() == "__typename")
          val typename = reader.nextString()

          return when(typename) {
            "Starship" -> starshipNodeAdapter.fromResponse(reader, typename)
            else -> otherNodeAdapter.fromResponse(reader, typename)
          }
          .also { reader.endObject() }
        }

        override fun toResponse(writer: JsonWriter,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node) {
          when(value) {
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode -> starshipNodeAdapter.toResponse(writer, value)
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode -> otherNodeAdapter.toResponse(writer, value)
          }
        }

        class StarshipNode(
          customScalarAdapters: CustomScalarAdapters
        ) :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode>
            {
          val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

          val idAdapter: ResponseAdapter<String> = stringResponseAdapter

          val nameAdapter: ResponseAdapter<String?> = NullableResponseAdapter(stringResponseAdapter)

          val pilotConnectionAdapter:
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection?>
              = NullableResponseAdapter(PilotConnection(customScalarAdapters))

          override fun fromResponse(reader: JsonReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode {
            var __typename: String? = __typename
            var id: String? = null
            var name: String? = null
            var pilotConnection: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection? = null
            reader.beginObject()
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                    UnexpectedNullValue("__typename")
                1 -> id = idAdapter.fromResponse(reader) ?: throw UnexpectedNullValue("id")
                2 -> name = nameAdapter.fromResponse(reader)
                3 -> pilotConnection = pilotConnectionAdapter.fromResponse(reader)
                else -> break
              }
            }
            reader.endObject()
            return
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode(
              __typename = __typename!!,
              id = id!!,
              name = name,
              pilotConnection = pilotConnection
            )
          }

          override fun toResponse(writer: JsonWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode) {
            __typenameAdapter.toResponse(writer, value.__typename)
            idAdapter.toResponse(writer, value.id)
            nameAdapter.toResponse(writer, value.name)
            pilotConnectionAdapter.toResponse(writer, value.pilotConnection)
          }

          companion object {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField(
                type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                responseName = "__typename",
                fieldName = "__typename",
                arguments = emptyMap(),
                conditions = emptyList(),
                fieldSets = emptyList(),
              ),
              ResponseField(
                type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                responseName = "id",
                fieldName = "id",
                arguments = emptyMap(),
                conditions = emptyList(),
                fieldSets = emptyList(),
              ),
              ResponseField(
                type = ResponseField.Type.Named.Other("String"),
                responseName = "name",
                fieldName = "name",
                arguments = emptyMap(),
                conditions = emptyList(),
                fieldSets = emptyList(),
              ),
              ResponseField(
                type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
                responseName = "pilotConnection",
                fieldName = "pilotConnection",
                arguments = emptyMap(),
                conditions = emptyList(),
                fieldSets = listOf(
                  ResponseField.FieldSet(null, PilotConnection.RESPONSE_FIELDS)
                ),
              )
            )

            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
          }

          class PilotConnection(
            customScalarAdapters: CustomScalarAdapters
          ) :
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection>
              {
            val edgesAdapter:
                ResponseAdapter<List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge?>?>
                =
                NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edge(customScalarAdapters))))

            override fun fromResponse(reader: JsonReader, __typename: String?):
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection {
              var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge?>? = null
              reader.beginObject()
              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> edges = edgesAdapter.fromResponse(reader)
                  else -> break
                }
              }
              reader.endObject()
              return
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection(
                edges = edges
              )
            }

            override fun toResponse(writer: JsonWriter,
                value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection) {
              edgesAdapter.toResponse(writer, value.edges)
            }

            companion object {
              val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                ResponseField(
                  type =
                      ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipPilotsEdge")),
                  responseName = "edges",
                  fieldName = "edges",
                  arguments = emptyMap(),
                  conditions = emptyList(),
                  fieldSets = listOf(
                    ResponseField.FieldSet(null, Edge.RESPONSE_FIELDS)
                  ),
                )
              )

              val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
            }

            class Edge(
              customScalarAdapters: CustomScalarAdapters
            ) :
                ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge>
                {
              val nodeAdapter:
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node?>
                  = NullableResponseAdapter(Node(customScalarAdapters))

              override fun fromResponse(reader: JsonReader, __typename: String?):
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge {
                var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node? = null
                reader.beginObject()
                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> node = nodeAdapter.fromResponse(reader)
                    else -> break
                  }
                }
                reader.endObject()
                return
                    com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge(
                  node = node
                )
              }

              override fun toResponse(writer: JsonWriter,
                  value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge) {
                nodeAdapter.toResponse(writer, value.node)
              }

              companion object {
                val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                  ResponseField(
                    type = ResponseField.Type.Named.Object("Person"),
                    responseName = "node",
                    fieldName = "node",
                    arguments = emptyMap(),
                    conditions = emptyList(),
                    fieldSets = listOf(
                      ResponseField.FieldSet("Person", Node.PersonNode.RESPONSE_FIELDS),
                      ResponseField.FieldSet(null, Node.OtherNode.RESPONSE_FIELDS),
                    ),
                  )
                )

                val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
              }

              class Node(
                customScalarAdapters: CustomScalarAdapters
              ) :
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node>
                  {
                val personNodeAdapter: PersonNode =
                    com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode(customScalarAdapters)

                val otherNodeAdapter: OtherNode =
                    com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode(customScalarAdapters)

                override fun fromResponse(reader: JsonReader, __typename: String?):
                    com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node {
                  reader.beginObject()
                  check(reader.nextName() == "__typename")
                  val typename = reader.nextString()

                  return when(typename) {
                    "Person" -> personNodeAdapter.fromResponse(reader, typename)
                    else -> otherNodeAdapter.fromResponse(reader, typename)
                  }
                  .also { reader.endObject() }
                }

                override fun toResponse(writer: JsonWriter,
                    value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node) {
                  when(value) {
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode -> personNodeAdapter.toResponse(writer, value)
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode -> otherNodeAdapter.toResponse(writer, value)
                  }
                }

                class PersonNode(
                  customScalarAdapters: CustomScalarAdapters
                ) :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode>
                    {
                  val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

                  val nameAdapter: ResponseAdapter<String?> =
                      NullableResponseAdapter(stringResponseAdapter)

                  val homeworldAdapter:
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld?>
                      = NullableResponseAdapter(Homeworld(customScalarAdapters))

                  override fun fromResponse(reader: JsonReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode {
                    var __typename: String? = __typename
                    var name: String? = null
                    var homeworld: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld? = null
                    reader.beginObject()
                    while(true) {
                      when (reader.selectName(RESPONSE_NAMES)) {
                        0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                            UnexpectedNullValue("__typename")
                        1 -> name = nameAdapter.fromResponse(reader)
                        2 -> homeworld = homeworldAdapter.fromResponse(reader)
                        else -> break
                      }
                    }
                    reader.endObject()
                    return
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode(
                      __typename = __typename!!,
                      name = name,
                      homeworld = homeworld
                    )
                  }

                  override fun toResponse(writer: JsonWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode) {
                    __typenameAdapter.toResponse(writer, value.__typename)
                    nameAdapter.toResponse(writer, value.name)
                    homeworldAdapter.toResponse(writer, value.homeworld)
                  }

                  companion object {
                    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                      ResponseField(
                        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                        responseName = "__typename",
                        fieldName = "__typename",
                        arguments = emptyMap(),
                        conditions = emptyList(),
                        fieldSets = emptyList(),
                      ),
                      ResponseField(
                        type = ResponseField.Type.Named.Other("String"),
                        responseName = "name",
                        fieldName = "name",
                        arguments = emptyMap(),
                        conditions = emptyList(),
                        fieldSets = emptyList(),
                      ),
                      ResponseField(
                        type = ResponseField.Type.Named.Object("Planet"),
                        responseName = "homeworld",
                        fieldName = "homeworld",
                        arguments = emptyMap(),
                        conditions = emptyList(),
                        fieldSets = listOf(
                          ResponseField.FieldSet("Planet",
                              Homeworld.PlanetHomeworld.RESPONSE_FIELDS),
                          ResponseField.FieldSet(null, Homeworld.OtherHomeworld.RESPONSE_FIELDS),
                        ),
                      )
                    )

                    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                  }

                  class Homeworld(
                    customScalarAdapters: CustomScalarAdapters
                  ) :
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld>
                      {
                    val planetHomeworldAdapter: PlanetHomeworld =
                        com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld(customScalarAdapters)

                    val otherHomeworldAdapter: OtherHomeworld =
                        com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld(customScalarAdapters)

                    override fun fromResponse(reader: JsonReader, __typename: String?):
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld {
                      reader.beginObject()
                      check(reader.nextName() == "__typename")
                      val typename = reader.nextString()

                      return when(typename) {
                        "Planet" -> planetHomeworldAdapter.fromResponse(reader, typename)
                        else -> otherHomeworldAdapter.fromResponse(reader, typename)
                      }
                      .also { reader.endObject() }
                    }

                    override fun toResponse(writer: JsonWriter,
                        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld) {
                      when(value) {
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld -> planetHomeworldAdapter.toResponse(writer, value)
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld -> otherHomeworldAdapter.toResponse(writer, value)
                      }
                    }

                    class PlanetHomeworld(
                      customScalarAdapters: CustomScalarAdapters
                    ) :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld>
                        {
                      val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

                      val nameAdapter: ResponseAdapter<String?> =
                          NullableResponseAdapter(stringResponseAdapter)

                      override fun fromResponse(reader: JsonReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld {
                        var __typename: String? = __typename
                        var name: String? = null
                        reader.beginObject()
                        while(true) {
                          when (reader.selectName(RESPONSE_NAMES)) {
                            0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                                UnexpectedNullValue("__typename")
                            1 -> name = nameAdapter.fromResponse(reader)
                            else -> break
                          }
                        }
                        reader.endObject()
                        return
                            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld(
                          __typename = __typename!!,
                          name = name
                        )
                      }

                      override fun toResponse(writer: JsonWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld) {
                        __typenameAdapter.toResponse(writer, value.__typename)
                        nameAdapter.toResponse(writer, value.name)
                      }

                      companion object {
                        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                          ResponseField(
                            type =
                                ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                            responseName = "__typename",
                            fieldName = "__typename",
                            arguments = emptyMap(),
                            conditions = emptyList(),
                            fieldSets = emptyList(),
                          ),
                          ResponseField(
                            type = ResponseField.Type.Named.Other("String"),
                            responseName = "name",
                            fieldName = "name",
                            arguments = emptyMap(),
                            conditions = emptyList(),
                            fieldSets = emptyList(),
                          )
                        )

                        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                      }
                    }

                    class OtherHomeworld(
                      customScalarAdapters: CustomScalarAdapters
                    ) :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld>
                        {
                      val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

                      override fun fromResponse(reader: JsonReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld {
                        var __typename: String? = __typename
                        reader.beginObject()
                        while(true) {
                          when (reader.selectName(RESPONSE_NAMES)) {
                            0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                                UnexpectedNullValue("__typename")
                            else -> break
                          }
                        }
                        reader.endObject()
                        return
                            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld(
                          __typename = __typename!!
                        )
                      }

                      override fun toResponse(writer: JsonWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld) {
                        __typenameAdapter.toResponse(writer, value.__typename)
                      }

                      companion object {
                        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                          ResponseField(
                            type =
                                ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                            responseName = "__typename",
                            fieldName = "__typename",
                            arguments = emptyMap(),
                            conditions = emptyList(),
                            fieldSets = emptyList(),
                          )
                        )

                        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                      }
                    }
                  }
                }

                class OtherNode(
                  customScalarAdapters: CustomScalarAdapters
                ) :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode>
                    {
                  val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

                  override fun fromResponse(reader: JsonReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode {
                    var __typename: String? = __typename
                    reader.beginObject()
                    while(true) {
                      when (reader.selectName(RESPONSE_NAMES)) {
                        0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                            UnexpectedNullValue("__typename")
                        else -> break
                      }
                    }
                    reader.endObject()
                    return
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode(
                      __typename = __typename!!
                    )
                  }

                  override fun toResponse(writer: JsonWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode) {
                    __typenameAdapter.toResponse(writer, value.__typename)
                  }

                  companion object {
                    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                      ResponseField(
                        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                        responseName = "__typename",
                        fieldName = "__typename",
                        arguments = emptyMap(),
                        conditions = emptyList(),
                        fieldSets = emptyList(),
                      )
                    )

                    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                  }
                }
              }
            }
          }
        }

        class OtherNode(
          customScalarAdapters: CustomScalarAdapters
        ) :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode>
            {
          val __typenameAdapter: ResponseAdapter<String> = stringResponseAdapter

          override fun fromResponse(reader: JsonReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode {
            var __typename: String? = __typename
            reader.beginObject()
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = __typenameAdapter.fromResponse(reader) ?: throw
                    UnexpectedNullValue("__typename")
                else -> break
              }
            }
            reader.endObject()
            return
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode(
              __typename = __typename!!
            )
          }

          override fun toResponse(writer: JsonWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode) {
            __typenameAdapter.toResponse(writer, value.__typename)
          }

          companion object {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField(
                type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                responseName = "__typename",
                fieldName = "__typename",
                arguments = emptyMap(),
                conditions = emptyList(),
                fieldSets = emptyList(),
              )
            )

            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
          }
        }
      }
    }
  }
}
