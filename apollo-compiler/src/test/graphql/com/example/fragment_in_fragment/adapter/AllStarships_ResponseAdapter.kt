// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.adapter

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ListResponseAdapter
import com.apollographql.apollo.api.internal.NullableResponseAdapter
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.json.JsonReader
import com.apollographql.apollo.api.internal.json.JsonWriter
import com.apollographql.apollo.api.internal.stringResponseAdapter
import com.example.fragment_in_fragment.AllStarships
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class AllStarships_ResponseAdapter(
  customScalarAdapters: CustomScalarAdapters
) : ResponseAdapter<AllStarships.Data> {
  val nullableAllStarshipsAdapter:
      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships?> =
      NullableResponseAdapter(AllStarships(customScalarAdapters))

  override fun fromResponse(reader: JsonReader):
      com.example.fragment_in_fragment.AllStarships.Data {
    var allStarships: com.example.fragment_in_fragment.AllStarships.Data.AllStarships? = null
    reader.beginObject()
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> allStarships = nullableAllStarshipsAdapter.fromResponse(reader)
        else -> break
      }
    }
    reader.endObject()
    return com.example.fragment_in_fragment.AllStarships.Data(
      allStarships = allStarships
    )
  }

  override fun toResponse(writer: JsonWriter,
      value: com.example.fragment_in_fragment.AllStarships.Data) {
    writer.beginObject()
    writer.name("allStarships")
    nullableAllStarshipsAdapter.toResponse(writer, value.allStarships)
    writer.endObject()
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("StarshipsConnection"),
        fieldName = "allStarships",
        arguments = mapOf<String, Any?>(
          "first" to 7),
        fieldSets = listOf(
<<<<<<< HEAD
          ResponseField.FieldSet(null, AllStarships.RESPONSE_FIELDS)
=======
          ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
>>>>>>> dev-3.x
        ),
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }

  class AllStarships(
    customScalarAdapters: CustomScalarAdapters
  ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships> {
    val nullableListOfNullableEdgesAdapter:
        ResponseAdapter<List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>?>
        =
        NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edges(customScalarAdapters))))

    override fun fromResponse(reader: JsonReader):
        com.example.fragment_in_fragment.AllStarships.Data.AllStarships {
<<<<<<< HEAD
      var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>? = null
      reader.beginObject()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = nullableListOfNullableEdgesAdapter.fromResponse(reader)
          else -> break
=======
      return reader.run {
        var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> edges = readList<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges>(RESPONSE_FIELDS[0]) { reader ->
              reader.readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges> { reader ->
                Edges.fromResponse(reader)
              }
            }
            else -> break
          }
>>>>>>> dev-3.x
        }
      }
      reader.endObject()
      return com.example.fragment_in_fragment.AllStarships.Data.AllStarships(
        edges = edges
      )
    }

    override fun toResponse(writer: JsonWriter,
        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships) {
<<<<<<< HEAD
      writer.beginObject()
      writer.name("edges")
      nullableListOfNullableEdgesAdapter.toResponse(writer, value.edges)
      writer.endObject()
    }

    companion object {
=======
      writer.writeList(RESPONSE_FIELDS[0], value.edges) { value, listItemWriter ->
        listItemWriter.writeObject { writer ->
          Edges.toResponse(writer, value)
        }
      }
    }

    object Edges :
        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges> {
>>>>>>> dev-3.x
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipsEdge")),
          fieldName = "edges",
          fieldSets = listOf(
            ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
          ),
        )
      )

<<<<<<< HEAD
      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
    }

    class Edges(
      customScalarAdapters: CustomScalarAdapters
    ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges> {
      val nullableNodeAdapter:
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node?>
          = NullableResponseAdapter(Node(customScalarAdapters))

      override fun fromResponse(reader: JsonReader):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges {
        var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node? = null
        reader.beginObject()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> node = nullableNodeAdapter.fromResponse(reader)
            else -> break
          }
=======
      override fun fromResponse(reader: ResponseReader, __typename: String?):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges {
        return reader.run {
          var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> node = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node>(RESPONSE_FIELDS[0]) { reader ->
                Node.fromResponse(reader)
              }
              else -> break
            }
          }
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges(
            node = node
          )
>>>>>>> dev-3.x
        }
        reader.endObject()
        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges(
          node = node
        )
      }

<<<<<<< HEAD
      override fun toResponse(writer: JsonWriter,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges) {
        writer.beginObject()
        writer.name("node")
        nullableNodeAdapter.toResponse(writer, value.node)
        writer.endObject()
      }

      companion object {
        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Object("Starship"),
            fieldName = "node",
            fieldSets = listOf(
              ResponseField.FieldSet("Starship", Node.StarshipNode.RESPONSE_FIELDS),
              ResponseField.FieldSet(null, Node.OtherNode.RESPONSE_FIELDS),
            ),
          )
        )

        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
      }

      class Node(
        customScalarAdapters: CustomScalarAdapters
      ) :
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node>
          {
        val StarshipNodeAdapter: StarshipNode =
            com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.StarshipNode(customScalarAdapters)

        val OtherNodeAdapter: OtherNode =
            com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.OtherNode(customScalarAdapters)

        override fun fromResponse(reader: JsonReader):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node {
          reader.beginObject()
          check(reader.nextName() == "__typename")
          val typename = reader.nextString()

=======
      override fun toResponse(writer: ResponseWriter,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges) {
        if(value.node == null) {
          writer.writeObject(RESPONSE_FIELDS[0], null)
        } else {
          writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
            Node.toResponse(writer, value.node)
          }
        }
      }

      object Node :
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node>
          {
        override fun fromResponse(reader: ResponseReader, __typename: String?):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node {
          val typename = __typename ?: reader.readString(ResponseField.Typename)
>>>>>>> dev-3.x
          return when(typename) {
            "Starship" -> StarshipNodeAdapter.fromResponse(reader, typename)
            else -> OtherNodeAdapter.fromResponse(reader, typename)
          }
          .also { reader.endObject() }
        }

<<<<<<< HEAD
        override fun toResponse(writer: JsonWriter,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node) {
          when(value) {
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode -> StarshipNodeAdapter.toResponse(writer, value)
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode -> OtherNodeAdapter.toResponse(writer, value)
          }
        }

        class StarshipNode(
          customScalarAdapters: CustomScalarAdapters
        ) {
          val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

          val nullableStringAdapter: ResponseAdapter<String?> =
              NullableResponseAdapter(stringResponseAdapter)

          val nullablePilotConnectionAdapter:
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection?>
              = NullableResponseAdapter(PilotConnection(customScalarAdapters))

          fun fromResponse(reader: JsonReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode {
            var __typename: String? = __typename
            var id: String? = null
            var name: String? = null
            var pilotConnection: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = stringAdapter.fromResponse(reader)
                1 -> id = stringAdapter.fromResponse(reader)
                2 -> name = nullableStringAdapter.fromResponse(reader)
                3 -> pilotConnection = nullablePilotConnectionAdapter.fromResponse(reader)
                else -> break
              }
=======
        override fun toResponse(writer: ResponseWriter,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node) {
          when(value) {
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode -> StarshipNode.toResponse(writer, value)
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode -> OtherNode.toResponse(writer, value)
          }
        }

        object StarshipNode :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode>
            {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            ),
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "id",
              fieldName = "id",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Other("String"),
              responseName = "name",
              fieldName = "name",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
              responseName = "pilotConnection",
              fieldName = "pilotConnection",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = listOf(
                ResponseField.FieldSet(null, PilotConnection.RESPONSE_FIELDS)
              ),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode {
            return reader.run {
              var __typename: String? = __typename
              var id: String? = null
              var name: String? = null
              var pilotConnection: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  1 -> id = readString(RESPONSE_FIELDS[1])
                  2 -> name = readString(RESPONSE_FIELDS[2])
                  3 -> pilotConnection = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection>(RESPONSE_FIELDS[3]) { reader ->
                    PilotConnection.fromResponse(reader)
                  }
                  else -> break
                }
              }
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode(
                __typename = __typename!!,
                id = id!!,
                name = name,
                pilotConnection = pilotConnection
              )
>>>>>>> dev-3.x
            }
            return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode(
              __typename = __typename!!,
              id = id!!,
              name = name,
              pilotConnection = pilotConnection
            )
          }

<<<<<<< HEAD
          fun toResponse(writer: JsonWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode) {
            writer.beginObject()
            writer.name("__typename")
            stringAdapter.toResponse(writer, value.__typename)
            writer.name("id")
            stringAdapter.toResponse(writer, value.id)
            writer.name("name")
            nullableStringAdapter.toResponse(writer, value.name)
            writer.name("pilotConnection")
            nullablePilotConnectionAdapter.toResponse(writer, value.pilotConnection)
            writer.endObject()
          }

          companion object {
=======
          override fun toResponse(writer: ResponseWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
            writer.writeString(RESPONSE_FIELDS[1], value.id)
            writer.writeString(RESPONSE_FIELDS[2], value.name)
            if(value.pilotConnection == null) {
              writer.writeObject(RESPONSE_FIELDS[3], null)
            } else {
              writer.writeObject(RESPONSE_FIELDS[3]) { writer ->
                PilotConnection.toResponse(writer, value.pilotConnection)
              }
            }
          }

          object PilotConnection :
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection>
              {
>>>>>>> dev-3.x
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.Typename,
              ResponseField(
                type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                fieldName = "id",
              ),
              ResponseField(
                type = ResponseField.Type.Named.Other("String"),
                fieldName = "name",
              ),
              ResponseField(
                type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
                fieldName = "pilotConnection",
                fieldSets = listOf(
<<<<<<< HEAD
                  ResponseField.FieldSet(null, PilotConnection.RESPONSE_FIELDS)
=======
                  ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
>>>>>>> dev-3.x
                ),
              )
            )

<<<<<<< HEAD
            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
          }

          class PilotConnection(
            customScalarAdapters: CustomScalarAdapters
          ) :
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection>
              {
            val nullableListOfNullableEdgesAdapter:
                ResponseAdapter<List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges?>?>
                =
                NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edges(customScalarAdapters))))

            override fun fromResponse(reader: JsonReader):
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection {
              var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges?>? = null
              reader.beginObject()
              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> edges = nullableListOfNullableEdgesAdapter.fromResponse(reader)
                  else -> break
                }
=======
            override fun fromResponse(reader: ResponseReader, __typename: String?):
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection {
              return reader.run {
                var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges?>? = null
                while(true) {
                  when (selectField(RESPONSE_FIELDS)) {
                    0 -> edges = readList<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges>(RESPONSE_FIELDS[0]) { reader ->
                      reader.readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges> { reader ->
                        Edges.fromResponse(reader)
                      }
                    }
                    else -> break
                  }
                }
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection(
                  edges = edges
                )
>>>>>>> dev-3.x
              }
              reader.endObject()
              return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection(
                edges = edges
              )
            }

<<<<<<< HEAD
            override fun toResponse(writer: JsonWriter,
                value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection) {
              writer.beginObject()
              writer.name("edges")
              nullableListOfNullableEdgesAdapter.toResponse(writer, value.edges)
              writer.endObject()
            }

            companion object {
=======
            override fun toResponse(writer: ResponseWriter,
                value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection) {
              writer.writeList(RESPONSE_FIELDS[0], value.edges) { value, listItemWriter ->
                listItemWriter.writeObject { writer ->
                  Edges.toResponse(writer, value)
                }
              }
            }

            object Edges :
                ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges>
                {
>>>>>>> dev-3.x
              val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                ResponseField(
                  type =
                      ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipPilotsEdge")),
                  fieldName = "edges",
                  fieldSets = listOf(
                    ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
                  ),
                )
              )

<<<<<<< HEAD
              val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
            }

            class Edges(
              customScalarAdapters: CustomScalarAdapters
            ) :
                ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges>
                {
              val nullableNodeAdapter:
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node?>
                  = NullableResponseAdapter(Node(customScalarAdapters))

              override fun fromResponse(reader: JsonReader):
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges {
                var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node? = null
                reader.beginObject()
                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> node = nullableNodeAdapter.fromResponse(reader)
                    else -> break
                  }
=======
              override fun fromResponse(reader: ResponseReader, __typename: String?):
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges {
                return reader.run {
                  var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node? = null
                  while(true) {
                    when (selectField(RESPONSE_FIELDS)) {
                      0 -> node = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node>(RESPONSE_FIELDS[0]) { reader ->
                        Node.fromResponse(reader)
                      }
                      else -> break
                    }
                  }
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges(
                    node = node
                  )
>>>>>>> dev-3.x
                }
                reader.endObject()
                return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges(
                  node = node
                )
              }

<<<<<<< HEAD
              override fun toResponse(writer: JsonWriter,
                  value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges) {
                writer.beginObject()
                writer.name("node")
                nullableNodeAdapter.toResponse(writer, value.node)
                writer.endObject()
              }

              companion object {
                val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                  ResponseField(
                    type = ResponseField.Type.Named.Object("Person"),
                    fieldName = "node",
                    fieldSets = listOf(
                      ResponseField.FieldSet("Person", Node.PersonNode.RESPONSE_FIELDS),
                      ResponseField.FieldSet(null, Node.OtherNode.RESPONSE_FIELDS),
                    ),
                  )
                )

                val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
              }

              class Node(
                customScalarAdapters: CustomScalarAdapters
              ) :
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node>
                  {
                val PersonNodeAdapter: PersonNode =
                    com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode(customScalarAdapters)

                val OtherNodeAdapter: OtherNode =
                    com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode(customScalarAdapters)

                override fun fromResponse(reader: JsonReader):
                    com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node {
                  reader.beginObject()
                  check(reader.nextName() == "__typename")
                  val typename = reader.nextString()

=======
              override fun toResponse(writer: ResponseWriter,
                  value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges) {
                if(value.node == null) {
                  writer.writeObject(RESPONSE_FIELDS[0], null)
                } else {
                  writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
                    Node.toResponse(writer, value.node)
                  }
                }
              }

              object Node :
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node>
                  {
                override fun fromResponse(reader: ResponseReader, __typename: String?):
                    com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node {
                  val typename = __typename ?: reader.readString(ResponseField.Typename)
>>>>>>> dev-3.x
                  return when(typename) {
                    "Person" -> PersonNodeAdapter.fromResponse(reader, typename)
                    else -> OtherNodeAdapter.fromResponse(reader, typename)
                  }
                  .also { reader.endObject() }
                }

<<<<<<< HEAD
                override fun toResponse(writer: JsonWriter,
                    value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node) {
                  when(value) {
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode -> PersonNodeAdapter.toResponse(writer, value)
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode -> OtherNodeAdapter.toResponse(writer, value)
                  }
                }

                class PersonNode(
                  customScalarAdapters: CustomScalarAdapters
                ) {
                  val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

                  val nullableStringAdapter: ResponseAdapter<String?> =
                      NullableResponseAdapter(stringResponseAdapter)

                  val nullableHomeworldAdapter:
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld?>
                      = NullableResponseAdapter(Homeworld(customScalarAdapters))

                  fun fromResponse(reader: JsonReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode {
                    var __typename: String? = __typename
                    var name: String? = null
                    var homeworld: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld? = null
                    while(true) {
                      when (reader.selectName(RESPONSE_NAMES)) {
                        0 -> __typename = stringAdapter.fromResponse(reader)
                        1 -> name = nullableStringAdapter.fromResponse(reader)
                        2 -> homeworld = nullableHomeworldAdapter.fromResponse(reader)
                        else -> break
                      }
=======
                override fun toResponse(writer: ResponseWriter,
                    value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node) {
                  when(value) {
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode -> PersonNode.toResponse(writer, value)
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode -> OtherNode.toResponse(writer, value)
                  }
                }

                object PersonNode :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode>
                    {
                  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                    ResponseField(
                      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                      responseName = "__typename",
                      fieldName = "__typename",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      fieldSets = emptyList(),
                    ),
                    ResponseField(
                      type = ResponseField.Type.Named.Other("String"),
                      responseName = "name",
                      fieldName = "name",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      fieldSets = emptyList(),
                    ),
                    ResponseField(
                      type = ResponseField.Type.Named.Object("Planet"),
                      responseName = "homeworld",
                      fieldName = "homeworld",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      fieldSets = listOf(
                        ResponseField.FieldSet("Planet", Homeworld.PlanetHomeworld.RESPONSE_FIELDS),
                        ResponseField.FieldSet(null, Homeworld.OtherHomeworld.RESPONSE_FIELDS),
                      ),
                    )
                  )

                  override fun fromResponse(reader: ResponseReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode {
                    return reader.run {
                      var __typename: String? = __typename
                      var name: String? = null
                      var homeworld: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld? = null
                      while(true) {
                        when (selectField(RESPONSE_FIELDS)) {
                          0 -> __typename = readString(RESPONSE_FIELDS[0])
                          1 -> name = readString(RESPONSE_FIELDS[1])
                          2 -> homeworld = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld>(RESPONSE_FIELDS[2]) { reader ->
                            Homeworld.fromResponse(reader)
                          }
                          else -> break
                        }
                      }
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode(
                        __typename = __typename!!,
                        name = name,
                        homeworld = homeworld
                      )
>>>>>>> dev-3.x
                    }
                    return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode(
                      __typename = __typename!!,
                      name = name,
                      homeworld = homeworld
                    )
                  }

<<<<<<< HEAD
                  fun toResponse(writer: JsonWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode) {
                    writer.beginObject()
                    writer.name("__typename")
                    stringAdapter.toResponse(writer, value.__typename)
                    writer.name("name")
                    nullableStringAdapter.toResponse(writer, value.name)
                    writer.name("homeworld")
                    nullableHomeworldAdapter.toResponse(writer, value.homeworld)
                    writer.endObject()
                  }

                  companion object {
                    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                      ResponseField.Typename,
                      ResponseField(
                        type = ResponseField.Type.Named.Other("String"),
                        fieldName = "name",
                      ),
                      ResponseField(
                        type = ResponseField.Type.Named.Object("Planet"),
                        fieldName = "homeworld",
                        fieldSets = listOf(
                          ResponseField.FieldSet("Planet",
                              Homeworld.PlanetHomeworld.RESPONSE_FIELDS),
                          ResponseField.FieldSet(null, Homeworld.OtherHomeworld.RESPONSE_FIELDS),
                        ),
                      )
                    )

                    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                  }

                  class Homeworld(
                    customScalarAdapters: CustomScalarAdapters
                  ) :
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld>
                      {
                    val PlanetHomeworldAdapter: PlanetHomeworld =
                        com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(customScalarAdapters)

                    val OtherHomeworldAdapter: OtherHomeworld =
                        com.example.fragment_in_fragment.adapter.AllStarships_ResponseAdapter.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(customScalarAdapters)

                    override fun fromResponse(reader: JsonReader):
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld {
                      reader.beginObject()
                      check(reader.nextName() == "__typename")
                      val typename = reader.nextString()

=======
                  override fun toResponse(writer: ResponseWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode) {
                    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                    writer.writeString(RESPONSE_FIELDS[1], value.name)
                    if(value.homeworld == null) {
                      writer.writeObject(RESPONSE_FIELDS[2], null)
                    } else {
                      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
                        Homeworld.toResponse(writer, value.homeworld)
                      }
                    }
                  }

                  object Homeworld :
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld>
                      {
                    override fun fromResponse(reader: ResponseReader, __typename: String?):
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld {
                      val typename = __typename ?: reader.readString(ResponseField.Typename)
>>>>>>> dev-3.x
                      return when(typename) {
                        "Planet" -> PlanetHomeworldAdapter.fromResponse(reader, typename)
                        else -> OtherHomeworldAdapter.fromResponse(reader, typename)
                      }
                      .also { reader.endObject() }
                    }

<<<<<<< HEAD
                    override fun toResponse(writer: JsonWriter,
                        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld) {
                      when(value) {
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld -> PlanetHomeworldAdapter.toResponse(writer, value)
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld -> OtherHomeworldAdapter.toResponse(writer, value)
                      }
                    }

                    class PlanetHomeworld(
                      customScalarAdapters: CustomScalarAdapters
                    ) {
                      val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

                      val nullableStringAdapter: ResponseAdapter<String?> =
                          NullableResponseAdapter(stringResponseAdapter)

                      fun fromResponse(reader: JsonReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld {
                        var __typename: String? = __typename
                        var name: String? = null
                        while(true) {
                          when (reader.selectName(RESPONSE_NAMES)) {
                            0 -> __typename = stringAdapter.fromResponse(reader)
                            1 -> name = nullableStringAdapter.fromResponse(reader)
                            else -> break
                          }
=======
                    override fun toResponse(writer: ResponseWriter,
                        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld) {
                      when(value) {
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld -> PlanetHomeworld.toResponse(writer, value)
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld -> OtherHomeworld.toResponse(writer, value)
                      }
                    }

                    object PlanetHomeworld :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld>
                        {
                      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                        ResponseField(
                          type =
                              ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                          responseName = "__typename",
                          fieldName = "__typename",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          fieldSets = emptyList(),
                        ),
                        ResponseField(
                          type = ResponseField.Type.Named.Other("String"),
                          responseName = "name",
                          fieldName = "name",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          fieldSets = emptyList(),
                        )
                      )

                      override fun fromResponse(reader: ResponseReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld {
                        return reader.run {
                          var __typename: String? = __typename
                          var name: String? = null
                          while(true) {
                            when (selectField(RESPONSE_FIELDS)) {
                              0 -> __typename = readString(RESPONSE_FIELDS[0])
                              1 -> name = readString(RESPONSE_FIELDS[1])
                              else -> break
                            }
                          }
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(
                            __typename = __typename!!,
                            name = name
                          )
>>>>>>> dev-3.x
                        }
                        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(
                          __typename = __typename!!,
                          name = name
                        )
                      }

<<<<<<< HEAD
                      fun toResponse(writer: JsonWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld) {
                        writer.beginObject()
                        writer.name("__typename")
                        stringAdapter.toResponse(writer, value.__typename)
                        writer.name("name")
                        nullableStringAdapter.toResponse(writer, value.name)
                        writer.endObject()
=======
                      override fun toResponse(writer: ResponseWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld) {
                        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                        writer.writeString(RESPONSE_FIELDS[1], value.name)
>>>>>>> dev-3.x
                      }

<<<<<<< HEAD
                      companion object {
                        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                          ResponseField.Typename,
                          ResponseField(
                            type = ResponseField.Type.Named.Other("String"),
                            fieldName = "name",
                          )
=======
                    object OtherHomeworld :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld>
                        {
                      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                        ResponseField(
                          type =
                              ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                          responseName = "__typename",
                          fieldName = "__typename",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          fieldSets = emptyList(),
>>>>>>> dev-3.x
                        )

<<<<<<< HEAD
                        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
                      }
                    }

                    class OtherHomeworld(
                      customScalarAdapters: CustomScalarAdapters
                    ) {
                      val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

                      fun fromResponse(reader: JsonReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld {
                        var __typename: String? = __typename
                        while(true) {
                          when (reader.selectName(RESPONSE_NAMES)) {
                            0 -> __typename = stringAdapter.fromResponse(reader)
                            else -> break
                          }
=======
                      override fun fromResponse(reader: ResponseReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld {
                        return reader.run {
                          var __typename: String? = __typename
                          while(true) {
                            when (selectField(RESPONSE_FIELDS)) {
                              0 -> __typename = readString(RESPONSE_FIELDS[0])
                              else -> break
                            }
                          }
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(
                            __typename = __typename!!
                          )
>>>>>>> dev-3.x
                        }
                        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(
                          __typename = __typename!!
                        )
                      }

                      fun toResponse(writer: JsonWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld) {
                        writer.beginObject()
                        writer.name("__typename")
                        stringAdapter.toResponse(writer, value.__typename)
                        writer.endObject()
                      }

<<<<<<< HEAD
                      companion object {
                        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                          ResponseField.Typename
                        )

                        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
=======
                      override fun toResponse(writer: ResponseWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld) {
                        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
>>>>>>> dev-3.x
                      }
                    }
                  }
                }

<<<<<<< HEAD
                class OtherNode(
                  customScalarAdapters: CustomScalarAdapters
                ) {
                  val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

                  fun fromResponse(reader: JsonReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode {
                    var __typename: String? = __typename
                    while(true) {
                      when (reader.selectName(RESPONSE_NAMES)) {
                        0 -> __typename = stringAdapter.fromResponse(reader)
                        else -> break
                      }
=======
                object OtherNode :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode>
                    {
                  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                    ResponseField(
                      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                      responseName = "__typename",
                      fieldName = "__typename",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      fieldSets = emptyList(),
                    )
                  )

                  override fun fromResponse(reader: ResponseReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode {
                    return reader.run {
                      var __typename: String? = __typename
                      while(true) {
                        when (selectField(RESPONSE_FIELDS)) {
                          0 -> __typename = readString(RESPONSE_FIELDS[0])
                          else -> break
                        }
                      }
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode(
                        __typename = __typename!!
                      )
>>>>>>> dev-3.x
                    }
                    return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode(
                      __typename = __typename!!
                    )
                  }

                  fun toResponse(writer: JsonWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode) {
                    writer.beginObject()
                    writer.name("__typename")
                    stringAdapter.toResponse(writer, value.__typename)
                    writer.endObject()
                  }

<<<<<<< HEAD
                  companion object {
                    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                      ResponseField.Typename
                    )

                    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
=======
                  override fun toResponse(writer: ResponseWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.StarshipNode.PilotConnection.Edges.Node.OtherNode) {
                    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
>>>>>>> dev-3.x
                  }
                }
              }
            }
          }
        }

<<<<<<< HEAD
        class OtherNode(
          customScalarAdapters: CustomScalarAdapters
        ) {
          val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

          fun fromResponse(reader: JsonReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode {
            var __typename: String? = __typename
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = stringAdapter.fromResponse(reader)
                else -> break
              }
=======
        object OtherNode :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode>
            {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode {
            return reader.run {
              var __typename: String? = __typename
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  else -> break
                }
              }
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode(
                __typename = __typename!!
              )
>>>>>>> dev-3.x
            }
            return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode(
              __typename = __typename!!
            )
          }

<<<<<<< HEAD
          fun toResponse(writer: JsonWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode) {
            writer.beginObject()
            writer.name("__typename")
            stringAdapter.toResponse(writer, value.__typename)
            writer.endObject()
          }

          companion object {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.Typename
            )

            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
=======
          override fun toResponse(writer: ResponseWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node.OtherNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
>>>>>>> dev-3.x
          }
        }
      }
    }
  }
}
