//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.fragment_in_fragment.adapter

import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.example.fragment_in_fragment.AllStarships
import com.example.fragment_in_fragment.fragment.StarshipFragment
import com.example.fragment_in_fragment.fragment.adapter.StarshipFragmentImpl_ResponseAdapter
import kotlin.String
import kotlin.collections.List

object AllStarships_ResponseAdapter {
  object Data : ResponseAdapter<AllStarships.Data> {
    val RESPONSE_NAMES: List<String> = listOf("allStarships")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        com.example.fragment_in_fragment.AllStarships.Data {
      var allStarships: com.example.fragment_in_fragment.AllStarships.Data.AllStarships? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> allStarships = AllStarships.nullable().fromResponse(reader, responseAdapterCache)
          else -> break
        }
      }
      return com.example.fragment_in_fragment.AllStarships.Data(
        allStarships = allStarships
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: com.example.fragment_in_fragment.AllStarships.Data
    ) {
      writer.name("allStarships")
      AllStarships.nullable().toResponse(writer, responseAdapterCache, value.allStarships)
    }

    object AllStarships :
        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships> {
      val RESPONSE_NAMES: List<String> = listOf("edges")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships {
        var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> edges = Edges.nullable().list().nullable().fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships(
          edges = edges
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships
      ) {
        writer.name("edges")
        Edges.nullable().list().nullable().toResponse(writer, responseAdapterCache, value.edges)
      }

      object Edges :
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges {
          var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.nullable().fromResponse(reader, responseAdapterCache)
              else -> break
            }
          }
          return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges(
            node = node
          )
        }

        override fun toResponse(
          writer: JsonWriter,
          responseAdapterCache: ResponseAdapterCache,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges
        ) {
          writer.name("node")
          Node.nullable().toResponse(writer, responseAdapterCache, value.node)
        }

        object Node :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node>
            {
          val RESPONSE_NAMES: List<String> = listOf("__typename", "starshipFragment")

          override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node {
            var __typename: String? = null
            var starshipFragment: StarshipFragment? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
                1 -> starshipFragment = StarshipFragmentImpl_ResponseAdapter.StarshipFragment.nullable().fromResponse(reader,
                    responseAdapterCache)
                else -> break
              }
            }
            return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node(
              __typename = __typename!!,
              starshipFragment = starshipFragment
            )
          }

          override fun toResponse(
            writer: JsonWriter,
            responseAdapterCache: ResponseAdapterCache,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node
          ) {
            writer.name("__typename")
            StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
            writer.name("starshipFragment")
            StarshipFragmentImpl_ResponseAdapter.StarshipFragment.nullable().toResponse(writer,
                responseAdapterCache, value.starshipFragment)
          }
        }
      }
    }
  }
}
