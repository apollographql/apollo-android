// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo.api.GraphqlFragment
import kotlin.String
import kotlin.collections.List

/**
 * A single transport craft that has hyperdrive capability.
 */
data class StarshipFragmentImpl(
  override val __typename: String = "Starship",
  /**
   * The ID of an object
   */
  override val id: String,
  /**
   * The name of this starship. The common name, such as "Death Star".
   */
  override val name: String?,
  override val pilotConnection: PilotConnection?
) : StarshipFragment, GraphqlFragment {
  /**
   * A connection to a list of items.
   */
  data class PilotConnection(
    /**
     * A list of edges.
     */
    override val edges: List<Edge?>?
  ) : StarshipFragment.PilotConnection {
    /**
     * An edge in a connection.
     */
    data class Edge(
      /**
       * The item at the end of the edge
       */
      override val node: Node?
    ) : StarshipFragment.PilotConnection.Edge {
      /**
       * An individual person or character within the Star Wars universe.
       */
      interface Node : StarshipFragment.PilotConnection.Edge.Node {
        override val __typename: String

<<<<<<< HEAD
        override fun marshaller(): ResponseFieldMarshaller
=======
        interface Person : StarshipFragment.PilotConnection.Edge.Node,
            StarshipFragment.PilotConnection.Edge.Node.Person, PilotFragment, Node {
          override val __typename: String

          /**
           * The name of this person.
           */
          override val name: String?

          /**
           * A planet that this person was born on or inhabits.
           */
          override val homeworld: Homeworld?

          /**
           * A large mass, planet or planetoid in the Star Wars Universe, at the time of
           * 0 ABY.
           */
          interface Homeworld : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
              PilotFragment.Homeworld {
            override val __typename: String

            interface Planet : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
                StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld.Planet, PlanetFragment,
                PilotFragment.Homeworld.Planet, PilotFragment.Homeworld, Homeworld {
              override val __typename: String

              /**
               * The name of this planet.
               */
              override val name: String?
            }

            companion object {
              fun Homeworld.asPlanet():
                  StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld.Planet? = this as?
                  StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld.Planet

              fun Homeworld.planetFragment(): PlanetFragment? = this as? PlanetFragment
            }
          }
        }
>>>>>>> 7fb58f43... remove ResponseFieldMapper

        data class PersonNode(
          override val __typename: String,
          /**
           * The name of this person.
           */
          override val name: String?,
          /**
           * A planet that this person was born on or inhabits.
           */
          override val homeworld: Homeworld?
        ) : StarshipFragment.PilotConnection.Edge.Node,
<<<<<<< HEAD
            StarshipFragment.PilotConnection.Edge.Node.Person, PilotFragment, Node {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edge.Node.PersonNode.toResponse(writer, this)
            }
          }

=======
            StarshipFragment.PilotConnection.Edge.Node.Person, PilotFragment, Node, Person {
>>>>>>> 7fb58f43... remove ResponseFieldMapper
          /**
           * A large mass, planet or planetoid in the Star Wars Universe, at the time of
           * 0 ABY.
           */
          interface Homeworld : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
              PilotFragment.Homeworld {
            override val __typename: String

<<<<<<< HEAD
            override fun marshaller(): ResponseFieldMarshaller
=======
            interface Planet : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
                StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld.Planet, PlanetFragment,
                PilotFragment.Homeworld.Planet, PilotFragment.Homeworld, Person.Homeworld,
                Person.Homeworld.Planet, Homeworld {
              override val __typename: String

              /**
               * The name of this planet.
               */
              override val name: String?
            }
>>>>>>> 7fb58f43... remove ResponseFieldMapper

            data class PlanetHomeworld(
              override val __typename: String,
              /**
               * The name of this planet.
               */
              override val name: String?
            ) : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
                StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld.Planet, PlanetFragment,
<<<<<<< HEAD
                PilotFragment.Homeworld.Planet, PilotFragment.Homeworld, Homeworld {
              override fun marshaller(): ResponseFieldMarshaller {
                return ResponseFieldMarshaller { writer ->
                  StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld.toResponse(writer, this)
                }
              }
            }
=======
                PilotFragment.Homeworld.Planet, PilotFragment.Homeworld, Person.Homeworld,
                Person.Homeworld.Planet, Homeworld, Planet
>>>>>>> 7fb58f43... remove ResponseFieldMapper

            data class OtherHomeworld(
              override val __typename: String
            ) : StarshipFragment.PilotConnection.Edge.Node.Person.Homeworld,
<<<<<<< HEAD
                PilotFragment.Homeworld, Homeworld {
              override fun marshaller(): ResponseFieldMarshaller {
                return ResponseFieldMarshaller { writer ->
                  StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld.toResponse(writer, this)
                }
              }
=======
                PilotFragment.Homeworld, Person.Homeworld, Homeworld

            companion object {
              fun Homeworld.asHomeworld(): Person.Homeworld? = this as? Person.Homeworld

              fun Homeworld.asPlanet(): Planet? = this as? Planet

              fun Homeworld.planetFragment(): PlanetFragment? = this as? PlanetFragment
>>>>>>> 7fb58f43... remove ResponseFieldMapper
            }
          }
        }

        data class OtherNode(
          override val __typename: String
<<<<<<< HEAD
        ) : StarshipFragment.PilotConnection.Edge.Node, Node {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edge.Node.OtherNode.toResponse(writer, this)
            }
          }
=======
        ) : StarshipFragment.PilotConnection.Edge.Node, Node

        companion object {
          fun Node.asNode(): StarshipFragment.PilotConnection.Edge.Node? = this as?
              StarshipFragment.PilotConnection.Edge.Node

          fun Node.asPerson(): Person? = this as? Person

          fun Node.pilotFragment(): PilotFragment? = this as? PilotFragment
>>>>>>> 7fb58f43... remove ResponseFieldMapper
        }
      }
    }
  }
}
