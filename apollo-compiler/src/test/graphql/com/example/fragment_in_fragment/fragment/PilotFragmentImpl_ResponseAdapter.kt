// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.ResponseReader
import com.apollographql.apollo.api.internal.ResponseWriter
import kotlin.Array
import kotlin.String

object PilotFragmentImpl_ResponseAdapter : ResponseAdapter<PilotFragmentImpl> {
  private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.forString("__typename", "__typename", null, false, null),
    ResponseField.forString("name", "name", null, true, null),
    ResponseField.forObject("homeworld", "homeworld", null, true, null)
  )

  override fun fromResponse(reader: ResponseReader, __typename: String?): PilotFragmentImpl {
    return reader.run {
      var __typename: String? = __typename
      var name: String? = null
      var homeworld: PilotFragmentImpl.Homeworld? = null
      while(true) {
        when (selectField(RESPONSE_FIELDS)) {
          0 -> __typename = readString(RESPONSE_FIELDS[0])
          1 -> name = readString(RESPONSE_FIELDS[1])
          2 -> homeworld = readObject<PilotFragmentImpl.Homeworld>(RESPONSE_FIELDS[2]) { reader ->
            Homeworld.fromResponse(reader)
          }
          else -> break
        }
      }
      PilotFragmentImpl(
        __typename = __typename!!,
        name = name,
        homeworld = homeworld
      )
    }
  }

  override fun toResponse(writer: ResponseWriter, value: PilotFragmentImpl) {
    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
    writer.writeString(RESPONSE_FIELDS[1], value.name)
    if(value.homeworld == null) {
      writer.writeObject(RESPONSE_FIELDS[2], null)
    } else {
      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
        Homeworld.toResponse(writer, value.homeworld)
      }
    }
  }

  object Homeworld : ResponseAdapter<PilotFragmentImpl.Homeworld> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        PilotFragmentImpl.Homeworld {
      val typename = __typename ?: reader.readString(RESPONSE_FIELDS[0])
      return when(typename) {
        "Planet" -> PlanetHomeworld.fromResponse(reader, typename)
        else -> OtherHomeworld.fromResponse(reader, typename)
      }
    }

    override fun toResponse(writer: ResponseWriter, value: PilotFragmentImpl.Homeworld) {
      when(value) {
        is PilotFragmentImpl.Homeworld.PlanetHomeworld -> PlanetHomeworld.toResponse(writer, value)
        is PilotFragmentImpl.Homeworld.OtherHomeworld -> OtherHomeworld.toResponse(writer, value)
      }
    }

    object PlanetHomeworld : ResponseAdapter<PilotFragmentImpl.Homeworld.PlanetHomeworld> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null),
        ResponseField.forString("name", "name", null, true, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          PilotFragmentImpl.Homeworld.PlanetHomeworld {
        return reader.run {
          var __typename: String? = __typename
          var name: String? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> __typename = readString(RESPONSE_FIELDS[0])
              1 -> name = readString(RESPONSE_FIELDS[1])
              else -> break
            }
          }
          PilotFragmentImpl.Homeworld.PlanetHomeworld(
            __typename = __typename!!,
            name = name
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: PilotFragmentImpl.Homeworld.PlanetHomeworld) {
        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
        writer.writeString(RESPONSE_FIELDS[1], value.name)
      }
    }

    object OtherHomeworld : ResponseAdapter<PilotFragmentImpl.Homeworld.OtherHomeworld> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          PilotFragmentImpl.Homeworld.OtherHomeworld {
        return reader.run {
          var __typename: String? = __typename
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> __typename = readString(RESPONSE_FIELDS[0])
              else -> break
            }
          }
          PilotFragmentImpl.Homeworld.OtherHomeworld(
            __typename = __typename!!
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: PilotFragmentImpl.Homeworld.OtherHomeworld) {
        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      }
    }
  }
}
