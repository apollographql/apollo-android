// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo.api.GraphqlFragment
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.ResponseFieldMarshaller
import com.apollographql.apollo.api.ResponseReader
import kotlin.Array
import kotlin.String
import kotlin.Suppress

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter")
data class PilotFragment(
  val __typename: String = "Person",
  /**
   * The name of this person.
   */
  val name: String?,
  /**
   * A planet that this person was born on or inhabits.
   */
  val homeworld: Homeworld?
) : GraphqlFragment {
  override fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller {
    it.writeString(RESPONSE_FIELDS[0], __typename)
    it.writeString(RESPONSE_FIELDS[1], name)
    it.writeObject(RESPONSE_FIELDS[2], homeworld?.marshaller())
  }

  companion object {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null),
        ResponseField.forString("name", "name", null, true, null),
        ResponseField.forObject("homeworld", "homeworld", null, true, null)
        )

    val FRAGMENT_DEFINITION: String = """
        |fragment pilotFragment on Person {
        |  __typename
        |  name
        |  homeworld {
        |    __typename
        |    ...planetFragment
        |  }
        |}
        """.trimMargin()

    operator fun invoke(reader: ResponseReader): PilotFragment {
      val __typename = reader.readString(RESPONSE_FIELDS[0])
      val name = reader.readString(RESPONSE_FIELDS[1])
      val homeworld = reader.readObject<Homeworld>(RESPONSE_FIELDS[2]) { reader ->
        Homeworld(reader)
      }

      return PilotFragment(
        __typename = __typename,
        name = name,
        homeworld = homeworld
      )
    }
  }

  data class Homeworld(
    val __typename: String = "Planet",
    val fragments: Fragments
  ) {
    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller {
      it.writeString(RESPONSE_FIELDS[0], __typename)
      fragments.marshaller().marshal(it)
    }

    companion object {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forString("__typename", "__typename", null, false, null)
          )

      operator fun invoke(reader: ResponseReader): Homeworld {
        val __typename = reader.readString(RESPONSE_FIELDS[0])
        val fragments = Fragments(reader)
        return Homeworld(
          __typename = __typename,
          fragments = fragments
        )
      }
    }

    data class Fragments(
      val planetFragment: PlanetFragment
    ) {
      fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller {
        it.writeFragment(planetFragment.marshaller())
      }

      companion object {
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.forFragment("__typename", "__typename", listOf(
              ResponseField.Condition.typeCondition(arrayOf("Planet"))
            ))
            )

        operator fun invoke(reader: ResponseReader): Fragments {
          val planetFragment = reader.readFragment<PlanetFragment>(RESPONSE_FIELDS[0]) { reader ->
            PlanetFragment(reader)
          }
          return Fragments(
            planetFragment = planetFragment
          )
        }
      }
    }
  }
}
