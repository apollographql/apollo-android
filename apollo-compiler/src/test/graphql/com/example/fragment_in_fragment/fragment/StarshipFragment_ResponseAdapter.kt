// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.ResponseReader
import com.apollographql.apollo.api.internal.ResponseWriter
import com.example.fragment_in_fragment.type.CustomType
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
object StarshipFragment_ResponseAdapter : ResponseAdapter<StarshipFragment.StarshipFragmentImpl> {
  private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.forString("__typename", "__typename", null, false, null),
    ResponseField.forCustomType("id", "id", null, false, CustomType.ID, null),
    ResponseField.forString("name", "name", null, true, null),
    ResponseField.forObject("pilotConnection", "pilotConnection", null, true, null)
  )

  override fun fromResponse(reader: ResponseReader, __typename: String?):
      StarshipFragment.StarshipFragmentImpl {
    return reader.run {
      var __typename: String? = __typename
      var id: String? = null
      var name: String? = null
      var pilotConnection: StarshipFragment.PilotConnection1? = null
      while(true) {
        when (selectField(RESPONSE_FIELDS)) {
          0 -> __typename = readString(RESPONSE_FIELDS[0])
          1 -> id = readCustomType<String>(RESPONSE_FIELDS[1] as ResponseField.CustomTypeField)
          2 -> name = readString(RESPONSE_FIELDS[2])
          3 -> pilotConnection = readObject<StarshipFragment.PilotConnection1>(RESPONSE_FIELDS[3]) { reader ->
            PilotConnection1_ResponseAdapter.fromResponse(reader)
          }
          else -> break
        }
      }
      StarshipFragment.StarshipFragmentImpl(
        __typename = __typename!!,
        id = id!!,
        name = name,
        pilotConnection = pilotConnection
      )
    }
  }

  override fun toResponse(writer: ResponseWriter, value: StarshipFragment.StarshipFragmentImpl) {
    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
    writer.writeCustom(RESPONSE_FIELDS[1] as ResponseField.CustomTypeField, value.id)
    writer.writeString(RESPONSE_FIELDS[2], value.name)
    if(value.pilotConnection == null) {
      writer.writeObject(RESPONSE_FIELDS[3], null)
    } else {
      writer.writeObject(RESPONSE_FIELDS[3]) { writer ->
        PilotConnection1_ResponseAdapter.toResponse(writer, value.pilotConnection)
      }
    }
  }

  object Homeworld_ResponseAdapter : ResponseAdapter<StarshipFragment.Homeworld> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        StarshipFragment.Homeworld {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            else -> break
          }
        }
        StarshipFragment.Homeworld(
          __typename = __typename!!,
          name = name
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: StarshipFragment.Homeworld) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
    }
  }

  object Node1_ResponseAdapter : ResponseAdapter<StarshipFragment.Node1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, true, null),
      ResponseField.forObject("homeworld", "homeworld", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): StarshipFragment.Node1 {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var homeworld: StarshipFragment.Homeworld? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> homeworld = readObject<StarshipFragment.Homeworld>(RESPONSE_FIELDS[2]) { reader ->
              Homeworld_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        StarshipFragment.Node1(
          __typename = __typename!!,
          name = name,
          homeworld = homeworld
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: StarshipFragment.Node1) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      if(value.homeworld == null) {
        writer.writeObject(RESPONSE_FIELDS[2], null)
      } else {
        writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
          Homeworld_ResponseAdapter.toResponse(writer, value.homeworld)
        }
      }
    }
  }

  object Edge1_ResponseAdapter : ResponseAdapter<StarshipFragment.Edge1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forObject("node", "node", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): StarshipFragment.Edge1 {
      return reader.run {
        var node: StarshipFragment.Node1? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> node = readObject<StarshipFragment.Node1>(RESPONSE_FIELDS[0]) { reader ->
              Node1_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        StarshipFragment.Edge1(
          node = node
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: StarshipFragment.Edge1) {
      if(value.node == null) {
        writer.writeObject(RESPONSE_FIELDS[0], null)
      } else {
        writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
          Node1_ResponseAdapter.toResponse(writer, value.node)
        }
      }
    }
  }

  object PilotConnection1_ResponseAdapter : ResponseAdapter<StarshipFragment.PilotConnection1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forList("edges", "edges", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        StarshipFragment.PilotConnection1 {
      return reader.run {
        var edges: List<StarshipFragment.Edge1?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> edges = readList<StarshipFragment.Edge1>(RESPONSE_FIELDS[0]) { reader ->
              reader.readObject<StarshipFragment.Edge1> { reader ->
                Edge1_ResponseAdapter.fromResponse(reader)
              }
            }
            else -> break
          }
        }
        StarshipFragment.PilotConnection1(
          edges = edges
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: StarshipFragment.PilotConnection1) {
      writer.writeList(RESPONSE_FIELDS[0], value.edges) { values, listItemWriter ->
        values?.forEach { value ->
          if(value == null) {
            listItemWriter.writeObject(null)
          } else {
            listItemWriter.writeObject { writer ->
              Edge1_ResponseAdapter.toResponse(writer, value)
            }
          }
        }
      }
    }
  }
}
