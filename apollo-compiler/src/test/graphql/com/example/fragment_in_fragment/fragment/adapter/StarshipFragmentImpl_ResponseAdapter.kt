// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment.adapter

import com.apollographql.apollo.api.CustomScalarAdapters
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ListResponseAdapter
import com.apollographql.apollo.api.internal.NullableResponseAdapter
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.json.JsonReader
import com.apollographql.apollo.api.internal.json.JsonWriter
import com.apollographql.apollo.api.internal.stringResponseAdapter
import com.example.fragment_in_fragment.fragment.StarshipFragmentImpl
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class StarshipFragmentImpl_ResponseAdapter(
  customScalarAdapters: CustomScalarAdapters
) : ResponseAdapter<StarshipFragmentImpl.Data> {
  val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

  val nullableStringAdapter: ResponseAdapter<String?> =
      NullableResponseAdapter(stringResponseAdapter)

  val nullablePilotConnectionAdapter: ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection?> =
      NullableResponseAdapter(PilotConnection(customScalarAdapters))

  override fun fromResponse(reader: JsonReader): StarshipFragmentImpl.Data {
    var __typename: String? = null
    var id: String? = null
    var name: String? = null
    var pilotConnection: StarshipFragmentImpl.Data.PilotConnection? = null
    reader.beginObject()
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> __typename = stringAdapter.fromResponse(reader)
        1 -> id = stringAdapter.fromResponse(reader)
        2 -> name = nullableStringAdapter.fromResponse(reader)
        3 -> pilotConnection = nullablePilotConnectionAdapter.fromResponse(reader)
        else -> break
      }
    }
    reader.endObject()
    return StarshipFragmentImpl.Data(
      __typename = __typename!!,
      id = id!!,
      name = name,
      pilotConnection = pilotConnection
    )
  }

  override fun toResponse(writer: JsonWriter, value: StarshipFragmentImpl.Data) {
    writer.beginObject()
    writer.name("__typename")
    stringAdapter.toResponse(writer, value.__typename)
    writer.name("id")
    stringAdapter.toResponse(writer, value.id)
    writer.name("name")
    nullableStringAdapter.toResponse(writer, value.name)
    writer.name("pilotConnection")
    nullablePilotConnectionAdapter.toResponse(writer, value.pilotConnection)
    writer.endObject()
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.Typename,
      ResponseField(
        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
        fieldName = "id",
      ),
      ResponseField(
        type = ResponseField.Type.Named.Other("String"),
        fieldName = "name",
      ),
      ResponseField(
        type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
        fieldName = "pilotConnection",
        fieldSets = listOf(
<<<<<<< HEAD
          ResponseField.FieldSet(null, PilotConnection.RESPONSE_FIELDS)
=======
          ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
>>>>>>> dev-3.x
        ),
      )
    )

<<<<<<< HEAD
    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }

  class PilotConnection(
    customScalarAdapters: CustomScalarAdapters
  ) : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection> {
    val nullableListOfNullableEdgesAdapter:
        ResponseAdapter<List<StarshipFragmentImpl.Data.PilotConnection.Edges?>?> =
        NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edges(customScalarAdapters))))

    override fun fromResponse(reader: JsonReader): StarshipFragmentImpl.Data.PilotConnection {
      var edges: List<StarshipFragmentImpl.Data.PilotConnection.Edges?>? = null
      reader.beginObject()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = nullableListOfNullableEdgesAdapter.fromResponse(reader)
          else -> break
=======
    override fun fromResponse(reader: ResponseReader, __typename: String?):
        StarshipFragmentImpl.Data.PilotConnection {
      return reader.run {
        var edges: List<StarshipFragmentImpl.Data.PilotConnection.Edges?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> edges = readList<StarshipFragmentImpl.Data.PilotConnection.Edges>(RESPONSE_FIELDS[0]) { reader ->
              reader.readObject<StarshipFragmentImpl.Data.PilotConnection.Edges> { reader ->
                Edges.fromResponse(reader)
              }
            }
            else -> break
          }
>>>>>>> dev-3.x
        }
      }
      reader.endObject()
      return StarshipFragmentImpl.Data.PilotConnection(
        edges = edges
      )
    }

<<<<<<< HEAD
    override fun toResponse(writer: JsonWriter, value: StarshipFragmentImpl.Data.PilotConnection) {
      writer.beginObject()
      writer.name("edges")
      nullableListOfNullableEdgesAdapter.toResponse(writer, value.edges)
      writer.endObject()
    }

    companion object {
=======
    override fun toResponse(writer: ResponseWriter,
        value: StarshipFragmentImpl.Data.PilotConnection) {
      writer.writeList(RESPONSE_FIELDS[0], value.edges) { value, listItemWriter ->
        listItemWriter.writeObject { writer ->
          Edges.toResponse(writer, value)
        }
      }
    }

    object Edges : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges> {
>>>>>>> dev-3.x
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipPilotsEdge")),
          fieldName = "edges",
          fieldSets = listOf(
            ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
          ),
        )
      )

<<<<<<< HEAD
      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
    }

    class Edges(
      customScalarAdapters: CustomScalarAdapters
    ) : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges> {
      val nullableNodeAdapter:
          ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node?> =
          NullableResponseAdapter(Node(customScalarAdapters))

      override fun fromResponse(reader: JsonReader):
          StarshipFragmentImpl.Data.PilotConnection.Edges {
        var node: StarshipFragmentImpl.Data.PilotConnection.Edges.Node? = null
        reader.beginObject()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> node = nullableNodeAdapter.fromResponse(reader)
            else -> break
          }
=======
      override fun fromResponse(reader: ResponseReader, __typename: String?):
          StarshipFragmentImpl.Data.PilotConnection.Edges {
        return reader.run {
          var node: StarshipFragmentImpl.Data.PilotConnection.Edges.Node? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> node = readObject<StarshipFragmentImpl.Data.PilotConnection.Edges.Node>(RESPONSE_FIELDS[0]) { reader ->
                Node.fromResponse(reader)
              }
              else -> break
            }
          }
          StarshipFragmentImpl.Data.PilotConnection.Edges(
            node = node
          )
>>>>>>> dev-3.x
        }
        reader.endObject()
        return StarshipFragmentImpl.Data.PilotConnection.Edges(
          node = node
        )
      }

<<<<<<< HEAD
      override fun toResponse(writer: JsonWriter,
          value: StarshipFragmentImpl.Data.PilotConnection.Edges) {
        writer.beginObject()
        writer.name("node")
        nullableNodeAdapter.toResponse(writer, value.node)
        writer.endObject()
      }

      companion object {
        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Object("Person"),
            fieldName = "node",
            fieldSets = listOf(
              ResponseField.FieldSet("Person", Node.PersonNode.RESPONSE_FIELDS),
              ResponseField.FieldSet(null, Node.OtherNode.RESPONSE_FIELDS),
            ),
          )
        )

        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
      }

      class Node(
        customScalarAdapters: CustomScalarAdapters
      ) : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node> {
        val PersonNodeAdapter: PersonNode =
            com.example.fragment_in_fragment.fragment.adapter.StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edges.Node.PersonNode(customScalarAdapters)

        val OtherNodeAdapter: OtherNode =
            com.example.fragment_in_fragment.fragment.adapter.StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edges.Node.OtherNode(customScalarAdapters)

        override fun fromResponse(reader: JsonReader):
            StarshipFragmentImpl.Data.PilotConnection.Edges.Node {
          reader.beginObject()
          check(reader.nextName() == "__typename")
          val typename = reader.nextString()

=======
      override fun toResponse(writer: ResponseWriter,
          value: StarshipFragmentImpl.Data.PilotConnection.Edges) {
        if(value.node == null) {
          writer.writeObject(RESPONSE_FIELDS[0], null)
        } else {
          writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
            Node.toResponse(writer, value.node)
          }
        }
      }

      object Node : ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node> {
        override fun fromResponse(reader: ResponseReader, __typename: String?):
            StarshipFragmentImpl.Data.PilotConnection.Edges.Node {
          val typename = __typename ?: reader.readString(ResponseField.Typename)
>>>>>>> dev-3.x
          return when(typename) {
            "Person" -> PersonNodeAdapter.fromResponse(reader, typename)
            else -> OtherNodeAdapter.fromResponse(reader, typename)
          }
          .also { reader.endObject() }
        }

<<<<<<< HEAD
        override fun toResponse(writer: JsonWriter,
            value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node) {
          when(value) {
            is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode -> PersonNodeAdapter.toResponse(writer, value)
            is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode -> OtherNodeAdapter.toResponse(writer, value)
          }
        }

        class PersonNode(
          customScalarAdapters: CustomScalarAdapters
        ) {
          val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

          val nullableStringAdapter: ResponseAdapter<String?> =
              NullableResponseAdapter(stringResponseAdapter)

          val nullableHomeworldAdapter:
              ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld?>
              = NullableResponseAdapter(Homeworld(customScalarAdapters))

          fun fromResponse(reader: JsonReader, __typename: String?):
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode {
            var __typename: String? = __typename
            var name: String? = null
            var homeworld: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = stringAdapter.fromResponse(reader)
                1 -> name = nullableStringAdapter.fromResponse(reader)
                2 -> homeworld = nullableHomeworldAdapter.fromResponse(reader)
                else -> break
              }
=======
        override fun toResponse(writer: ResponseWriter,
            value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node) {
          when(value) {
            is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode -> PersonNode.toResponse(writer, value)
            is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode -> OtherNode.toResponse(writer, value)
          }
        }

        object PersonNode :
            ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode> {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Other("String"),
              responseName = "name",
              fieldName = "name",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Object("Planet"),
              responseName = "homeworld",
              fieldName = "homeworld",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = listOf(
                ResponseField.FieldSet("Planet", Homeworld.PlanetHomeworld.RESPONSE_FIELDS),
                ResponseField.FieldSet(null, Homeworld.OtherHomeworld.RESPONSE_FIELDS),
              ),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode {
            return reader.run {
              var __typename: String? = __typename
              var name: String? = null
              var homeworld: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  1 -> name = readString(RESPONSE_FIELDS[1])
                  2 -> homeworld = readObject<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld>(RESPONSE_FIELDS[2]) { reader ->
                    Homeworld.fromResponse(reader)
                  }
                  else -> break
                }
              }
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode(
                __typename = __typename!!,
                name = name,
                homeworld = homeworld
              )
>>>>>>> dev-3.x
            }
            return StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode(
              __typename = __typename!!,
              name = name,
              homeworld = homeworld
            )
          }

<<<<<<< HEAD
          fun toResponse(writer: JsonWriter,
              value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode) {
            writer.beginObject()
            writer.name("__typename")
            stringAdapter.toResponse(writer, value.__typename)
            writer.name("name")
            nullableStringAdapter.toResponse(writer, value.name)
            writer.name("homeworld")
            nullableHomeworldAdapter.toResponse(writer, value.homeworld)
            writer.endObject()
          }

          companion object {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.Typename,
              ResponseField(
                type = ResponseField.Type.Named.Other("String"),
                fieldName = "name",
              ),
              ResponseField(
                type = ResponseField.Type.Named.Object("Planet"),
                fieldName = "homeworld",
                fieldSets = listOf(
                  ResponseField.FieldSet("Planet", Homeworld.PlanetHomeworld.RESPONSE_FIELDS),
                  ResponseField.FieldSet(null, Homeworld.OtherHomeworld.RESPONSE_FIELDS),
                ),
              )
            )

            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
          }

          class Homeworld(
            customScalarAdapters: CustomScalarAdapters
          ) :
              ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld>
              {
            val PlanetHomeworldAdapter: PlanetHomeworld =
                com.example.fragment_in_fragment.fragment.adapter.StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(customScalarAdapters)

            val OtherHomeworldAdapter: OtherHomeworld =
                com.example.fragment_in_fragment.fragment.adapter.StarshipFragmentImpl_ResponseAdapter.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(customScalarAdapters)

            override fun fromResponse(reader: JsonReader):
                StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld {
              reader.beginObject()
              check(reader.nextName() == "__typename")
              val typename = reader.nextString()

=======
          override fun toResponse(writer: ResponseWriter,
              value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
            writer.writeString(RESPONSE_FIELDS[1], value.name)
            if(value.homeworld == null) {
              writer.writeObject(RESPONSE_FIELDS[2], null)
            } else {
              writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
                Homeworld.toResponse(writer, value.homeworld)
              }
            }
          }

          object Homeworld :
              ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld>
              {
            override fun fromResponse(reader: ResponseReader, __typename: String?):
                StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld {
              val typename = __typename ?: reader.readString(ResponseField.Typename)
>>>>>>> dev-3.x
              return when(typename) {
                "Planet" -> PlanetHomeworldAdapter.fromResponse(reader, typename)
                else -> OtherHomeworldAdapter.fromResponse(reader, typename)
              }
              .also { reader.endObject() }
            }

<<<<<<< HEAD
            override fun toResponse(writer: JsonWriter,
                value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld) {
              when(value) {
                is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld -> PlanetHomeworldAdapter.toResponse(writer, value)
                is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld -> OtherHomeworldAdapter.toResponse(writer, value)
              }
            }

            class PlanetHomeworld(
              customScalarAdapters: CustomScalarAdapters
            ) {
              val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

              val nullableStringAdapter: ResponseAdapter<String?> =
                  NullableResponseAdapter(stringResponseAdapter)

              fun fromResponse(reader: JsonReader, __typename: String?):
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld {
                var __typename: String? = __typename
                var name: String? = null
                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> __typename = stringAdapter.fromResponse(reader)
                    1 -> name = nullableStringAdapter.fromResponse(reader)
                    else -> break
                  }
=======
            override fun toResponse(writer: ResponseWriter,
                value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld) {
              when(value) {
                is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld -> PlanetHomeworld.toResponse(writer, value)
                is StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld -> OtherHomeworld.toResponse(writer, value)
              }
            }

            object PlanetHomeworld :
                ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld>
                {
              val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                ResponseField(
                  type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                  responseName = "__typename",
                  fieldName = "__typename",
                  arguments = emptyMap(),
                  conditions = emptyList(),
                  fieldSets = emptyList(),
                ),
                ResponseField(
                  type = ResponseField.Type.Named.Other("String"),
                  responseName = "name",
                  fieldName = "name",
                  arguments = emptyMap(),
                  conditions = emptyList(),
                  fieldSets = emptyList(),
                )
              )

              override fun fromResponse(reader: ResponseReader, __typename: String?):
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld {
                return reader.run {
                  var __typename: String? = __typename
                  var name: String? = null
                  while(true) {
                    when (selectField(RESPONSE_FIELDS)) {
                      0 -> __typename = readString(RESPONSE_FIELDS[0])
                      1 -> name = readString(RESPONSE_FIELDS[1])
                      else -> break
                    }
                  }
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(
                    __typename = __typename!!,
                    name = name
                  )
>>>>>>> dev-3.x
                }
                return StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld(
                  __typename = __typename!!,
                  name = name
                )
              }

<<<<<<< HEAD
              fun toResponse(writer: JsonWriter,
                  value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld) {
                writer.beginObject()
                writer.name("__typename")
                stringAdapter.toResponse(writer, value.__typename)
                writer.name("name")
                nullableStringAdapter.toResponse(writer, value.name)
                writer.endObject()
=======
              override fun toResponse(writer: ResponseWriter,
                  value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.PlanetHomeworld) {
                writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                writer.writeString(RESPONSE_FIELDS[1], value.name)
>>>>>>> dev-3.x
              }

<<<<<<< HEAD
              companion object {
                val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                  ResponseField.Typename,
                  ResponseField(
                    type = ResponseField.Type.Named.Other("String"),
                    fieldName = "name",
                  )
=======
            object OtherHomeworld :
                ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld>
                {
              val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                ResponseField(
                  type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                  responseName = "__typename",
                  fieldName = "__typename",
                  arguments = emptyMap(),
                  conditions = emptyList(),
                  fieldSets = emptyList(),
>>>>>>> dev-3.x
                )

<<<<<<< HEAD
                val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
              }
            }

            class OtherHomeworld(
              customScalarAdapters: CustomScalarAdapters
            ) {
              val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

              fun fromResponse(reader: JsonReader, __typename: String?):
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld {
                var __typename: String? = __typename
                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> __typename = stringAdapter.fromResponse(reader)
                    else -> break
                  }
=======
              override fun fromResponse(reader: ResponseReader, __typename: String?):
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld {
                return reader.run {
                  var __typename: String? = __typename
                  while(true) {
                    when (selectField(RESPONSE_FIELDS)) {
                      0 -> __typename = readString(RESPONSE_FIELDS[0])
                      else -> break
                    }
                  }
                  StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(
                    __typename = __typename!!
                  )
>>>>>>> dev-3.x
                }
                return StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld(
                  __typename = __typename!!
                )
              }

<<<<<<< HEAD
              fun toResponse(writer: JsonWriter,
                  value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld) {
                writer.beginObject()
                writer.name("__typename")
                stringAdapter.toResponse(writer, value.__typename)
                writer.endObject()
              }

              companion object {
                val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                  ResponseField.Typename
                )

                val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
=======
              override fun toResponse(writer: ResponseWriter,
                  value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.PersonNode.Homeworld.OtherHomeworld) {
                writer.writeString(RESPONSE_FIELDS[0], value.__typename)
>>>>>>> dev-3.x
              }
            }
          }
        }

<<<<<<< HEAD
        class OtherNode(
          customScalarAdapters: CustomScalarAdapters
        ) {
          val stringAdapter: ResponseAdapter<String> = stringResponseAdapter

          fun fromResponse(reader: JsonReader, __typename: String?):
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode {
            var __typename: String? = __typename
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = stringAdapter.fromResponse(reader)
                else -> break
              }
=======
        object OtherNode :
            ResponseAdapter<StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode> {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              fieldSets = emptyList(),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode {
            return reader.run {
              var __typename: String? = __typename
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  else -> break
                }
              }
              StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode(
                __typename = __typename!!
              )
>>>>>>> dev-3.x
            }
            return StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode(
              __typename = __typename!!
            )
          }

          fun toResponse(writer: JsonWriter,
              value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode) {
            writer.beginObject()
            writer.name("__typename")
            stringAdapter.toResponse(writer, value.__typename)
            writer.endObject()
          }

<<<<<<< HEAD
          companion object {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.Typename
            )

            val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
=======
          override fun toResponse(writer: ResponseWriter,
              value: StarshipFragmentImpl.Data.PilotConnection.Edges.Node.OtherNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
>>>>>>> dev-3.x
          }
        }
      }
    }
  }
}
