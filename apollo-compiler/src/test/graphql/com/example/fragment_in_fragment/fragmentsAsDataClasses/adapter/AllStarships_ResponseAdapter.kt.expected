// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.adapter

import com.apollographql.apollo3.api.ListResponseAdapter
import com.apollographql.apollo3.api.NullableResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.internal.json.MapJsonReader.Companion.buffer
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.fragment_in_fragment.AllStarships
import com.example.fragment_in_fragment.fragment.StarshipFragment
import com.example.fragment_in_fragment.fragment.adapter.StarshipFragment_ResponseAdapter
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class AllStarships_ResponseAdapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<AllStarships.Data> {
  private val nullableAllStarshipsAdapter:
      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships?> =
      NullableResponseAdapter(AllStarships(responseAdapterCache))

  override fun fromResponse(reader: JsonReader):
      com.example.fragment_in_fragment.AllStarships.Data {
    var allStarships: com.example.fragment_in_fragment.AllStarships.Data.AllStarships? = null
    reader.beginObject()
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> allStarships = nullableAllStarshipsAdapter.fromResponse(reader)
        else -> break
      }
    }
    reader.endObject()
    return com.example.fragment_in_fragment.AllStarships.Data(
      allStarships = allStarships
    )
  }

  override fun toResponse(writer: JsonWriter,
      value: com.example.fragment_in_fragment.AllStarships.Data) {
    writer.beginObject()
    writer.name("allStarships")
    nullableAllStarshipsAdapter.toResponse(writer, value.allStarships)
    writer.endObject()
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("StarshipsConnection"),
        fieldName = "allStarships",
        arguments = mapOf<String, Any?>(
          "first" to 7),
        fieldSets = listOf(
          ResponseField.FieldSet(null, AllStarships.RESPONSE_FIELDS)
        ),
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }

  class AllStarships(
    responseAdapterCache: ResponseAdapterCache
  ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships> {
    private val nullableListOfNullableEdgesAdapter:
        ResponseAdapter<List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>?>
        =
        NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edges(responseAdapterCache))))

    override fun fromResponse(reader: JsonReader):
        com.example.fragment_in_fragment.AllStarships.Data.AllStarships {
      var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges?>? = null
      reader.beginObject()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = nullableListOfNullableEdgesAdapter.fromResponse(reader)
          else -> break
        }
      }
      reader.endObject()
      return com.example.fragment_in_fragment.AllStarships.Data.AllStarships(
        edges = edges
      )
    }

    override fun toResponse(writer: JsonWriter,
        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships) {
      writer.beginObject()
      writer.name("edges")
      nullableListOfNullableEdgesAdapter.toResponse(writer, value.edges)
      writer.endObject()
    }

    companion object {
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipsEdge")),
          fieldName = "edges",
          fieldSets = listOf(
            ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
          ),
        )
      )

      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
    }

    class Edges(
      responseAdapterCache: ResponseAdapterCache
    ) : ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges> {
      private val nullableNodeAdapter:
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node?>
          = NullableResponseAdapter(Node(responseAdapterCache))

      override fun fromResponse(reader: JsonReader):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges {
        var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node? = null
        reader.beginObject()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> node = nullableNodeAdapter.fromResponse(reader)
            else -> break
          }
        }
        reader.endObject()
        return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges(
          node = node
        )
      }

      override fun toResponse(writer: JsonWriter,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges) {
        writer.beginObject()
        writer.name("node")
        nullableNodeAdapter.toResponse(writer, value.node)
        writer.endObject()
      }

      companion object {
        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Object("Starship"),
            fieldName = "node",
            fieldSets = listOf(
              ResponseField.FieldSet("Starship", StarshipFragment_ResponseAdapter.RESPONSE_FIELDS),
            ),
          )
        )

        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
      }

      class Node(
        responseAdapterCache: ResponseAdapterCache
      ) :
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node>
          {
        private val stringAdapter: ResponseAdapter<String> = StringResponseAdapter

        private val StarshipFragmentAdapter: StarshipFragment_ResponseAdapter =
            com.example.fragment_in_fragment.fragment.adapter.StarshipFragment_ResponseAdapter(responseAdapterCache)

        override fun fromResponse(reader: JsonReader):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node {
          val reader = reader.buffer()
          reader.beginObject()

          var __typename: String? = null
          var starshipFragment: StarshipFragment.Data? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = stringAdapter.fromResponse(reader)
              else -> break
            }
          }
          if (__typename in arrayOf("Starship")) {
            reader.rewind()
            starshipFragment = StarshipFragmentAdapter.fromResponse(reader)
          }

          return com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node(
            __typename = __typename!!,
            starshipFragment = starshipFragment
          )
          .also { reader.endObject() }
        }

        override fun toResponse(writer: JsonWriter,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edges.Node) {
          writer.beginObject()
          writer.name("__typename")
          stringAdapter.toResponse(writer, value.__typename)
          if (value.starshipFragment != null) StarshipFragmentAdapter.toResponse(writer,
              value.starshipFragment)
          writer.endObject()
        }

        companion object {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.Typename
          )

          val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
        }
      }
    }
  }
}
