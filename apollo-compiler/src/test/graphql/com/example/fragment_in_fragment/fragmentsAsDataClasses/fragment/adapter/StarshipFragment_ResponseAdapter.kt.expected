// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment.adapter

import com.apollographql.apollo3.api.ListResponseAdapter
import com.apollographql.apollo3.api.NullableResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.internal.json.MapJsonReader.Companion.buffer
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.fragment_in_fragment.fragment.PilotFragment
import com.example.fragment_in_fragment.fragment.StarshipFragment
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class StarshipFragment_ResponseAdapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<StarshipFragment.Data> {
  private val stringAdapter: ResponseAdapter<String> = StringResponseAdapter

  private val nullableStringAdapter: ResponseAdapter<String?> =
      NullableResponseAdapter(StringResponseAdapter)

  private val nullablePilotConnectionAdapter:
      ResponseAdapter<StarshipFragment.Data.PilotConnection?> =
      NullableResponseAdapter(PilotConnection(responseAdapterCache))

  override fun fromResponse(reader: JsonReader): StarshipFragment.Data {
    var __typename: String? = null
    var id: String? = null
    var name: String? = null
    var pilotConnection: StarshipFragment.Data.PilotConnection? = null
    reader.beginObject()
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> __typename = stringAdapter.fromResponse(reader)
        1 -> id = stringAdapter.fromResponse(reader)
        2 -> name = nullableStringAdapter.fromResponse(reader)
        3 -> pilotConnection = nullablePilotConnectionAdapter.fromResponse(reader)
        else -> break
      }
    }
    reader.endObject()
    return StarshipFragment.Data(
      __typename = __typename!!,
      id = id!!,
      name = name,
      pilotConnection = pilotConnection
    )
  }

  override fun toResponse(writer: JsonWriter, value: StarshipFragment.Data) {
    writer.beginObject()
    writer.name("__typename")
    stringAdapter.toResponse(writer, value.__typename)
    writer.name("id")
    stringAdapter.toResponse(writer, value.id)
    writer.name("name")
    nullableStringAdapter.toResponse(writer, value.name)
    writer.name("pilotConnection")
    nullablePilotConnectionAdapter.toResponse(writer, value.pilotConnection)
    writer.endObject()
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.Typename,
      ResponseField(
        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
        fieldName = "id",
      ),
      ResponseField(
        type = ResponseField.Type.Named.Other("String"),
        fieldName = "name",
      ),
      ResponseField(
        type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
        fieldName = "pilotConnection",
        fieldSets = listOf(
          ResponseField.FieldSet(null, PilotConnection.RESPONSE_FIELDS)
        ),
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }

  class PilotConnection(
    responseAdapterCache: ResponseAdapterCache
  ) : ResponseAdapter<StarshipFragment.Data.PilotConnection> {
    private val nullableListOfNullableEdgesAdapter:
        ResponseAdapter<List<StarshipFragment.Data.PilotConnection.Edges?>?> =
        NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Edges(responseAdapterCache))))

    override fun fromResponse(reader: JsonReader): StarshipFragment.Data.PilotConnection {
      var edges: List<StarshipFragment.Data.PilotConnection.Edges?>? = null
      reader.beginObject()
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = nullableListOfNullableEdgesAdapter.fromResponse(reader)
          else -> break
        }
      }
      reader.endObject()
      return StarshipFragment.Data.PilotConnection(
        edges = edges
      )
    }

    override fun toResponse(writer: JsonWriter, value: StarshipFragment.Data.PilotConnection) {
      writer.beginObject()
      writer.name("edges")
      nullableListOfNullableEdgesAdapter.toResponse(writer, value.edges)
      writer.endObject()
    }

    companion object {
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipPilotsEdge")),
          fieldName = "edges",
          fieldSets = listOf(
            ResponseField.FieldSet(null, Edges.RESPONSE_FIELDS)
          ),
        )
      )

      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
    }

    class Edges(
      responseAdapterCache: ResponseAdapterCache
    ) : ResponseAdapter<StarshipFragment.Data.PilotConnection.Edges> {
      private val nullableNodeAdapter:
          ResponseAdapter<StarshipFragment.Data.PilotConnection.Edges.Node?> =
          NullableResponseAdapter(Node(responseAdapterCache))

      override fun fromResponse(reader: JsonReader): StarshipFragment.Data.PilotConnection.Edges {
        var node: StarshipFragment.Data.PilotConnection.Edges.Node? = null
        reader.beginObject()
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> node = nullableNodeAdapter.fromResponse(reader)
            else -> break
          }
        }
        reader.endObject()
        return StarshipFragment.Data.PilotConnection.Edges(
          node = node
        )
      }

      override fun toResponse(writer: JsonWriter,
          value: StarshipFragment.Data.PilotConnection.Edges) {
        writer.beginObject()
        writer.name("node")
        nullableNodeAdapter.toResponse(writer, value.node)
        writer.endObject()
      }

      companion object {
        val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Object("Person"),
            fieldName = "node",
            fieldSets = listOf(
              ResponseField.FieldSet("Person", PilotFragment_ResponseAdapter.RESPONSE_FIELDS),
            ),
          )
        )

        val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
      }

      class Node(
        responseAdapterCache: ResponseAdapterCache
      ) : ResponseAdapter<StarshipFragment.Data.PilotConnection.Edges.Node> {
        private val stringAdapter: ResponseAdapter<String> = StringResponseAdapter

        private val PilotFragmentAdapter: PilotFragment_ResponseAdapter =
            com.example.fragment_in_fragment.fragment.adapter.PilotFragment_ResponseAdapter(responseAdapterCache)

        override fun fromResponse(reader: JsonReader):
            StarshipFragment.Data.PilotConnection.Edges.Node {
          val reader = reader.buffer()
          reader.beginObject()

          var __typename: String? = null
          var pilotFragment: PilotFragment.Data? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = stringAdapter.fromResponse(reader)
              else -> break
            }
          }
          if (__typename in arrayOf("Person")) {
            reader.rewind()
            pilotFragment = PilotFragmentAdapter.fromResponse(reader)
          }

          return StarshipFragment.Data.PilotConnection.Edges.Node(
            __typename = __typename!!,
            pilotFragment = pilotFragment
          )
          .also { reader.endObject() }
        }

        override fun toResponse(writer: JsonWriter,
            value: StarshipFragment.Data.PilotConnection.Edges.Node) {
          writer.beginObject()
          writer.name("__typename")
          stringAdapter.toResponse(writer, value.__typename)
          if (value.pilotFragment != null) PilotFragmentAdapter.toResponse(writer,
              value.pilotFragment)
          writer.endObject()
        }

        companion object {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.Typename
          )

          val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
        }
      }
    }
  }
}
