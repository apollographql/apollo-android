//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_inside_inline_fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.inline_fragment_inside_inline_fragment.adapter.TestQuery_ResponseAdapter
import com.example.inline_fragment_inside_inline_fragment.selections.TestQuerySelections
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections.root

  data class Data(
    val search: List<Search?>?
  ) : Query.Data {
    fun searchFilterNotNull(): List<Search>? = search?.filterNotNull()
  }

  data class Search(
    val __typename: String,
    /**
     * Synthetic field for inline fragment on Character
     */
    val asCharacter: AsCharacter?
  )

  data class AsCharacter(
    val __typename: String,
    /**
     * The name of the character
     */
    val name: String,
    /**
     * Synthetic field for inline fragment on Human
     */
    val asHuman: AsHuman?,
    /**
     * Synthetic field for inline fragment on Droid
     */
    val asDroid: AsDroid?
  )

  data class AsHuman(
    val __typename: String,
    /**
     * The name of the character
     */
    val name: String,
    /**
     * The home planet of the human, or null if unknown
     */
    val homePlanet: String?
  )

  data class AsDroid(
    val __typename: String,
    /**
     * The name of the character
     */
    val name: String,
    /**
     * This droid's primary function
     */
    val primaryFunction: String?
  )

  companion object {
    const val OPERATION_ID: String =
        "4f32ea4bdd2a95a29bde61273602c22c698cd333f1701001d1a339fb276c6438"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   search(text: "bla-bla") {
     *     __typename
     *     ... on Character {
     *       __typename
     *       name
     *       ... on Human {
     *         homePlanet
     *       }
     *       ... on Droid {
     *         primaryFunction
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { search(text: \"bla-bla\") { __typename ... on Character { __typename name ... on Human { homePlanet } ... on Droid { primaryFunction } } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
