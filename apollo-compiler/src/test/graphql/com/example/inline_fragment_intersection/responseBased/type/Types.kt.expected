//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_intersection.type

import com.apollographql.apollo3.api.CustomScalar
import com.apollographql.apollo3.api.Interface
import com.apollographql.apollo3.api.Object
import com.apollographql.apollo3.api.SchemaType
import com.apollographql.apollo3.api.Union
import com.apollographql.apollo3.api.possibleTypes
import kotlin.collections.List

/**
 * Auto generated constants representing the custom scalars, objects, interfaces and unions in the
 * schema. Input objects are left out because they are generated separately
 */
object Types {
  val Long: CustomScalar = CustomScalar("Long", "kotlin.Any")

  val Character: Interface = Interface("Character")

  val Thing: Interface = Interface("Thing")

  val Being: Interface = Interface("Being")

  val Alien: Interface = Interface("Alien")

  val AbstractWookie: Interface = Interface("AbstractWookie")

  val Droid: Object = Object("Droid", Character, Thing)

  val Human: Object = Object("Human", Character, Being)

  val Wookie: Object = Object("Wookie", Character, Being, Alien, AbstractWookie)

  val Ship: Object = Object("Ship", Thing)

  val TypeWithAllSortsOfFields: Object = Object("TypeWithAllSortsOfFields")

  val MerlinQuery: Object = Object("MerlinQuery")

  val MerlinHomesPdpResponse: Object = Object("MerlinHomesPdpResponse")

  val MerlinPdpListingDetailForNativeResponse: Object =
      Object("MerlinPdpListingDetailForNativeResponse")

  val MerlinPdpListingDescriptionNestedWithinListing: Object =
      Object("MerlinPdpListingDescriptionNestedWithinListing")

  val Query: Object = Object("Query")

  val Mutation: Object = Object("Mutation")

  val Anything: Union = Union("Anything", Human, Wookie, Droid, Ship)

  val all: List<SchemaType> = listOf(
        Long, Character, Thing, Being, Alien, AbstractWookie, Droid, Human, Wookie, Ship,
            TypeWithAllSortsOfFields, MerlinQuery, MerlinHomesPdpResponse,
            MerlinPdpListingDetailForNativeResponse, MerlinPdpListingDescriptionNestedWithinListing,
            Query, Mutation, Anything)


  fun possibleTypes(type: SchemaType): List<Object> = possibleTypes(all, type)
}
