//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_delegate

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_delegate.adapter.TestQuery_ResponseAdapter
import com.example.named_fragment_delegate.fragment.DroidDetails
import com.example.named_fragment_delegate.fragment.HumanDetails
import com.example.named_fragment_delegate.responsefields.TestQuery_ResponseFields
import kotlin.Any
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    interface Hero {
      val __typename: String

      companion object {
        fun Hero.droidDetails() = this as? DroidDetails

        fun Hero.humanDetails() = this as? HumanDetails

        fun Hero.asDroid() = this as? DroidHero

        fun Hero.asHuman() = this as? HumanHero
      }
    }

    data class DroidHero(
      override val __typename: String,
      /**
       * What others call this droid
       */
      override val name: String,
      /**
       * This droid's primary function
       */
      override val primaryFunction: String?,
      /**
       * This droid's friends, or an empty list if they have none
       */
      override val friends: List<Friend?>?
    ) : Hero, DroidDetails {
      fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

      data class Friend(
        /**
         * The name of the character
         */
        override val name: String
      ) : DroidDetails.Friend
    }

    data class HumanHero(
      override val __typename: String,
      /**
       * What this human calls themselves
       */
      override val name: String,
      /**
       * Profile link
       */
      override val profileLink: Any,
      /**
       * The friends of the human exposed as a connection with edges
       */
      override val friendsConnection: FriendsConnection
    ) : Hero, HumanDetails {
      data class FriendsConnection(
        /**
         * The edges for each of the character's friends.
         */
        override val edges: List<Edge?>?
      ) : HumanDetails.FriendsConnection {
        fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

        data class Edge(
          /**
           * The character represented by this friendship edge
           */
          override val node: Node?
        ) : HumanDetails.FriendsConnection.Edge {
          data class Node(
            /**
             * The name of the character
             */
            override val name: String
          ) : HumanDetails.FriendsConnection.Edge.Node
        }
      }
    }

    data class OtherHero(
      override val __typename: String
    ) : Hero
  }

  companion object {
    const val OPERATION_ID: String =
        "86c95fda2a4ae298423b83c975867d05a370338e66515941b37aa544915afca4"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     __typename
     *     ...DroidDetails
     *     ...HumanDetails
     *   }
     * }
     *
     * fragment DroidDetails on Droid {
     *   __typename
     *   name
     *   primaryFunction
     *   friends {
     *     name
     *   }
     * }
     *
     * fragment HumanDetails on Human {
     *   __typename
     *   name
     *   profileLink
     *   friendsConnection {
     *     edges {
     *       node {
     *         name
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { hero { __typename ...DroidDetails ...HumanDetails } }  fragment DroidDetails on Droid { __typename name primaryFunction friends { name } }  fragment HumanDetails on Human { __typename name profileLink friendsConnection { edges { node { name } } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
