//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.named_fragment_delegate.fragment

import com.apollographql.apollo3.api.AnyResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Any
import kotlin.String
import kotlin.collections.List

object HumanDetailsImpl_ResponseAdapter {
  object Data : ResponseAdapter<HumanDetailsImpl.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "profileLink",
        "friendsConnection")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        HumanDetailsImpl.Data {
      var __typename: String? = null
      var name: String? = null
      var profileLink: Any? = null
      var friendsConnection: HumanDetailsImpl.Data.FriendsConnection? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          2 -> profileLink = AnyResponseAdapter.fromResponse(reader, responseAdapterCache)
          3 -> friendsConnection = FriendsConnection.obj().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return HumanDetailsImpl.Data(
        __typename = __typename!!,
        name = name!!,
        profileLink = profileLink!!,
        friendsConnection = friendsConnection!!
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: HumanDetailsImpl.Data
    ) {
      writer.name("__typename")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
      writer.name("name")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
      writer.name("profileLink")
      AnyResponseAdapter.toResponse(writer, responseAdapterCache, value.profileLink)
      writer.name("friendsConnection")
      FriendsConnection.obj().toResponse(writer, responseAdapterCache, value.friendsConnection)
    }

    object FriendsConnection : ResponseAdapter<HumanDetailsImpl.Data.FriendsConnection> {
      val RESPONSE_NAMES: List<String> = listOf("edges")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          HumanDetailsImpl.Data.FriendsConnection {
        var edges: List<HumanDetailsImpl.Data.FriendsConnection.Edge?>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> edges = Edge.obj().nullable().list().nullable().fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return HumanDetailsImpl.Data.FriendsConnection(
          edges = edges
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: HumanDetailsImpl.Data.FriendsConnection
      ) {
        writer.name("edges")
        Edge.obj().nullable().list().nullable().toResponse(writer, responseAdapterCache,
            value.edges)
      }

      object Edge : ResponseAdapter<HumanDetailsImpl.Data.FriendsConnection.Edge> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
            HumanDetailsImpl.Data.FriendsConnection.Edge {
          var node: HumanDetailsImpl.Data.FriendsConnection.Edge.Node? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.obj().nullable().fromResponse(reader, responseAdapterCache)
              else -> break
            }
          }
          return HumanDetailsImpl.Data.FriendsConnection.Edge(
            node = node
          )
        }

        override fun toResponse(
          writer: JsonWriter,
          responseAdapterCache: ResponseAdapterCache,
          value: HumanDetailsImpl.Data.FriendsConnection.Edge
        ) {
          writer.name("node")
          Node.obj().nullable().toResponse(writer, responseAdapterCache, value.node)
        }

        object Node : ResponseAdapter<HumanDetailsImpl.Data.FriendsConnection.Edge.Node> {
          val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
              HumanDetailsImpl.Data.FriendsConnection.Edge.Node {
            var name: String? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
                else -> break
              }
            }
            return HumanDetailsImpl.Data.FriendsConnection.Edge.Node(
              name = name!!
            )
          }

          override fun toResponse(
            writer: JsonWriter,
            responseAdapterCache: ResponseAdapterCache,
            value: HumanDetailsImpl.Data.FriendsConnection.Edge.Node
          ) {
            writer.name("name")
            StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
          }
        }
      }
    }
  }
}
