//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.reserved_keywords.responsefields

import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import kotlin.Array

object TestQuery_ResponseFields {
  val fields: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("unused"),
      fieldName = "data",
      fieldSets = listOf(
        ResponseField.FieldSet(null, Data.fields),
      ),
    ),
  )


  object Data {
    val fields: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("unused"),
        fieldName = "hero",
        responseName = "yield",
        fieldSets = listOf(
          ResponseField.FieldSet(null, Yield.fields),
        ),
      ),
      ResponseField(
        type = ResponseField.Type.Named.Object("unused").list(),
        fieldName = "search",
        responseName = "objects",
        arguments = mapOf("text" to "abc"
        ),
        fieldSets = listOf(
          ResponseField.FieldSet(null, Objects.fields),
        ),
      ),
    )


    object Yield {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.Named.Other("unused").notNull(),
          fieldName = "id",
          responseName = "it",
        ),
        ResponseField(
          type = ResponseField.Type.Named.Other("unused").notNull(),
          fieldName = "name",
        ),
      )

    }

    object Objects {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
        ResponseField(
          type = ResponseField.Type.Named.Object("unused"),
          fieldName = "asCharacter",
          fieldSets = listOf(
            ResponseField.FieldSet(null, AsCharacter.fields),
          ),
        ),
      )


      object AsCharacter {
        val fields: Array<ResponseField> = arrayOf(
          ResponseField.Typename,
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "name",
          ),
        )

      }
    }
  }
}
