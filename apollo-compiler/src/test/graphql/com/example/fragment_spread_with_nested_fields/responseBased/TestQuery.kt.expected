//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_nested_fields

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragment_spread_with_nested_fields.adapter.TestQuery_ResponseAdapter
import com.example.fragment_spread_with_nested_fields.fragment.HeroDetails
import com.example.fragment_spread_with_nested_fields.responsefields.TestQuery_ResponseFields
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The friends of the character exposed as a connection with edges
       */
      override val friendsConnection: FriendsConnection
    ) : HeroDetails {
      data class FriendsConnection(
        /**
         * The total number of friends
         */
        override val totalCount: Int?,
        /**
         * The edges for each of the character's friends.
         */
        override val edges: List<Edge?>?
      ) : HeroDetails.FriendsConnection {
        fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

        data class Edge(
          /**
           * The character represented by this friendship edge
           */
          override val node: Node?
        ) : HeroDetails.FriendsConnection.Edge {
          data class Node(
            /**
             * The name of the character
             */
            override val name: String
          ) : HeroDetails.FriendsConnection.Edge.Node
        }
      }

      companion object {
        fun Hero.heroDetails() = this as? HeroDetails
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "2183aea0a46e49a1f2c473aca0c685b656ebfcc4d50045f6606aaf84d2783a53"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     __typename
     *     ...HeroDetails
     *   }
     * }
     *
     * fragment HeroDetails on Character {
     *   __typename
     *   name
     *   friendsConnection {
     *     totalCount
     *     edges {
     *       node {
     *         name
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { hero { __typename ...HeroDetails } }  fragment HeroDetails on Character { __typename name friendsConnection { totalCount edges { node { name } } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
