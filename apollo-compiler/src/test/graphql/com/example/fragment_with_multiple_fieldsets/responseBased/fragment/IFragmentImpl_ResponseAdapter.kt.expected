//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_multiple_fieldsets.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import kotlin.String
import kotlin.collections.List

object IFragmentImpl_ResponseAdapter {
  object Data : Adapter<IFragmentImpl.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IFragmentImpl.Data {
      reader.selectName(RESPONSE_NAMES).also {
        check(it == 0) {
          "__typename not present in first position"
        }
      }
      val __typename = reader.nextString()!!
      return when(__typename) {
        "A",
        -> AData.fromJson(reader, customScalarAdapters, __typename)
        else
        -> OtherData.fromJson(reader, customScalarAdapters, __typename)
      }
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: IFragmentImpl.Data
    ) {
      when(value) {
        is IFragmentImpl.AData -> AData.toJson(writer, customScalarAdapters, value)
        is IFragmentImpl.OtherData -> OtherData.toJson(writer, customScalarAdapters, value)
      }
    }
  }

  object AData {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "fieldA")

    fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String
    ): IFragmentImpl.AData {
      var __typename: String? = typename
      var fieldA: String? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> fieldA = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }
      return IFragmentImpl.AData(
        __typename = __typename!!,
        fieldA = fieldA
      )
    }

    fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: IFragmentImpl.AData
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("fieldA")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.fieldA)
    }
  }

  object OtherData {
    val RESPONSE_NAMES: List<String> = listOf("__typename")

    fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String
    ): IFragmentImpl.OtherData {
      var __typename: String? = typename
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }
      return IFragmentImpl.OtherData(
        __typename = __typename!!
      )
    }

    fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: IFragmentImpl.OtherData
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)
    }
  }
}
