//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_multiple_fieldsets.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.collections.List

object IFragmentImpl_ResponseAdapter {
  object IFragment : Adapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment> {
    val RESPONSE_NAMES: List<String> = listOf("__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.fragment_with_multiple_fieldsets.fragment.IFragment {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      var asA: com.example.fragment_with_multiple_fieldsets.fragment.IFragment.AsA? = null
      if (possibleTypes("A").evaluate(emptySet(), __typename)) {
        asA = com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.AsA.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.fragment_with_multiple_fieldsets.fragment.IFragment(
        __typename = __typename,
        asA = asA
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.fragment_with_multiple_fieldsets.fragment.IFragment
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.asA != null) {
        com.example.fragment_with_multiple_fieldsets.fragment.IFragmentImpl_ResponseAdapter.AsA.toJson(writer,
            customScalarAdapters, value.asA)
      }
    }
  }

  object AsA : Adapter<com.example.fragment_with_multiple_fieldsets.fragment.IFragment.AsA> {
    val RESPONSE_NAMES: List<String> = listOf("fieldA", "__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.fragment_with_multiple_fieldsets.fragment.IFragment.AsA {
      var fieldA: String? = null
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> fieldA = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.fragment_with_multiple_fieldsets.fragment.IFragment.AsA(
        fieldA = fieldA,
        __typename = __typename!!
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.fragment_with_multiple_fieldsets.fragment.IFragment.AsA
    ) {
      writer.name("fieldA")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.fieldA)

      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)
    }
  }
}
