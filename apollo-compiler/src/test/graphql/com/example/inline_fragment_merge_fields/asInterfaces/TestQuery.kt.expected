//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.inline_fragment_merge_fields

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.inline_fragment_merge_fields.adapter.TestQuery_ResponseAdapter
import com.example.inline_fragment_merge_fields.responsefields.TestQuery_ResponseFields
import kotlin.Any
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have variables
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      val __typename: String,
      /**
       * The name of the character
       */
      val name: String,
      /**
       * The friends of the character exposed as a connection with edges
       */
      val friendsConnection: FriendsConnection,
      /**
       * Profile link
       */
      val profileLink: Any
    ) {
      data class FriendsConnection(
        /**
         * The edges for each of the character's friends.
         */
        val edges: List<Edge?>?
      ) {
        fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

        data class Edge(
          /**
           * The character represented by this friendship edge
           */
          val node: Node?
        ) {
          data class Node(
            /**
             * The name of the character
             */
            val name: String
          )
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "516a2d4b3fe97536486d2d559538aab9949d7c7e0de7081caec02439a0cb3969"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   hero {
     *     __typename
     *     name
     *     friendsConnection {
     *       edges {
     *         node {
     *           name
     *         }
     *       }
     *     }
     *     ... on Character {
     *       name
     *       profileLink
     *       friendsConnection {
     *         edges {
     *           node {
     *             name
     *           }
     *         }
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { hero { __typename name friendsConnection { edges { node { name } } } ... on Character { name profileLink friendsConnection { edges { node { name } } } } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
