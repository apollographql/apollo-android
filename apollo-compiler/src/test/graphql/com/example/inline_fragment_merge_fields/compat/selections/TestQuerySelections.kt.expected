//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_merge_fields.selections

import com.apollographql.apollo3.api.CompiledCompoundType
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledOtherType
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import kotlin.collections.List

object TestQuerySelections {
  private val node: List<CompiledSelection> = listOf(
        CompiledField(
          name = "name",
          type = CompiledOtherType("unused").notNull()
        )
      )

  private val edges: List<CompiledSelection> = listOf(
        CompiledField(
          name = "node",
          type = CompiledCompoundType("unused"),
          selections = node
        )
      )

  private val friendsConnection: List<CompiledSelection> = listOf(
        CompiledField(
          name = "edges",
          type = CompiledCompoundType("unused").list(),
          selections = edges
        )
      )

  private val node1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "name",
          type = CompiledOtherType("unused").notNull()
        )
      )

  private val edges1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "node",
          type = CompiledCompoundType("unused"),
          selections = node1
        )
      )

  private val friendsConnection1: List<CompiledSelection> = listOf(
        CompiledField(
          name = "edges",
          type = CompiledCompoundType("unused").list(),
          selections = edges1
        )
      )

  private val onCharacter: List<CompiledSelection> = listOf(
        CompiledField(
          name = "name",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "profileLink",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "friendsConnection",
          type = CompiledCompoundType("unused").notNull(),
          selections = friendsConnection1
        )
      )

  private val hero: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "name",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "friendsConnection",
          type = CompiledCompoundType("unused").notNull(),
          selections = friendsConnection
        ),
        CompiledFragment(
          possibleTypes = listOf("Droid", "Human"),
          selections = onCharacter
        )
      )

  val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "hero",
          type = CompiledCompoundType("unused"),
          selections = hero
        )
      )
}
