// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.test_inline

import com.apollographql.apollo.api.Operation
import com.apollographql.apollo.api.OperationName
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.Response
import com.apollographql.apollo.api.ScalarTypeAdapters
import com.apollographql.apollo.api.ScalarTypeAdapters.Companion.DEFAULT
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer
import com.apollographql.apollo.api.internal.QueryDocumentMinifier
import com.apollographql.apollo.api.internal.ResponseFieldMapper
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser
import com.apollographql.apollo.api.internal.Throws
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import okio.Buffer
import okio.BufferedSource
import okio.ByteString
import okio.IOException

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class GetPage : Query<GetPage.Data, Operation.Variables> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun variables(): Operation.Variables = Operation.EMPTY_VARIABLES

  override fun name(): OperationName = OPERATION_NAME

  override fun responseFieldMapper(): ResponseFieldMapper<Data> {
    return ResponseFieldMapper { reader ->
      GetPage_ResponseAdapter.fromResponse(reader)
    }
  }

  @Throws(IOException::class)
  override fun parse(source: BufferedSource, scalarTypeAdapters: ScalarTypeAdapters):
      Response<Data> {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters)
  }

  @Throws(IOException::class)
  override fun parse(byteString: ByteString, scalarTypeAdapters: ScalarTypeAdapters):
      Response<Data> {
    return parse(Buffer().write(byteString), scalarTypeAdapters)
  }

  @Throws(IOException::class)
  override fun parse(source: BufferedSource): Response<Data> {
    return parse(source, DEFAULT)
  }

  @Throws(IOException::class)
  override fun parse(byteString: ByteString): Response<Data> {
    return parse(byteString, DEFAULT)
  }

  override fun composeRequestBody(scalarTypeAdapters: ScalarTypeAdapters): ByteString {
    return OperationRequestBodyComposer.compose(
      operation = this,
      autoPersistQueries = false,
      withQueryDocument = true,
      scalarTypeAdapters = scalarTypeAdapters
    )
  }

  override fun composeRequestBody(): ByteString = OperationRequestBodyComposer.compose(
    operation = this,
    autoPersistQueries = false,
    withQueryDocument = true,
    scalarTypeAdapters = DEFAULT
  )

  override fun composeRequestBody(
    autoPersistQueries: Boolean,
    withQueryDocument: Boolean,
    scalarTypeAdapters: ScalarTypeAdapters
  ): ByteString = OperationRequestBodyComposer.compose(
    operation = this,
    autoPersistQueries = autoPersistQueries,
    withQueryDocument = withQueryDocument,
    scalarTypeAdapters = scalarTypeAdapters
  )

  data class ParticularItemItem(
    val image: String,
    override val __typename: String = "ParticularItem",
    override val title: String
  ) : Item {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.ParticularItemItem_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  data class OtherItem(
    override val __typename: String = "Item",
    override val title: String
  ) : Item {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.OtherItem_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  interface Item : Item2 {
    override val __typename: String

    override val title: String

    fun asParticularItemItem(): ParticularItemItem? = this as? ParticularItemItem

    override fun marshaller(): ResponseFieldMarshaller
  }

  data class ParticularCollectionCollection(
    override val items: List<Item>,
    override val __typename: String = "ParticularCollection"
  ) : Collection {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.ParticularCollectionCollection_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  data class Item1(
    override val __typename: String = "Item",
    override val title: String
  ) : Item2 {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.Item1_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  data class OtherCollection(
    override val __typename: String = "Collection",
    override val items: List<Item1>
  ) : Collection {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.OtherCollection_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  interface Item2 {
    val __typename: String

    val title: String

    fun marshaller(): ResponseFieldMarshaller
  }

  interface Collection {
    val __typename: String

    val items: List<Item2>

    fun asParticularCollectionCollection(): ParticularCollectionCollection? = this as?
        ParticularCollectionCollection

    fun marshaller(): ResponseFieldMarshaller
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  data class Data(
    val collection: Collection
  ) : Operation.Data {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        GetPage_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "09c2f7755e4c0be866863ec0d0af37acd3cdedf89bb6384d838019477611707e"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query GetPage {
          |  collection {
          |    __typename
          |    items {
          |      __typename
          |      title
          |    }
          |    ... on ParticularCollection {
          |      items {
          |        __typename
          |        ... on ParticularItem {
          |          image
          |        }
          |      }
          |    }
          |  }
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: OperationName = object : OperationName {
      override fun name(): String {
        return "GetPage"
      }
    }
  }
}
