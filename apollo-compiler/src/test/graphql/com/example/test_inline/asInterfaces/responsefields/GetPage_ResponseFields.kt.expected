//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.test_inline.responsefields

import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import kotlin.Array

object GetPage_ResponseFields {
  val fields: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("unused"),
      fieldName = "data",
      fieldSets = listOf(
        ResponseField.FieldSet(null, Data.fields),
      ),
    ),
  )


  object Data {
    val fields: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("unused").notNull(),
        fieldName = "collection",
        fieldSets = listOf(
          ResponseField.FieldSet(null, OtherCollection.fields),
          ResponseField.FieldSet("ParticularCollection", ParticularCollectionCollection.fields),
        ),
      ),
    )


    object OtherCollection {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
        ResponseField(
          type = ResponseField.Type.Named.Object("unused").notNull().list().notNull(),
          fieldName = "items",
          fieldSets = listOf(
            ResponseField.FieldSet(null, Items.fields),
          ),
        ),
      )


      object Items {
        val fields: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "title",
          ),
        )

      }
    }

    object ParticularCollectionCollection {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
        ResponseField(
          type = ResponseField.Type.Named.Object("unused").notNull().list().notNull(),
          fieldName = "items",
          fieldSets = listOf(
            ResponseField.FieldSet(null, OtherItems.fields),
            ResponseField.FieldSet("ParticularItem", ParticularItemItems.fields),
          ),
        ),
      )


      object OtherItems {
        val fields: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "title",
          ),
          ResponseField.Typename,
        )

      }

      object ParticularItemItems {
        val fields: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "title",
          ),
          ResponseField.Typename,
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "image",
          ),
        )

      }
    }
  }
}
