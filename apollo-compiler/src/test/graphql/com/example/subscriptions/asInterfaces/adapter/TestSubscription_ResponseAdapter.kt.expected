//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.subscriptions.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.subscriptions.TestSubscription
import kotlin.Int
import kotlin.String
import kotlin.collections.List

object TestSubscription_ResponseAdapter {
  object Data : Adapter<TestSubscription.Data> {
    val RESPONSE_NAMES: List<String> = listOf("commentAdded")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestSubscription.Data {
      var commentAdded: TestSubscription.Data.CommentAdded? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> commentAdded = CommentAdded.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }
      return TestSubscription.Data(
        commentAdded = commentAdded
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: TestSubscription.Data
    ) {
      writer.name("commentAdded")
      CommentAdded.obj().nullable().toJson(writer, customScalarAdapters, value.commentAdded)
    }

    object CommentAdded : Adapter<TestSubscription.Data.CommentAdded> {
      val RESPONSE_NAMES: List<String> = listOf("id", "content")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestSubscription.Data.CommentAdded {
        var id: Int? = null
        var content: String? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> id = IntAdapter.fromJson(reader, customScalarAdapters)
            1 -> content = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }
        return TestSubscription.Data.CommentAdded(
          id = id!!,
          content = content!!
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: TestSubscription.Data.CommentAdded
      ) {
        writer.name("id")
        IntAdapter.toJson(writer, customScalarAdapters, value.id)
        writer.name("content")
        StringAdapter.toJson(writer, customScalarAdapters, value.content)
      }
    }
  }
}
