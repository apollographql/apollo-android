//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev8-SNAPSHOT'.
//
package com.example.subscriptions.type

import com.apollographql.apollo3.api.Object
import com.apollographql.apollo3.api.SchemaType
import com.apollographql.apollo3.api.possibleTypes
import kotlin.collections.List

/**
 * Auto generated constants representing the custom scalars, objects, interfaces and unions in the
 * schema. Input objects are left out because they are generated separately
 */
object Types {
  /**
   * A comment about an entry, submitted by a user
   */
  val Comment: Object = Object("Comment")

  /**
   * Information about a GitHub repository submitted to GitHunt
   */
  val Entry: Object = Object("Entry")

  val Mutation: Object = Object("Mutation")

  val Query: Object = Object("Query")

  /**
   * A repository object from the GitHub API. This uses the exact field names returned by the
   * GitHub API for simplicity, even though the convention for GraphQL is usually to camel case.
   */
  val Repository: Object = Object("Repository")

  val Subscription: Object = Object("Subscription")

  /**
   * A user object from the GitHub API. This uses the exact field names returned from the GitHub
   * API.
   */
  val User: Object = Object("User")

  /**
   * XXX to be removed
   */
  val Vote: Object = Object("Vote")

  val all: List<SchemaType> = listOf(
        Comment, Entry, Mutation, Query, Repository, Subscription, User, Vote)


  fun possibleTypes(type: SchemaType): List<Object> = possibleTypes(all, type)
}
