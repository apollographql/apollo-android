//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.interface_always_nested.responsefields

import com.apollographql.apollo3.api.ResponseField
import kotlin.Array

object TestQuery_ResponseFields {
  val fields: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("unused"),
      fieldName = "data",
      fieldSets = listOf(
        ResponseField.FieldSet(null, Data.fields),
      ),
    ),
  )


  object Data {
    val fields: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.Named.Object("unused"),
        fieldName = "root",
        fieldSets = listOf(
          ResponseField.FieldSet(null, Root.fields),
          ResponseField.FieldSet("AC", ARoot.fields),
          ResponseField.FieldSet("ABC", ABRoot.fields),
          ResponseField.FieldSet("BC", BRoot.fields),
        ),
      ),
    )


    object Root {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
      )

    }

    object ARoot {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
        ResponseField(
          type = ResponseField.Type.Named.Other("unused"),
          fieldName = "fieldA1",
        ),
      )

    }

    object ABRoot {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
        ResponseField(
          type = ResponseField.Type.Named.Other("unused"),
          fieldName = "fieldA1",
        ),
        ResponseField(
          type = ResponseField.Type.Named.Other("unused"),
          fieldName = "fieldB1",
        ),
      )

    }

    object BRoot {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField.Typename,
      )

    }
  }
}
