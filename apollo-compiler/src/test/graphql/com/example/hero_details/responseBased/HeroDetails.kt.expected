//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_details

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.hero_details.adapter.HeroDetails_ResponseAdapter
import com.example.hero_details.selections.HeroDetailsSelections
import com.example.hero_details.type.hero_type
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class HeroDetails : Query<HeroDetails.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return HeroDetails_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = HeroDetailsSelections.root

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      /**
       * Hero type
       */
      val type: hero_type,
      /**
       * The name of the character
       */
      val name: String,
      /**
       * The friends of the character exposed as a connection with edges
       */
      val friendsConnection: FriendsConnection
    ) {
      data class FriendsConnection(
        /**
         * The total number of friends
         */
        val totalCount: Int?,
        /**
         * The edges for each of the character's friends.
         */
        val edges: List<Edge?>?
      ) {
        fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

        data class Edge(
          /**
           * The character represented by this friendship edge
           */
          val node: Node?
        ) {
          data class Node(
            /**
             * The name of the character
             */
            val name: String
          )
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "8f6f2c3852a89d45ea7eaa08a249906a1fb8f1733c4f2326d0fb8fb75c4af1e3"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query HeroDetails {
     *   hero {
     *     type
     *     name
     *     friendsConnection {
     *       totalCount
     *       edges {
     *         node {
     *           name
     *         }
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query HeroDetails { hero { type name friendsConnection { totalCount edges { node { name } } } } }"

    const val OPERATION_NAME: String = "HeroDetails"
  }
}
