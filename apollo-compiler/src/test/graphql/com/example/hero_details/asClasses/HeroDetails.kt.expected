//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.hero_details

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.hero_details.adapter.HeroDetails_ResponseAdapter
import com.example.hero_details.responsefields.HeroDetails_ResponseFields
import com.example.hero_details.type.hero_type
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class HeroDetails : Query<HeroDetails.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have variables
  }

  override fun adapter(): ResponseAdapter<Data> {
    return HeroDetails_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      HeroDetails_ResponseFields.fields.first().fieldSets
  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      /**
       * Hero type
       */
      val type: hero_type,
      /**
       * The name of the character
       */
      val name: String,
      /**
       * The friends of the character exposed as a connection with edges
       */
      val friendsConnection: FriendsConnection
    ) {
      data class FriendsConnection(
        /**
         * The total number of friends
         */
        val totalCount: Int?,
        /**
         * The edges for each of the character's friends.
         */
        val edges: List<Edges?>?
      ) {
        fun edgesFilterNotNull(): List<Edges>? = edges?.filterNotNull()

        data class Edges(
          /**
           * The character represented by this friendship edge
           */
          val node: Node?
        ) {
          data class Node(
            /**
             * The name of the character
             */
            val name: String
          )
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "8f6f2c3852a89d45ea7eaa08a249906a1fb8f1733c4f2326d0fb8fb75c4af1e3"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query HeroDetails {
          |  hero {
          |    type
          |    name
          |    friendsConnection {
          |      totalCount
          |      edges {
          |        node {
          |          name
          |        }
          |      }
          |    }
          |  }
          |}
          """.trimMargin()
        )

    const val OPERATION_NAME: String = "HeroDetails"
  }
}
