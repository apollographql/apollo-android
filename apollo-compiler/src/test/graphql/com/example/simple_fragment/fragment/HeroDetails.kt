// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.simple_fragment.fragment

import com.apollographql.apollo.api.GraphqlFragment
import com.apollographql.apollo.api.internal.ResponseFieldMapper
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller
import com.apollographql.apollo.api.internal.ResponseReader
import kotlin.String
import kotlin.Suppress

/**
 * A character from the Star Wars universe
 */
@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
internal interface HeroDetails : GraphqlFragment {
  val __typename: String

  /**
   * A humanoid creature from the Star Wars universe
   */
  data class HumanHeroDetailsImpl(
    val delegate: HumanDetails.HumanDetailsImpl
  ) : HeroDetailsImpl, HumanDetails by delegate

  /**
   * A character from the Star Wars universe
   */
  data class OtherHeroDetailsImpl(
    override val __typename: String = "Character"
  ) : HeroDetails, HeroDetailsImpl {
    override fun marshaller(): ResponseFieldMarshaller {
      return ResponseFieldMarshaller { writer ->
        HeroDetails_ResponseAdapter.OtherHeroDetailsImpl_ResponseAdapter.toResponse(writer, this)
      }
    }
  }

  /**
   * A character from the Star Wars universe
   */
  interface HeroDetailsImpl : HeroDetails {
    override val __typename: String

    fun asHumanDetails(): HumanDetails? = this as? HumanDetails

    override fun marshaller(): ResponseFieldMarshaller
  }

  companion object {
    val FRAGMENT_DEFINITION: String = """
        |fragment HeroDetails on Character {
        |  __typename
        |  ... HumanDetails
        |}
        """.trimMargin()

    operator fun invoke(reader: ResponseReader): HeroDetails {
      return HeroDetails_ResponseAdapter.fromResponse(reader)
    }

    fun Mapper(): ResponseFieldMapper<HeroDetails> {
      return ResponseFieldMapper { reader ->
        HeroDetails_ResponseAdapter.fromResponse(reader)
      }
    }
  }
}
