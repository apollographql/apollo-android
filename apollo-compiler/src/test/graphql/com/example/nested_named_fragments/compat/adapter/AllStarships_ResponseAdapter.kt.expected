//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.nested_named_fragments.fragment.StarshipFragment
import kotlin.String
import kotlin.collections.List

object AllStarships_ResponseAdapter {
  object Data : Adapter<com.example.nested_named_fragments.AllStarships.Data> {
    val RESPONSE_NAMES: List<String> = listOf("allStarships")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.nested_named_fragments.AllStarships.Data {
      var allStarships: com.example.nested_named_fragments.AllStarships.AllStarships? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> allStarships = AllStarships.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.nested_named_fragments.AllStarships.Data(
        allStarships = allStarships
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.nested_named_fragments.AllStarships.Data
    ) {
      writer.name("allStarships")
      AllStarships.obj().nullable().toJson(writer, customScalarAdapters, value.allStarships)
    }
  }

  object AllStarships : Adapter<com.example.nested_named_fragments.AllStarships.AllStarships> {
    val RESPONSE_NAMES: List<String> = listOf("edges")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.nested_named_fragments.AllStarships.AllStarships {
      var edges: List<com.example.nested_named_fragments.AllStarships.Edge?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return com.example.nested_named_fragments.AllStarships.AllStarships(
        edges = edges
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.nested_named_fragments.AllStarships.AllStarships
    ) {
      writer.name("edges")
      Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
    }
  }

  object Edge : Adapter<com.example.nested_named_fragments.AllStarships.Edge> {
    val RESPONSE_NAMES: List<String> = listOf("node")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.nested_named_fragments.AllStarships.Edge {
      var node: com.example.nested_named_fragments.AllStarships.Node? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> node = Node.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.nested_named_fragments.AllStarships.Edge(
        node = node
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.nested_named_fragments.AllStarships.Edge
    ) {
      writer.name("node")
      Node.obj(true).nullable().toJson(writer, customScalarAdapters, value.node)
    }
  }

  object Node : Adapter<com.example.nested_named_fragments.AllStarships.Node> {
    val RESPONSE_NAMES: List<String> = listOf("__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.nested_named_fragments.AllStarships.Node {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      val fragments = com.example.nested_named_fragments.adapter.AllStarships_ResponseAdapter.Node.Fragments.fromJson(reader,
          customScalarAdapters)

      return com.example.nested_named_fragments.AllStarships.Node(
        __typename = __typename,
        fragments = fragments
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.nested_named_fragments.AllStarships.Node
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.example.nested_named_fragments.adapter.AllStarships_ResponseAdapter.Node.Fragments.toJson(writer,
          customScalarAdapters, value.fragments)
    }

    private object Fragments :
        Adapter<com.example.nested_named_fragments.AllStarships.Node.Fragments> {
      val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.nested_named_fragments.AllStarships.Node.Fragments {
        var __typename: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        reader.rewind()
        var starshipFragment: StarshipFragment? = null
        if (possibleTypes("Starship").evaluate(emptySet(), __typename)) {
          starshipFragment = com.example.nested_named_fragments.fragment.StarshipFragmentImpl_ResponseAdapter.StarshipFragment.fromJson(reader,
              customScalarAdapters)
        }

        return com.example.nested_named_fragments.AllStarships.Node.Fragments(
          starshipFragment = starshipFragment
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: com.example.nested_named_fragments.AllStarships.Node.Fragments
      ) {
        if (value.starshipFragment != null) {
          com.example.nested_named_fragments.fragment.StarshipFragmentImpl_ResponseAdapter.StarshipFragment.toJson(writer,
              customScalarAdapters, value.starshipFragment)
        }
      }
    }
  }
}
