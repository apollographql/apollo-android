//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments.selections

import com.apollographql.apollo3.api.CompiledCompoundType
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledOtherType
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.nested_named_fragments.fragment.selections.starshipFragmentSelections
import kotlin.collections.List

object AllStarshipsSelections {
  private val node: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Starship"),
          selections = starshipFragmentSelections.root
        )
      )

  private val edges: List<CompiledSelection> = listOf(
        CompiledField(
          name = "node",
          type = CompiledCompoundType("unused"),
          selections = node
        )
      )

  private val allStarships: List<CompiledSelection> = listOf(
        CompiledField(
          name = "edges",
          type = CompiledCompoundType("unused").list(),
          selections = edges
        )
      )

  val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "allStarships",
          type = CompiledCompoundType("unused"),
          arguments = mapOf("first" to 7
          ),
          selections = allStarships
        )
      )
}
