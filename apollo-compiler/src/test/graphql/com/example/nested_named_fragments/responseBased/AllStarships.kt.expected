//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_named_fragments

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.nested_named_fragments.adapter.AllStarships_ResponseAdapter
import com.example.nested_named_fragments.fragment.PilotFragment
import com.example.nested_named_fragments.fragment.PlanetFragment
import com.example.nested_named_fragments.fragment.StarshipFragment
import com.example.nested_named_fragments.responsefields.AllStarships_ResponseFields
import kotlin.String
import kotlin.collections.List

class AllStarships : Query<AllStarships.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return AllStarships_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = AllStarships_ResponseFields.fields.first().fieldSets

  data class Data(
    val allStarships: AllStarships?
  ) : Query.Data {
    data class AllStarships(
      /**
       * A list of edges.
       */
      val edges: List<Edge?>?
    ) {
      fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

      data class Edge(
        /**
         * The item at the end of the edge
         */
        val node: Node?
      ) {
        data class Node(
          val __typename: String,
          /**
           * The ID of an object
           */
          override val id: String,
          /**
           * The name of this starship. The common name, such as "Death Star".
           */
          override val name: String?,
          override val pilotConnection: PilotConnection?
        ) : StarshipFragment {
          data class PilotConnection(
            /**
             * A list of edges.
             */
            override val edges: List<Edge?>?
          ) : StarshipFragment.PilotConnection {
            fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

            data class Edge(
              /**
               * The item at the end of the edge
               */
              override val node: Node?
            ) : StarshipFragment.PilotConnection.Edge {
              data class Node(
                override val __typename: String,
                /**
                 * The name of this person.
                 */
                override val name: String?,
                /**
                 * A planet that this person was born on or inhabits.
                 */
                override val homeworld: Homeworld?
              ) : PilotFragment, StarshipFragment.PilotConnection.Edge.Node {
                data class Homeworld(
                  override val __typename: String,
                  /**
                   * The name of this planet.
                   */
                  override val name: String?
                ) : PlanetFragment, PilotFragment.Homeworld,
                    StarshipFragment.PilotConnection.Edge.Node.Homeworld {
                  companion object {
                    fun Homeworld.planetFragment() = this as? PlanetFragment
                  }
                }

                companion object {
                  fun Node.pilotFragment() = this as? PilotFragment
                }
              }
            }
          }

          companion object {
            fun Node.starshipFragment() = this as? StarshipFragment
          }
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "a76ec26a83546f1113b4f2d763d67118a12a70958ef57d44d3f33dedaf90ff72"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query AllStarships {
     *   allStarships(first: 7) {
     *     edges {
     *       node {
     *         __typename
     *         ...starshipFragment
     *       }
     *     }
     *   }
     * }
     *
     * fragment planetFragment on Planet {
     *   name
     * }
     *
     * fragment pilotFragment on Person {
     *   name
     *   homeworld {
     *     __typename
     *     ...planetFragment
     *   }
     * }
     *
     * fragment starshipFragment on Starship {
     *   id
     *   name
     *   pilotConnection {
     *     edges {
     *       node {
     *         __typename
     *         ...pilotFragment
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query AllStarships { allStarships(first: 7) { edges { node { __typename ...starshipFragment } } } }  fragment planetFragment on Planet { name }  fragment pilotFragment on Person { name homeworld { __typename ...planetFragment } }  fragment starshipFragment on Starship { id name pilotConnection { edges { node { __typename ...pilotFragment } } } }"

    const val OPERATION_NAME: String = "AllStarships"
  }
}
