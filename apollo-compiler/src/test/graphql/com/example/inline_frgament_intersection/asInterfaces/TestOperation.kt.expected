//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.inline_frgament_intersection

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.inline_frgament_intersection.adapter.TestOperation_ResponseAdapter
import com.example.inline_frgament_intersection.responsefields.TestOperation_ResponseFields
import com.example.inline_frgament_intersection.type.Race
import kotlin.Boolean
import kotlin.Double
import kotlin.String
import kotlin.collections.List

class TestOperation : Query<TestOperation.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have variables
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestOperation_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestOperation_ResponseFields.fields.first().fieldSets
  data class Data(
    val random: Random
  ) : Query.Data {
    interface Random {
      val __typename: String

      companion object {
        fun Random.asBeingRandom() = this as? BeingRandom

        fun Random.asBeingHumanRandom() = this as? BeingHumanRandom

        fun Random.asBeingWookieRandom() = this as? BeingWookieRandom
      }
    }

    interface BeingRandom : Random {
      override val __typename: String

      val name: String

      val friends: List<Friends>

      interface Friends {
        val __typename: String

        val name: String

        companion object {
          fun Friends.asWookieFriends() = this as? WookieFriends
        }
      }

      interface WookieFriends : Friends {
        override val __typename: String

        override val name: String

        val lifeExpectancy: Double?
      }
    }

    data class OtherRandom(
      override val __typename: String
    ) : Random

    data class BeingHumanRandom(
      override val __typename: String,
      override val name: String,
      override val friends: List<Friends>,
      val profilePictureUrl: String?
    ) : BeingRandom {
      interface Friends : BeingRandom.Friends {
        override val __typename: String

        override val name: String

        val isFamous: Boolean?

        companion object {
          fun Friends.asWookieFriends() = this as? WookieFriends
        }
      }

      data class OtherFriends(
        override val __typename: String,
        override val name: String,
        override val isFamous: Boolean?
      ) : Friends

      data class WookieFriends(
        override val __typename: String,
        override val name: String,
        override val lifeExpectancy: Double?,
        override val isFamous: Boolean?,
        val race: Race
      ) : Friends, BeingRandom.WookieFriends
    }

    data class BeingWookieRandom(
      override val __typename: String,
      override val name: String,
      override val friends: List<Friends>,
      val race: Race
    ) : BeingRandom {
      interface Friends : BeingRandom.Friends {
        override val __typename: String

        override val name: String

        val lifeExpectancy: Double?

        companion object {
          fun Friends.asWookieFriends() = this as? WookieFriends
        }
      }

      data class OtherFriends(
        override val __typename: String,
        override val name: String,
        override val lifeExpectancy: Double?
      ) : Friends

      data class WookieFriends(
        override val __typename: String,
        override val name: String,
        override val lifeExpectancy: Double?
      ) : Friends, BeingRandom.WookieFriends
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "c99acd467295cdc6cf49f2f0e260f5879de276fba742d6faa161453e53fbf9d4"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestOperation {
          |  random {
          |    __typename
          |    ... on Being {
          |      __typename
          |      name
          |      friends {
          |        __typename
          |        name
          |        ... on Wookie {
          |          lifeExpectancy
          |        }
          |      }
          |      ... on Human {
          |        profilePictureUrl
          |        friends {
          |          __typename
          |          isFamous
          |          ... on Wookie {
          |            race
          |          }
          |        }
          |      }
          |    }
          |    ... on Wookie {
          |      race
          |      friends {
          |        lifeExpectancy
          |      }
          |    }
          |    ... on Being {
          |      friends {
          |        __typename
          |        ... on Wookie {
          |          lifeExpectancy
          |        }
          |      }
          |    }
          |  }
          |}
          """.trimMargin()
        )

    const val OPERATION_NAME: String = "TestOperation"
  }
}
