interface Character {
  id: ID!
  name: String!
}

interface Thing {
  price: Float
  owner: Being
}

interface Being {
  name: String!
  possessions: [Thing!]!
  lifeExpectancy: Float
  friends: [Being!]!
  optionalFriends: [Being]
  isRebel: Boolean!
  isFamous: Boolean
}

interface Alien {
  homePlanet: String!
  race: Race!
}


type Droid implements Character & Thing {
  id: ID!
  name: String!
  price: Float
  owner: Being
  primaryFunction: String
}

type Human implements Character & Being {
  id: ID!
  name: String!
  profilePictureUrls: [String]
  profilePictureUrl: String
  possessions: [Thing!]!
  lifeExpectancy: Float
  friends: [Being!]!
  optionalFriends: [Being]
  favoriteSport: Sport
  parents: [Human!]!
  isRebel: Boolean!
  isFamous: Boolean
  appearsIn: [Episode!]!
  appearsInOptional: [Episode]
}

type Wookie implements Character & Being & Alien  {
  id: ID!
  race: Race!
  name: String!
  possessions: [Thing!]!
  lifeExpectancy: Float
  friends: [Being!]!
  optionalFriends: [Being]
  homePlanet: String!
  hairLength: Float
  isRebel: Boolean!
  isFamous: Boolean
}

type Ship implements Thing {
  id: ID!
  price: Float
  owner: Being
  speed: Float
}

enum Episode {
  A_NEW_HOPE
  THE_EMPIRE_STRIKE_BACK
  RETURN_OF_THE_JEDI
}

enum Race {
  WOOKIE
  GUMGAN
  EWOK
}

union Anything = Human | Wookie | Droid | Ship

type Query {
  random: Anything!
}


