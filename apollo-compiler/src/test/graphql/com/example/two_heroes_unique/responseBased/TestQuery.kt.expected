//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.two_heroes_unique

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.two_heroes_unique.adapter.TestQuery_ResponseAdapter
import com.example.two_heroes_unique.selections.TestQuerySelections
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections

  data class Data(
    val r2: R2?,
    val luke: Luke?
  ) : Query.Data {
    data class R2(
      /**
       * The name of the character
       */
      val name: String
    )

    data class Luke(
      /**
       * The ID of the character
       */
      val id: String,
      /**
       * The name of the character
       */
      val name: String
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "0a808c27d1275380ed06d359e1dd1f2a890ab67186df249f66c1afec47972e22"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   r2: hero {
     *     name
     *   }
     *   luke: hero(episode: EMPIRE) {
     *     id
     *     name
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { r2: hero { name } luke: hero(episode: EMPIRE) { id name } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
