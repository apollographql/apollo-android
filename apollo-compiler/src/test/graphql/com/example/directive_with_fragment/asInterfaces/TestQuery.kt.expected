//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.directive_with_fragment

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.directive_with_fragment.adapter.TestQuery_ResponseAdapter
import com.example.directive_with_fragment.adapter.TestQuery_VariablesAdapter
import com.example.directive_with_fragment.fragment.HeroDetails
import com.example.directive_with_fragment.responsefields.TestQuery_ResponseFields
import kotlin.Boolean
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val withDetails: Boolean,
  val skipHumanDetails: Boolean
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    interface Hero : HeroDetails {
      override val __typename: String

      /**
       * The ID of the character
       */
      val id: String

      /**
       * The name of the character
       */
      override val name: String

      companion object {
        fun Hero.HeroDetails() = this as? HeroDetails

        fun Hero.asCharacterHuman() = this as? HumanHero
      }
    }

    data class HumanHero(
      override val __typename: String,
      /**
       * The ID of the character
       */
      override val id: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The home planet of the human, or null if unknown
       */
      val homePlanet: String?
    ) : Hero, HeroDetails

    data class OtherHero(
      override val __typename: String,
      /**
       * The ID of the character
       */
      override val id: String,
      /**
       * The name of the character
       */
      override val name: String
    ) : Hero, HeroDetails
  }

  companion object {
    const val OPERATION_ID: String =
        "30b62a50ac3a1f769261a0eb5dc47fc918356f893cd4fa4d5e554dba405df74c"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($withDetails: Boolean!, $skipHumanDetails: Boolean!) {
     *   hero {
     *     __typename
     *     id
     *     ...HeroDetails @include(if: $withDetails) @skip(if: $skipHumanDetails)
     *     ...HumanDetails @include(if: $withDetails)
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}withDetails: Boolean!, ${'$'}skipHumanDetails: Boolean!) { hero { __typename id ...HeroDetails @include(if: ${'$'}withDetails) @skip(if: ${'$'}skipHumanDetails) ...HumanDetails @include(if: ${'$'}withDetails) } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
