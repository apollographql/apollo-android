//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.fragment.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.fragment.QueryFragmentImpl
import com.example.named_fragment_with_variables.type.adapter.UserQuery_InputAdapter
import kotlin.IllegalStateException

object QueryFragmentImpl_VariablesAdapter : Adapter<QueryFragmentImpl> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      QueryFragmentImpl = throw IllegalStateException("Input type used in output position")
  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    value: QueryFragmentImpl
  ) {
    writer.name("organizationId")
    StringAdapter.toJson(writer, customScalarAdapters, value.organizationId)
    writer.name("query")
    UserQuery_InputAdapter.obj().toJson(writer, customScalarAdapters, value.query)
    writer.name("size")
    IntAdapter.toJson(writer, customScalarAdapters, value.size)
  }
}
