// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.named_fragment_with_variables.adapter

import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.internal.IntResponseAdapter
import com.apollographql.apollo3.api.internal.ResponseAdapter
import com.apollographql.apollo3.api.internal.StringResponseAdapter
import com.apollographql.apollo3.api.internal.json.JsonReader
import com.apollographql.apollo3.api.internal.json.JsonWriter
import com.example.named_fragment_with_variables.GetUser
import com.example.named_fragment_with_variables.type.UserQuery
import com.example.named_fragment_with_variables.type.adapter.UserQuery_Adapter
import kotlin.IllegalStateException
import kotlin.Int
import kotlin.String

class GetUser_Adapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<GetUser> {
  private val stringAdapter: ResponseAdapter<String> = StringResponseAdapter

  private val userQueryAdapter: ResponseAdapter<UserQuery> = UserQuery_Adapter(responseAdapterCache)

  private val intAdapter: ResponseAdapter<Int> = IntResponseAdapter

  override fun fromResponse(reader: JsonReader): GetUser = throw
      IllegalStateException("Input type used in output position")
  override fun toResponse(writer: JsonWriter, value: GetUser) {
    writer.beginObject()
    writer.name("organizationId")
    stringAdapter.toResponse(writer, value.organizationId)
    writer.name("query")
    userQueryAdapter.toResponse(writer, value.query)
    writer.name("size")
    intAdapter.toResponse(writer, value.size)
    writer.endObject()
  }
}
