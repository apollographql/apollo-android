//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev6-SNAPSHOT'.
//
package com.example.named_fragment_with_variables

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.adapter.GetUser_ResponseAdapter
import com.example.named_fragment_with_variables.adapter.GetUser_VariablesAdapter
import com.example.named_fragment_with_variables.responsefields.GetUser_ResponseFields
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

data class GetUser(
  val organizationId: String,
  val query: UserQuery,
  val size: Int
) : Query<GetUser.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    GetUser_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return GetUser_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      GetUser_ResponseFields.fields.first().fieldSets
  data class Data(
    override val __typename: String,
    override val organization: Organization?
  ) : QueryFragment.Data, Query.Data {
    data class Organization(
      override val id: String,
      override val user: List<User>
    ) : QueryFragment.Data.Organization {
      data class User(
        override val __typename: String,
        override val firstName: String,
        override val lastName: String,
        override val avatar: String
      ) : UserFragment.Data, QueryFragment.Data.Organization.User
    }
  }

  companion object {
    const val OPERATION_ID: String = "GetUser"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query GetUser(${'$'}organizationId: String!, ${'$'}query: UserQuery!, ${'$'}size: Int!) {
          |  __typename
          |  ...QueryFragment
          |}
          """.trimMargin()
        )

    const val OPERATION_NAME: String = "GetUser"
  }
}
