//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.adapter.GetUser_ResponseAdapter
import com.example.named_fragment_with_variables.adapter.GetUser_VariablesAdapter
import com.example.named_fragment_with_variables.fragment.QueryFragment
import com.example.named_fragment_with_variables.fragment.UserFragment
import com.example.named_fragment_with_variables.responsefields.GetUser_ResponseFields
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

data class GetUser(
  val organizationId: String,
  val query: UserQuery,
  val size: Int
) : Query<GetUser.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    GetUser_VariablesAdapter.toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return GetUser_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      GetUser_ResponseFields.fields.first().fieldSets

  data class Data(
    override val __typename: String,
    override val organization: Organization?
  ) : QueryFragment, Query.Data {
    data class Organization(
      override val id: String,
      override val user: List<User>
    ) : QueryFragment.Organization {
      data class User(
        override val __typename: String,
        override val firstName: String,
        override val lastName: String,
        override val avatar: String
      ) : UserFragment, QueryFragment.Organization.User {
        companion object {
          fun User.UserFragment() = this as? UserFragment
        }
      }
    }

    companion object {
      fun Data.QueryFragment() = this as? QueryFragment
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "f00812d485d5796cfb72c796a4634df360bd6ec06f95a7ac38e322819ac20889"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query GetUser($organizationId: String!, $query: UserQuery!, $size: Int!) {
     *   __typename
     *   ...QueryFragment
     * }
     * fragment QueryFragment on Query {
     *   __typename
     *   organization(id: $organizationId) {
     *     id
     *     user(query: $query) {
     *       __typename
     *       ...UserFragment
     *     }
     *   }
     * }
     * fragment UserFragment on User {
     *   __typename
     *   firstName
     *   lastName
     *   avatar(size: $size)
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query GetUser(${'$'}organizationId: String!, ${'$'}query: UserQuery!, ${'$'}size: Int!) { __typename ...QueryFragment } fragment QueryFragment on Query { __typename organization(id: ${'$'}organizationId) { id user(query: ${'$'}query) { __typename ...UserFragment } } } fragment UserFragment on User { __typename firstName lastName avatar(size: ${'$'}size) }"

    const val OPERATION_NAME: String = "GetUser"
  }
}
