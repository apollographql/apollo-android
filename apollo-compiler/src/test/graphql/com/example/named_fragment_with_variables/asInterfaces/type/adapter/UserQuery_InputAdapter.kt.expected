//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.type.adapter

import com.apollographql.apollo3.api.NullableBooleanResponseAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.optional
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.IllegalStateException

object UserQuery_InputAdapter : ResponseAdapter<UserQuery> {
  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      UserQuery = throw IllegalStateException("Input type used in output position")
  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: UserQuery
  ) {
    writer.name("name")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
    if (value.isAdmin is Optional.Present) {
      writer.name("isAdmin")
      NullableBooleanResponseAdapter.optional().nullable().toResponse(writer, responseAdapterCache,
          value.isAdmin)
    }
  }
}
