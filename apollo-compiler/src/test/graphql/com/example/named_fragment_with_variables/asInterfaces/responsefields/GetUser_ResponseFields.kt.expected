//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.named_fragment_with_variables.responsefields

import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.Variable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import kotlin.Array

object GetUser_ResponseFields {
  val fields: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("unused"),
      fieldName = "data",
      fieldSets = listOf(
        ResponseField.FieldSet(null, Data.fields),
      ),
    ),
  )


  object Data {
    val fields: Array<ResponseField> = arrayOf(
      ResponseField.Typename,
      ResponseField(
        type = ResponseField.Type.Named.Object("unused"),
        fieldName = "organization",
        arguments = mapOf("id" to Variable("organizationId")
        ),
        fieldSets = listOf(
          ResponseField.FieldSet(null, Organization.fields),
        ),
      ),
    )


    object Organization {
      val fields: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.Named.Other("unused").notNull(),
          fieldName = "id",
        ),
        ResponseField(
          type = ResponseField.Type.Named.Object("unused").notNull().list().notNull(),
          fieldName = "user",
          arguments = mapOf("query" to Variable("query")
          ),
          fieldSets = listOf(
            ResponseField.FieldSet(null, User.fields),
          ),
        ),
      )


      object User {
        val fields: Array<ResponseField> = arrayOf(
          ResponseField.Typename,
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "firstName",
          ),
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "lastName",
          ),
          ResponseField(
            type = ResponseField.Type.Named.Other("unused").notNull(),
            fieldName = "avatar",
            arguments = mapOf("size" to Variable("size")
            ),
          ),
        )

      }
    }
  }
}
