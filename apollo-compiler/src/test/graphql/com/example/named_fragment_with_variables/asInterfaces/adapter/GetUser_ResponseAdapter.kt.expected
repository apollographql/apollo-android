//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.named_fragment_with_variables.adapter

import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.GetUser
import kotlin.String
import kotlin.collections.List

object GetUser_ResponseAdapter {
  object Data : ResponseAdapter<GetUser.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "organization")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        GetUser.Data {
      var __typename: String? = null
      var organization: GetUser.Data.Organization? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          1 -> organization = Organization.obj().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return GetUser.Data(
        __typename = __typename!!,
        organization = organization
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: GetUser.Data
    ) {
      writer.name("__typename")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
      writer.name("organization")
      Organization.obj().nullable().toResponse(writer, responseAdapterCache, value.organization)
    }

    object Organization : ResponseAdapter<GetUser.Data.Organization> {
      val RESPONSE_NAMES: List<String> = listOf("id", "user")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          GetUser.Data.Organization {
        var id: String? = null
        var user: List<GetUser.Data.Organization.User>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> id = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> user = User.obj().list().fromResponse(reader, responseAdapterCache)
            else -> break
          }
        }
        return GetUser.Data.Organization(
          id = id!!,
          user = user!!
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: GetUser.Data.Organization
      ) {
        writer.name("id")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.id)
        writer.name("user")
        User.obj().list().toResponse(writer, responseAdapterCache, value.user)
      }

      object User : ResponseAdapter<GetUser.Data.Organization.User> {
        val RESPONSE_NAMES: List<String> = listOf("__typename", "firstName", "lastName", "avatar")

        override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
            GetUser.Data.Organization.User {
          var __typename: String? = null
          var firstName: String? = null
          var lastName: String? = null
          var avatar: String? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
              1 -> firstName = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
              2 -> lastName = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
              3 -> avatar = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
              else -> break
            }
          }
          return GetUser.Data.Organization.User(
            __typename = __typename!!,
            firstName = firstName!!,
            lastName = lastName!!,
            avatar = avatar!!
          )
        }

        override fun toResponse(
          writer: JsonWriter,
          responseAdapterCache: ResponseAdapterCache,
          value: GetUser.Data.Organization.User
        ) {
          writer.name("__typename")
          StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
          writer.name("firstName")
          StringResponseAdapter.toResponse(writer, responseAdapterCache, value.firstName)
          writer.name("lastName")
          StringResponseAdapter.toResponse(writer, responseAdapterCache, value.lastName)
          writer.name("avatar")
          StringResponseAdapter.toResponse(writer, responseAdapterCache, value.avatar)
        }
      }
    }
  }
}
