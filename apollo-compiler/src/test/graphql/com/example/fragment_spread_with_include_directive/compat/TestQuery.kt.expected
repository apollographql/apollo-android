//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragment_spread_with_include_directive.adapter.TestQuery_ResponseAdapter
import com.example.fragment_spread_with_include_directive.adapter.TestQuery_VariablesAdapter
import com.example.fragment_spread_with_include_directive.fragment.HeroDetails
import com.example.fragment_spread_with_include_directive.fragment.HumanDetails
import com.example.fragment_spread_with_include_directive.selections.TestQuerySelections
import kotlin.Boolean
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val withDetails: Boolean,
  val skipHumanDetails: Boolean
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    TestQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections

  data class Data(
    val hero: Hero?
  ) : Query.Data

  data class Hero(
    val __typename: String,
    /**
     * The ID of the character
     */
    val id: String,
    /**
     * Synthetic field for grouping fragments
     */
    val fragments: Fragments
  ) {
    data class Fragments(
      /**
       * Synthetic field for 'HeroDetails'
       */
      val heroDetails: HeroDetails?,
      /**
       * Synthetic field for 'HumanDetails'
       */
      val humanDetails: HumanDetails?
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "3dbd5da247db9417fdbd2b79ef02f682006b1a507298b2bb57ef40a2fd2db850"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($withDetails: Boolean!, $skipHumanDetails: Boolean!) {
     *   hero {
     *     __typename
     *     id
     *     ...HeroDetails @include(if: $withDetails) @skip(if: $skipHumanDetails)
     *     ...HumanDetails @include(if: $withDetails)
     *   }
     * }
     *
     * fragment HeroDetails on Character {
     *   name
     * }
     *
     * fragment HumanDetails on Human {
     *   homePlanet
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}withDetails: Boolean!, ${'$'}skipHumanDetails: Boolean!) { hero { __typename id ...HeroDetails @include(if: ${'$'}withDetails) @skip(if: ${'$'}skipHumanDetails) ...HumanDetails @include(if: ${'$'}withDetails) } }  fragment HeroDetails on Character { name }  fragment HumanDetails on Human { homePlanet }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
