//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive.selections

import com.apollographql.apollo3.api.CompiledCompoundType
import com.apollographql.apollo3.api.CompiledCondition
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledOtherType
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.example.fragment_spread_with_include_directive.fragment.selections.HeroDetailsSelections
import com.example.fragment_spread_with_include_directive.fragment.selections.HumanDetailsSelections
import kotlin.collections.List

private val hero: List<CompiledSelection> = listOf(
      CompiledField(
        name = "__typename",
        type = CompiledOtherType("unused").notNull()
      ),
      CompiledField(
        name = "id",
        type = CompiledOtherType("unused").notNull()
      ),
      CompiledFragment(
        condition = listOf(CompiledCondition("withDetails", false),
            CompiledCondition("skipHumanDetails", true)),
        possibleTypes = listOf("Droid", "Human"),
        selections = HeroDetailsSelections
      ),
      CompiledFragment(
        condition = listOf(CompiledCondition("withDetails", false)),
        possibleTypes = listOf("Human"),
        selections = HumanDetailsSelections
      )
    )

val TestQuerySelections: List<CompiledSelection> = listOf(
      CompiledField(
        name = "hero",
        type = CompiledCompoundType("unused"),
        selections = hero
      )
    )
