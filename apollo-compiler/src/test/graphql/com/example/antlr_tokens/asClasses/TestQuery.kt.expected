//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.antlr_tokens

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.antlr_tokens.adapter.TestQuery_ResponseAdapter
import com.example.antlr_tokens.adapter.TestQuery_VariablesAdapter
import com.example.antlr_tokens.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val operation: Input<String?> = Input.Absent
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val typeWithGraphQLKeywords: TypeWithGraphQLKeywords?
  ) : Query.Data {
    data class TypeWithGraphQLKeywords(
      val on: String?,
      val null_: String?,
      val alias: String?
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "197e186cfb461d1c38c0be4da7b182eff42e304043973b994c8c2de3535daea6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($operation: String) {
     *   typeWithGraphQLKeywords {
     *     on
     *     null(fragment: $operation)
     *     alias: null(fragment: "A string\nwith a new line")
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}operation: String) { typeWithGraphQLKeywords { on null(fragment: ${'$'}operation) alias: null(fragment: \"A string\\nwith a new line\") } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
