//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.arguments_complex

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.arguments_complex.adapter.TestQuery_ResponseAdapter
import com.example.arguments_complex.adapter.TestQuery_VariablesAdapter
import com.example.arguments_complex.responsefields.TestQuery_ResponseFields
import com.example.arguments_complex.type.Episode
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val episode: Input<Episode?> = Input.Absent,
  val stars: Int,
  val greenValue: Double
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.toResponse(writer, responseAdapterCache, this)
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val heroWithReview: HeroWithReview?
  ) : Query.Data {
    data class HeroWithReview(
      /**
       * What this human calls themselves
       */
      val name: String,
      /**
       * Height in the preferred unit, default is meters
       */
      val height: Double?
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "5de0170d60b7008300fa40599880d0b70e67a326a7b1fe27b8fa87aba7e5d36f"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($episode: Episode, $stars: Int!, $greenValue: Float!) {
     *   heroWithReview(episode: $episode, review: {
     *     stars: $stars
     *     favoriteColor: {
     *       red: 0
     *       green: $greenValue
     *       blue: 0
     *     }
     *     
     *     booleanNonOptional: false
     *     listOfStringNonOptional: []
     *   }
     *   , listOfInts: [$stars,$stars]) {
     *     name
     *     height(unit: FOOT)
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}episode: Episode, ${'$'}stars: Int!, ${'$'}greenValue: Float!) { heroWithReview(episode: ${'$'}episode, review: { stars: ${'$'}stars favoriteColor: { red: 0 green: ${'$'}greenValue blue: 0 }  booleanNonOptional: false listOfStringNonOptional: [] } , listOfInts: [${'$'}stars,${'$'}stars]) { name height(unit: FOOT) } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
