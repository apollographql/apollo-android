// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review_semantic_naming.type

import com.apollographql.apollo.api.Input
import com.apollographql.apollo.api.InputFieldMarshaller
import com.apollographql.apollo.api.InputFieldWriter
import com.apollographql.apollo.api.InputType
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

/**
 * The input object sent when someone is creating a new review
 */
@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter")
data class ReviewInput(
  /**
   * 0-5 stars
   */
  val stars: Int,
  /**
   * for test purpose only
   */
  val nullableIntFieldWithDefaultValue: Input<Int> = Input.optional(10),
  /**
   * Comment about the movie, optional
   */
  val commentary: Input<String> = Input.absent(),
  /**
   * Favorite color, optional
   */
  val favoriteColor: ColorInput,
  /**
   * for test purpose only
   */
  val enumWithDefaultValue: Input<Episode> = Input.optional(Episode.safeValueOf("JEDI")),
  /**
   * for test purpose only
   */
  val nonNullableEnumWithDefaultValue: Episode = Episode.safeValueOf("JEDI"),
  /**
   * for test purpose only
   */
  val nullableEnum: Input<Episode> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfCustomScalar: Input<List<Any?>> = Input.absent(),
  /**
   * for test purpose only
   */
  val customScalar: Input<Any> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfEnums: Input<List<Episode?>> = Input.optional(listOf(Episode.safeValueOf("NEWHOPE"),
      Episode.safeValueOf("EMPIRE"))),
  /**
   * for test purpose only
   */
  val listOfInt: Input<List<Int?>> = Input.optional(listOf(1, 2, 3)),
  /**
   * for test purpose only
   */
  val listOfString: Input<List<String?>> = Input.optional(listOf("test1", "test2", "test3")),
  /**
   * for test purpose only
   */
  val listOfStringNonOptional: List<String?>,
  /**
   * for test purpose only
   */
  val listOfInputTypes: Input<List<ColorInput?>> = Input.optional(emptyList()),
  /**
   * for test purpose only
   */
  val booleanWithDefaultValue: Input<Boolean> = Input.optional(true),
  /**
   * for test purpose only
   */
  val listOfListOfString: Input<List<List<String>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfEnum: Input<List<List<Episode>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfCustom: Input<List<List<Any>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val listOfListOfObject: Input<List<List<ColorInput>>> = Input.absent(),
  /**
   * for test purpose only
   */
  val capitalizedField: Input<String> = Input.absent()
) : InputType {
  override fun marshaller(): InputFieldMarshaller = InputFieldMarshaller { _writer ->
    _writer.writeInt("stars", stars)
    if (nullableIntFieldWithDefaultValue.defined)
        _writer.writeInt("nullableIntFieldWithDefaultValue", nullableIntFieldWithDefaultValue.value)
    if (commentary.defined) _writer.writeString("commentary", commentary.value)
    _writer.writeObject("favoriteColor", favoriteColor.marshaller())
    if (enumWithDefaultValue.defined) _writer.writeString("enumWithDefaultValue",
        enumWithDefaultValue.value?.rawValue)
    _writer.writeString("nonNullableEnumWithDefaultValue", nonNullableEnumWithDefaultValue.rawValue)
    if (nullableEnum.defined) _writer.writeString("nullableEnum", nullableEnum.value?.rawValue)
    if (listOfCustomScalar.defined) {
      _writer.writeList("listOfCustomScalar", listOfCustomScalar.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeCustom(CustomType.DATE, _value)
          }
        }
      })
    }
    if (customScalar.defined) _writer.writeCustom("customScalar", CustomType.DATE,
        customScalar.value)
    if (listOfEnums.defined) {
      _writer.writeList("listOfEnums", listOfEnums.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeString(_value?.rawValue)
          }
        }
      })
    }
    if (listOfInt.defined) {
      _writer.writeList("listOfInt", listOfInt.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeInt(_value)
          }
        }
      })
    }
    if (listOfString.defined) {
      _writer.writeList("listOfString", listOfString.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeString(_value)
          }
        }
      })
    }
    _writer.writeList("listOfStringNonOptional") { _listItemWriter ->
      listOfStringNonOptional.forEach { _value ->
        _listItemWriter.writeString(_value)
      }
    }
    if (listOfInputTypes.defined) {
      _writer.writeList("listOfInputTypes", listOfInputTypes.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeObject(_value?.marshaller())
          }
        }
      })
    }
    if (booleanWithDefaultValue.defined) _writer.writeBoolean("booleanWithDefaultValue",
        booleanWithDefaultValue.value)
    if (listOfListOfString.defined) {
      _writer.writeList("listOfListOfString", listOfListOfString.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeList { _listItemWriter ->
              _value.forEach { _value ->
                _listItemWriter.writeString(_value)
              }
            }
          }
        }
      })
    }
    if (listOfListOfEnum.defined) {
      _writer.writeList("listOfListOfEnum", listOfListOfEnum.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeList { _listItemWriter ->
              _value.forEach { _value ->
                _listItemWriter.writeString(_value.rawValue)
              }
            }
          }
        }
      })
    }
    if (listOfListOfCustom.defined) {
      _writer.writeList("listOfListOfCustom", listOfListOfCustom.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeList { _listItemWriter ->
              _value.forEach { _value ->
                _listItemWriter.writeCustom(CustomType.DATE, _value)
              }
            }
          }
        }
      })
    }
    if (listOfListOfObject.defined) {
      _writer.writeList("listOfListOfObject", listOfListOfObject.value?.let { _value ->
        InputFieldWriter.ListWriter { _listItemWriter ->
          _value.forEach { _value ->
            _listItemWriter.writeList { _listItemWriter ->
              _value.forEach { _value ->
                _listItemWriter.writeObject(_value.marshaller())
              }
            }
          }
        }
      })
    }
    if (capitalizedField.defined) _writer.writeString("CapitalizedField", capitalizedField.value)
  }
}
