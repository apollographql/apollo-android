//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.mutation_create_review_semantic_naming.adapter

import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review_semantic_naming.CreateReviewForEpisodeMutation
import kotlin.Int
import kotlin.String
import kotlin.collections.List

object CreateReviewForEpisodeMutation_ResponseAdapter {
  object Data : ResponseAdapter<CreateReviewForEpisodeMutation.Data> {
    val RESPONSE_NAMES: List<String> = listOf("createReview")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        CreateReviewForEpisodeMutation.Data {
      var createReview: CreateReviewForEpisodeMutation.Data.CreateReview? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> createReview = CreateReview.obj().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return CreateReviewForEpisodeMutation.Data(
        createReview = createReview
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: CreateReviewForEpisodeMutation.Data
    ) {
      writer.name("createReview")
      CreateReview.obj().nullable().toResponse(writer, responseAdapterCache, value.createReview)
    }

    object CreateReview : ResponseAdapter<CreateReviewForEpisodeMutation.Data.CreateReview> {
      val RESPONSE_NAMES: List<String> = listOf("stars", "commentary")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          CreateReviewForEpisodeMutation.Data.CreateReview {
        var stars: Int? = null
        var commentary: String? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> stars = IntResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> commentary = NullableStringResponseAdapter.fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return CreateReviewForEpisodeMutation.Data.CreateReview(
          stars = stars!!,
          commentary = commentary
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: CreateReviewForEpisodeMutation.Data.CreateReview
      ) {
        writer.name("stars")
        IntResponseAdapter.toResponse(writer, responseAdapterCache, value.stars)
        writer.name("commentary")
        NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.commentary)
      }
    }
  }
}
