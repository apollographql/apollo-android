//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.interface_on_interface.selections

import com.apollographql.apollo3.api.CompiledCompoundType
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledOtherType
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import kotlin.collections.List

object GetHumanSelections {
  private val human: List<CompiledSelection> = listOf(
        CompiledField(
          name = "id",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "name",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledField(
          name = "height",
          type = CompiledOtherType("unused").notNull()
        )
      )

  private val onHuman: List<CompiledSelection> = listOf(
        CompiledField(
          name = "height",
          type = CompiledOtherType("unused").notNull()
        )
      )

  private val node: List<CompiledSelection> = listOf(
        CompiledField(
          name = "__typename",
          type = CompiledOtherType("unused").notNull()
        ),
        CompiledFragment(
          possibleTypes = listOf("Human"),
          selections = onHuman
        )
      )

  val root: List<CompiledSelection> = listOf(
        CompiledField(
          name = "human",
          type = CompiledCompoundType("unused").notNull(),
          selections = human
        ),
        CompiledField(
          name = "node",
          type = CompiledCompoundType("unused").notNull(),
          selections = node
        )
      )
}
