//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.Int
import kotlin.String
import kotlin.collections.List

object HeroDetailsImpl_ResponseAdapter {
  object Data : Adapter<HeroDetailsImpl.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        HeroDetailsImpl.Data {
      reader.selectName(RESPONSE_NAMES).also {
        check(it == 0) {
          "__typename not present in first position"
        }
      }
      val __typename = reader.nextString()!!
      return when(__typename) {
        "Human",
        -> HumanData.fromJson(reader, customScalarAdapters, __typename)
        "Droid",
        -> DroidData.fromJson(reader, customScalarAdapters, __typename)
        else
        -> OtherData.fromJson(reader, customScalarAdapters, __typename)
      }
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: HeroDetailsImpl.Data
    ) {
      when(value) {
        is HeroDetailsImpl.HumanData -> HumanData.toJson(writer, customScalarAdapters, value)
        is HeroDetailsImpl.DroidData -> DroidData.toJson(writer, customScalarAdapters, value)
        is HeroDetailsImpl.OtherData -> OtherData.toJson(writer, customScalarAdapters, value)
      }
    }
  }

  object HumanData {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String
    ): HeroDetailsImpl.HumanData {
      var __typename: String? = typename
      var name: String? = null
      var friendsConnection: HeroDetailsImpl.HumanData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.HumanData(
        __typename = __typename!!,
        name = name!!,
        friendsConnection = friendsConnection!!
      )
    }

    fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: HeroDetailsImpl.HumanData
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    object FriendsConnection : Adapter<HeroDetailsImpl.HumanData.FriendsConnection> {
      val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          HeroDetailsImpl.HumanData.FriendsConnection {
        var totalCount: Int? = null
        var edges: List<HeroDetailsImpl.HumanData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
                customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.HumanData.FriendsConnection(
          totalCount = totalCount,
          edges = edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: HeroDetailsImpl.HumanData.FriendsConnection
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      object Edge : Adapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            HeroDetailsImpl.HumanData.FriendsConnection.Edge {
          var node: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.HumanData.FriendsConnection.Edge(
            node = node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          value: HeroDetailsImpl.HumanData.FriendsConnection.Edge
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        object Node : Adapter<HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node> {
          val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
              HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node {
            var name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node(
              name = name!!
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            value: HeroDetailsImpl.HumanData.FriendsConnection.Edge.Node
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }

  object DroidData {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction",
        "friendsConnection")

    fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String
    ): HeroDetailsImpl.DroidData {
      var __typename: String? = typename
      var name: String? = null
      var primaryFunction: String? = null
      var friendsConnection: HeroDetailsImpl.DroidData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> primaryFunction = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.DroidData(
        __typename = __typename!!,
        name = name!!,
        primaryFunction = primaryFunction,
        friendsConnection = friendsConnection!!
      )
    }

    fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: HeroDetailsImpl.DroidData
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("primaryFunction")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.primaryFunction)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    object FriendsConnection : Adapter<HeroDetailsImpl.DroidData.FriendsConnection> {
      val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          HeroDetailsImpl.DroidData.FriendsConnection {
        var totalCount: Int? = null
        var edges: List<HeroDetailsImpl.DroidData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
                customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.DroidData.FriendsConnection(
          totalCount = totalCount,
          edges = edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: HeroDetailsImpl.DroidData.FriendsConnection
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      object Edge : Adapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            HeroDetailsImpl.DroidData.FriendsConnection.Edge {
          var node: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.DroidData.FriendsConnection.Edge(
            node = node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          value: HeroDetailsImpl.DroidData.FriendsConnection.Edge
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        object Node : Adapter<HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node> {
          val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
              HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node {
            var name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node(
              name = name!!
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            value: HeroDetailsImpl.DroidData.FriendsConnection.Edge.Node
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }

  object OtherData {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

    fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String
    ): HeroDetailsImpl.OtherData {
      var __typename: String? = typename
      var name: String? = null
      var friendsConnection: HeroDetailsImpl.OtherData.FriendsConnection? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> friendsConnection = FriendsConnection.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return HeroDetailsImpl.OtherData(
        __typename = __typename!!,
        name = name!!,
        friendsConnection = friendsConnection!!
      )
    }

    fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: HeroDetailsImpl.OtherData
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("friendsConnection")
      FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
    }

    object FriendsConnection : Adapter<HeroDetailsImpl.OtherData.FriendsConnection> {
      val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          HeroDetailsImpl.OtherData.FriendsConnection {
        var totalCount: Int? = null
        var edges: List<HeroDetailsImpl.OtherData.FriendsConnection.Edge?>? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
            1 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
                customScalarAdapters)
            else -> break
          }
        }

        return HeroDetailsImpl.OtherData.FriendsConnection(
          totalCount = totalCount,
          edges = edges
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: HeroDetailsImpl.OtherData.FriendsConnection
      ) {
        writer.name("totalCount")
        NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

        writer.name("edges")
        Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters, value.edges)
      }

      object Edge : Adapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge> {
        val RESPONSE_NAMES: List<String> = listOf("node")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            HeroDetailsImpl.OtherData.FriendsConnection.Edge {
          var node: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node? = null

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          return HeroDetailsImpl.OtherData.FriendsConnection.Edge(
            node = node
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          value: HeroDetailsImpl.OtherData.FriendsConnection.Edge
        ) {
          writer.name("node")
          Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
        }

        object Node : Adapter<HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node> {
          val RESPONSE_NAMES: List<String> = listOf("name")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
              HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node {
            var name: String? = null

            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                else -> break
              }
            }

            return HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node(
              name = name!!
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            value: HeroDetailsImpl.OtherData.FriendsConnection.Edge.Node
          ) {
            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)
          }
        }
      }
    }
  }
}
