//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_with_inline_fragment.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import com.example.fragment_with_inline_fragment.TestQuery
import com.example.fragment_with_inline_fragment.fragment.HeroDetails
import com.example.fragment_with_inline_fragment.type.Episode
import com.example.fragment_with_inline_fragment.type.adapter.Episode_ResponseAdapter
import kotlin.String
import kotlin.collections.List

object TestQuery_ResponseAdapter {
  object Data : Adapter<TestQuery.Data> {
    val RESPONSE_NAMES: List<String> = listOf("hero")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Data {
      var hero: TestQuery.Hero? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> hero = Hero.obj(true).nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return TestQuery.Data(
        hero = hero
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: TestQuery.Data
    ) {
      writer.name("hero")
      Hero.obj(true).nullable().toJson(writer, customScalarAdapters, value.hero)
    }
  }

  object Hero : Adapter<TestQuery.Hero> {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "appearsIn")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        TestQuery.Hero {
      var __typename: String? = null
      var name: String? = null
      var appearsIn: List<Episode?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> appearsIn = Episode_ResponseAdapter.nullable().list().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      val fragments = com.example.fragment_with_inline_fragment.adapter.TestQuery_ResponseAdapter.Hero.Fragments.fromJson(reader,
          customScalarAdapters)

      return TestQuery.Hero(
        __typename = __typename,
        name = name!!,
        appearsIn = appearsIn!!,
        fragments = fragments
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: TestQuery.Hero
    ) {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)

      writer.name("appearsIn")
      Episode_ResponseAdapter.nullable().list().toJson(writer, customScalarAdapters,
          value.appearsIn)

      com.example.fragment_with_inline_fragment.adapter.TestQuery_ResponseAdapter.Hero.Fragments.toJson(writer,
          customScalarAdapters, value.fragments)
    }

    object Fragments : Adapter<TestQuery.Hero.Fragments> {
      val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          TestQuery.Hero.Fragments {
        var __typename: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        check(__typename != null) {
          "__typename was not found"
        }

        reader.rewind()
        var heroDetails: HeroDetails? = null
        if (possibleTypes("Droid","Human").evaluate(emptySet(), __typename)) {
          heroDetails = com.example.fragment_with_inline_fragment.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.fromJson(reader,
              customScalarAdapters)
        }

        return TestQuery.Hero.Fragments(
          heroDetails = heroDetails
        )
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: TestQuery.Hero.Fragments
      ) {
        if (value.heroDetails != null) {
          com.example.fragment_with_inline_fragment.fragment.HeroDetailsImpl_ResponseAdapter.HeroDetails.toJson(writer,
              customScalarAdapters, value.heroDetails)
        }
      }
    }
  }
}
