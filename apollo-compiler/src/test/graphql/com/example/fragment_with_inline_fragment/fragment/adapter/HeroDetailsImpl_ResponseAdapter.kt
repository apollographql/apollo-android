// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_with_inline_fragment.fragment.adapter

import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.ResponseReader
import com.apollographql.apollo.api.internal.ResponseWriter
import com.example.fragment_with_inline_fragment.fragment.HeroDetailsImpl
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.collections.List

object HeroDetailsImpl_ResponseAdapter : ResponseAdapter<HeroDetailsImpl> {
  private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.forString("__typename", "__typename", null, false, null),
    ResponseField.forString("name", "name", null, false, null),
    ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
  )

  override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetailsImpl {
    val typename = __typename ?: reader.readString(RESPONSE_FIELDS[0])
    return when(typename) {
      "Droid" -> DroidHeroDetailsImpl.fromResponse(reader, typename)
      "Human" -> HumanHeroDetailsImpl.fromResponse(reader, typename)
      else -> OtherHeroDetailsImpl.fromResponse(reader, typename)
    }
  }

  override fun toResponse(writer: ResponseWriter, value: HeroDetailsImpl) {
    when(value) {
      is HeroDetailsImpl.DroidHeroDetailsImpl -> DroidHeroDetailsImpl.toResponse(writer, value)
      is HeroDetailsImpl.HumanHeroDetailsImpl -> HumanHeroDetailsImpl.toResponse(writer, value)
      is HeroDetailsImpl.OtherHeroDetailsImpl -> OtherHeroDetailsImpl.toResponse(writer, value)
    }
  }

  object DroidHeroDetailsImpl : ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetailsImpl.DroidHeroDetailsImpl {
      val typename = __typename ?: reader.readString(RESPONSE_FIELDS[0])
      return when(typename) {
        "Droid" -> DroidDroidHeroDetailsImpl.fromResponse(reader, typename)
        else -> OtherDroidHeroDetailsImpl.fromResponse(reader, typename)
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetailsImpl.DroidHeroDetailsImpl) {
      when(value) {
        is HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl -> DroidDroidHeroDetailsImpl.toResponse(writer, value)
        is HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl -> OtherDroidHeroDetailsImpl.toResponse(writer, value)
      }
    }

    object DroidDroidHeroDetailsImpl :
        ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null),
        ResponseField.forString("name", "name", null, false, null),
        ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null),
        ResponseField.forString("primaryFunction", "primaryFunction", null, true, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl {
        return reader.run {
          var __typename: String? = __typename
          var name: String? = null
          var friendsConnection: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection? = null
          var primaryFunction: String? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> __typename = readString(RESPONSE_FIELDS[0])
              1 -> name = readString(RESPONSE_FIELDS[1])
              2 -> friendsConnection = readObject<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection>(RESPONSE_FIELDS[2]) { reader ->
                FriendsConnection.fromResponse(reader)
              }
              3 -> primaryFunction = readString(RESPONSE_FIELDS[3])
              else -> break
            }
          }
          HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl(
            __typename = __typename!!,
            name = name!!,
            friendsConnection = friendsConnection!!,
            primaryFunction = primaryFunction
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl) {
        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
        writer.writeString(RESPONSE_FIELDS[1], value.name)
        writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
          FriendsConnection.toResponse(writer, value.friendsConnection)
        }
        writer.writeString(RESPONSE_FIELDS[3], value.primaryFunction)
      }

      object FriendsConnection :
          ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection>
          {
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forInt("totalCount", "totalCount", null, true, null),
          ResponseField.forList("edges", "edges", null, true, null)
        )

        override fun fromResponse(reader: ResponseReader, __typename: String?):
            HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection {
          return reader.run {
            var totalCount: Int? = null
            var edges: List<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge?>? = null
            while(true) {
              when (selectField(RESPONSE_FIELDS)) {
                0 -> totalCount = readInt(RESPONSE_FIELDS[0])
                1 -> edges = readList<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge>(RESPONSE_FIELDS[1]) { reader ->
                  reader.readObject<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge> { reader ->
                    Edge.fromResponse(reader)
                  }
                }
                else -> break
              }
            }
            HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection(
              totalCount = totalCount,
              edges = edges
            )
          }
        }

        override fun toResponse(writer: ResponseWriter,
            value: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection) {
          writer.writeInt(RESPONSE_FIELDS[0], value.totalCount)
          writer.writeList(RESPONSE_FIELDS[1], value.edges) { values, listItemWriter ->
            values?.forEach { value ->
              if(value == null) {
                listItemWriter.writeObject(null)
              } else {
                listItemWriter.writeObject { writer ->
                  Edge.toResponse(writer, value)
                }
              }
            }
          }
        }

        object Edge :
            ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge>
            {
          private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.forObject("node", "node", null, true, null)
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge {
            return reader.run {
              var node: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> node = readObject<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                    Node.fromResponse(reader)
                  }
                  else -> break
                }
              }
              HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge(
                node = node
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge) {
            if(value.node == null) {
              writer.writeObject(RESPONSE_FIELDS[0], null)
            } else {
              writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
                Node.toResponse(writer, value.node)
              }
            }
          }

          object Node :
              ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node>
              {
            private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.forString("name", "name", null, false, null)
            )

            override fun fromResponse(reader: ResponseReader, __typename: String?):
                HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node {
              return reader.run {
                var name: String? = null
                while(true) {
                  when (selectField(RESPONSE_FIELDS)) {
                    0 -> name = readString(RESPONSE_FIELDS[0])
                    else -> break
                  }
                }
                HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node(
                  name = name!!
                )
              }
            }

            override fun toResponse(writer: ResponseWriter,
                value: HeroDetailsImpl.DroidHeroDetailsImpl.DroidDroidHeroDetailsImpl.FriendsConnection.Edge.Node) {
              writer.writeString(RESPONSE_FIELDS[0], value.name)
            }
          }
        }
      }
    }

    object OtherDroidHeroDetailsImpl :
        ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null),
        ResponseField.forString("name", "name", null, false, null),
        ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl {
        return reader.run {
          var __typename: String? = __typename
          var name: String? = null
          var friendsConnection: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> __typename = readString(RESPONSE_FIELDS[0])
              1 -> name = readString(RESPONSE_FIELDS[1])
              2 -> friendsConnection = readObject<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection>(RESPONSE_FIELDS[2]) { reader ->
                FriendsConnection.fromResponse(reader)
              }
              else -> break
            }
          }
          HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl(
            __typename = __typename!!,
            name = name!!,
            friendsConnection = friendsConnection!!
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl) {
        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
        writer.writeString(RESPONSE_FIELDS[1], value.name)
        writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
          FriendsConnection.toResponse(writer, value.friendsConnection)
        }
      }

      object FriendsConnection :
          ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection>
          {
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forInt("totalCount", "totalCount", null, true, null),
          ResponseField.forList("edges", "edges", null, true, null)
        )

        override fun fromResponse(reader: ResponseReader, __typename: String?):
            HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection {
          return reader.run {
            var totalCount: Int? = null
            var edges: List<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge?>? = null
            while(true) {
              when (selectField(RESPONSE_FIELDS)) {
                0 -> totalCount = readInt(RESPONSE_FIELDS[0])
                1 -> edges = readList<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge>(RESPONSE_FIELDS[1]) { reader ->
                  reader.readObject<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge> { reader ->
                    Edge.fromResponse(reader)
                  }
                }
                else -> break
              }
            }
            HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection(
              totalCount = totalCount,
              edges = edges
            )
          }
        }

        override fun toResponse(writer: ResponseWriter,
            value: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection) {
          writer.writeInt(RESPONSE_FIELDS[0], value.totalCount)
          writer.writeList(RESPONSE_FIELDS[1], value.edges) { values, listItemWriter ->
            values?.forEach { value ->
              if(value == null) {
                listItemWriter.writeObject(null)
              } else {
                listItemWriter.writeObject { writer ->
                  Edge.toResponse(writer, value)
                }
              }
            }
          }
        }

        object Edge :
            ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge>
            {
          private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.forObject("node", "node", null, true, null)
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge {
            return reader.run {
              var node: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> node = readObject<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                    Node.fromResponse(reader)
                  }
                  else -> break
                }
              }
              HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge(
                node = node
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge) {
            if(value.node == null) {
              writer.writeObject(RESPONSE_FIELDS[0], null)
            } else {
              writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
                Node.toResponse(writer, value.node)
              }
            }
          }

          object Node :
              ResponseAdapter<HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node>
              {
            private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField.forString("name", "name", null, false, null)
            )

            override fun fromResponse(reader: ResponseReader, __typename: String?):
                HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node {
              return reader.run {
                var name: String? = null
                while(true) {
                  when (selectField(RESPONSE_FIELDS)) {
                    0 -> name = readString(RESPONSE_FIELDS[0])
                    else -> break
                  }
                }
                HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node(
                  name = name!!
                )
              }
            }

            override fun toResponse(writer: ResponseWriter,
                value: HeroDetailsImpl.DroidHeroDetailsImpl.OtherDroidHeroDetailsImpl.FriendsConnection.Edge.Node) {
              writer.writeString(RESPONSE_FIELDS[0], value.name)
            }
          }
        }
      }
    }
  }

  object HumanHeroDetailsImpl : ResponseAdapter<HeroDetailsImpl.HumanHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetailsImpl.HumanHeroDetailsImpl {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var friendsConnection: HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> friendsConnection = readObject<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection>(RESPONSE_FIELDS[2]) { reader ->
              FriendsConnection.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetailsImpl.HumanHeroDetailsImpl(
          __typename = __typename!!,
          name = name!!,
          friendsConnection = friendsConnection!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetailsImpl.HumanHeroDetailsImpl) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
        FriendsConnection.toResponse(writer, value.friendsConnection)
      }
    }

    object FriendsConnection :
        ResponseAdapter<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forInt("totalCount", "totalCount", null, true, null),
        ResponseField.forList("edges", "edges", null, true, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection {
        return reader.run {
          var totalCount: Int? = null
          var edges: List<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge?>? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> totalCount = readInt(RESPONSE_FIELDS[0])
              1 -> edges = readList<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge>(RESPONSE_FIELDS[1]) { reader ->
                reader.readObject<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge> { reader ->
                  Edge.fromResponse(reader)
                }
              }
              else -> break
            }
          }
          HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection(
            totalCount = totalCount,
            edges = edges
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection) {
        writer.writeInt(RESPONSE_FIELDS[0], value.totalCount)
        writer.writeList(RESPONSE_FIELDS[1], value.edges) { values, listItemWriter ->
          values?.forEach { value ->
            if(value == null) {
              listItemWriter.writeObject(null)
            } else {
              listItemWriter.writeObject { writer ->
                Edge.toResponse(writer, value)
              }
            }
          }
        }
      }

      object Edge : ResponseAdapter<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge> {
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forObject("node", "node", null, true, null)
        )

        override fun fromResponse(reader: ResponseReader, __typename: String?):
            HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge {
          return reader.run {
            var node: HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node? = null
            while(true) {
              when (selectField(RESPONSE_FIELDS)) {
                0 -> node = readObject<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                  Node.fromResponse(reader)
                }
                else -> break
              }
            }
            HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge(
              node = node
            )
          }
        }

        override fun toResponse(writer: ResponseWriter,
            value: HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge) {
          if(value.node == null) {
            writer.writeObject(RESPONSE_FIELDS[0], null)
          } else {
            writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
              Node.toResponse(writer, value.node)
            }
          }
        }

        object Node :
            ResponseAdapter<HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node> {
          private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.forString("name", "name", null, false, null)
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node {
            return reader.run {
              var name: String? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> name = readString(RESPONSE_FIELDS[0])
                  else -> break
                }
              }
              HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node(
                name = name!!
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: HeroDetailsImpl.HumanHeroDetailsImpl.FriendsConnection.Edge.Node) {
            writer.writeString(RESPONSE_FIELDS[0], value.name)
          }
        }
      }
    }
  }

  object OtherHeroDetailsImpl : ResponseAdapter<HeroDetailsImpl.OtherHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetailsImpl.OtherHeroDetailsImpl {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var friendsConnection: HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> friendsConnection = readObject<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection>(RESPONSE_FIELDS[2]) { reader ->
              FriendsConnection.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetailsImpl.OtherHeroDetailsImpl(
          __typename = __typename!!,
          name = name!!,
          friendsConnection = friendsConnection!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetailsImpl.OtherHeroDetailsImpl) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
        FriendsConnection.toResponse(writer, value.friendsConnection)
      }
    }

    object FriendsConnection :
        ResponseAdapter<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection> {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forInt("totalCount", "totalCount", null, true, null),
        ResponseField.forList("edges", "edges", null, true, null)
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection {
        return reader.run {
          var totalCount: Int? = null
          var edges: List<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge?>? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> totalCount = readInt(RESPONSE_FIELDS[0])
              1 -> edges = readList<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge>(RESPONSE_FIELDS[1]) { reader ->
                reader.readObject<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge> { reader ->
                  Edge.fromResponse(reader)
                }
              }
              else -> break
            }
          }
          HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection(
            totalCount = totalCount,
            edges = edges
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection) {
        writer.writeInt(RESPONSE_FIELDS[0], value.totalCount)
        writer.writeList(RESPONSE_FIELDS[1], value.edges) { values, listItemWriter ->
          values?.forEach { value ->
            if(value == null) {
              listItemWriter.writeObject(null)
            } else {
              listItemWriter.writeObject { writer ->
                Edge.toResponse(writer, value)
              }
            }
          }
        }
      }

      object Edge : ResponseAdapter<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge> {
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forObject("node", "node", null, true, null)
        )

        override fun fromResponse(reader: ResponseReader, __typename: String?):
            HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge {
          return reader.run {
            var node: HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node? = null
            while(true) {
              when (selectField(RESPONSE_FIELDS)) {
                0 -> node = readObject<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                  Node.fromResponse(reader)
                }
                else -> break
              }
            }
            HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge(
              node = node
            )
          }
        }

        override fun toResponse(writer: ResponseWriter,
            value: HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge) {
          if(value.node == null) {
            writer.writeObject(RESPONSE_FIELDS[0], null)
          } else {
            writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
              Node.toResponse(writer, value.node)
            }
          }
        }

        object Node :
            ResponseAdapter<HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node> {
          private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField.forString("name", "name", null, false, null)
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node {
            return reader.run {
              var name: String? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> name = readString(RESPONSE_FIELDS[0])
                  else -> break
                }
              }
              HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node(
                name = name!!
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: HeroDetailsImpl.OtherHeroDetailsImpl.FriendsConnection.Edge.Node) {
            writer.writeString(RESPONSE_FIELDS[0], value.name)
          }
        }
      }
    }
  }
}
