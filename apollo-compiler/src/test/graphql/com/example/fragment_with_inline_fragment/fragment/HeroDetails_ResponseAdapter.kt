// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_with_inline_fragment.fragment

import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.ResponseReader
import com.apollographql.apollo.api.internal.ResponseWriter
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
object HeroDetails_ResponseAdapter : ResponseAdapter<HeroDetails.HeroDetailsImpl> {
  private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.forString("__typename", "__typename", null, false, null),
    ResponseField.forString("name", "name", null, false, null),
    ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
  )

  override fun fromResponse(reader: ResponseReader, __typename: String?):
      HeroDetails.HeroDetailsImpl {
    val typename = __typename ?: reader.readString(RESPONSE_FIELDS[0])
    return when(typename) {
      "Droid" -> DroidHeroDetailsImpl_ResponseAdapter.fromResponse(reader, typename)
      "Human" -> HumanHeroDetailsImpl_ResponseAdapter.fromResponse(reader, typename)
      else -> OtherHeroDetailsImpl_ResponseAdapter.fromResponse(reader, typename)
    }
  }

  override fun toResponse(writer: ResponseWriter, value: HeroDetails.HeroDetailsImpl) {
    when(value) {
      is HeroDetails.DroidHeroDetailsImpl -> DroidHeroDetailsImpl_ResponseAdapter.toResponse(writer, value)
      is HeroDetails.HumanHeroDetailsImpl -> HumanHeroDetailsImpl_ResponseAdapter.toResponse(writer, value)
      is HeroDetails.OtherHeroDetailsImpl -> OtherHeroDetailsImpl_ResponseAdapter.toResponse(writer, value)
    }
  }

  object Node1_ResponseAdapter : ResponseAdapter<HeroDetails.Node1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Node1 {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            else -> break
          }
        }
        HeroDetails.Node1(
          __typename = __typename!!,
          name = name!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Node1) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
    }
  }

  object Edge1_ResponseAdapter : ResponseAdapter<HeroDetails.Edge1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forObject("node", "node", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Edge1 {
      return reader.run {
        var __typename: String? = __typename
        var node: HeroDetails.Node1? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> node = readObject<HeroDetails.Node1>(RESPONSE_FIELDS[1]) { reader ->
              Node1_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.Edge1(
          __typename = __typename!!,
          node = node
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Edge1) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      if(value.node == null) {
        writer.writeObject(RESPONSE_FIELDS[1], null)
      } else {
        writer.writeObject(RESPONSE_FIELDS[1]) { writer ->
          Node1_ResponseAdapter.toResponse(writer, value.node)
        }
      }
    }
  }

  object FriendsConnection1_ResponseAdapter : ResponseAdapter<HeroDetails.FriendsConnection1> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forInt("totalCount", "totalCount", null, true, null),
      ResponseField.forList("edges", "edges", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.FriendsConnection1 {
      return reader.run {
        var __typename: String? = __typename
        var totalCount: Int? = null
        var edges: List<HeroDetails.Edge1?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> totalCount = readInt(RESPONSE_FIELDS[1])
            2 -> edges = readList<HeroDetails.Edge1>(RESPONSE_FIELDS[2]) { reader ->
              reader.readObject<HeroDetails.Edge1> { reader ->
                Edge1_ResponseAdapter.fromResponse(reader)
              }
            }
            else -> break
          }
        }
        HeroDetails.FriendsConnection1(
          __typename = __typename!!,
          totalCount = totalCount,
          edges = edges
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.FriendsConnection1) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeInt(RESPONSE_FIELDS[1], value.totalCount)
      writer.writeList(RESPONSE_FIELDS[2], value.edges) { values, listItemWriter ->
        values?.forEach { value ->
          if(value == null) {
            listItemWriter.writeObject(null)
          } else {
            listItemWriter.writeObject { writer ->
              Edge1_ResponseAdapter.toResponse(writer, value)
            }
          }
        }
      }
    }
  }

  object DroidHeroDetailsImpl_ResponseAdapter : ResponseAdapter<HeroDetails.DroidHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forString("primaryFunction", "primaryFunction", null, true, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.DroidHeroDetailsImpl {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var primaryFunction: String? = null
        var friendsConnection: HeroDetails.FriendsConnection1? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> primaryFunction = readString(RESPONSE_FIELDS[2])
            3 -> friendsConnection = readObject<HeroDetails.FriendsConnection1>(RESPONSE_FIELDS[3]) { reader ->
              FriendsConnection1_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.DroidHeroDetailsImpl(
          __typename = __typename!!,
          name = name!!,
          primaryFunction = primaryFunction,
          friendsConnection = friendsConnection!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.DroidHeroDetailsImpl) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      writer.writeString(RESPONSE_FIELDS[2], value.primaryFunction)
      writer.writeObject(RESPONSE_FIELDS[3]) { writer ->
        FriendsConnection1_ResponseAdapter.toResponse(writer, value.friendsConnection)
      }
    }
  }

  object Node2_ResponseAdapter : ResponseAdapter<HeroDetails.Node2> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Node2 {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            else -> break
          }
        }
        HeroDetails.Node2(
          __typename = __typename!!,
          name = name!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Node2) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
    }
  }

  object Edge2_ResponseAdapter : ResponseAdapter<HeroDetails.Edge2> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forObject("node", "node", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Edge2 {
      return reader.run {
        var __typename: String? = __typename
        var node: HeroDetails.Node2? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> node = readObject<HeroDetails.Node2>(RESPONSE_FIELDS[1]) { reader ->
              Node2_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.Edge2(
          __typename = __typename!!,
          node = node
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Edge2) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      if(value.node == null) {
        writer.writeObject(RESPONSE_FIELDS[1], null)
      } else {
        writer.writeObject(RESPONSE_FIELDS[1]) { writer ->
          Node2_ResponseAdapter.toResponse(writer, value.node)
        }
      }
    }
  }

  object FriendsConnection2_ResponseAdapter : ResponseAdapter<HeroDetails.FriendsConnection2> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forInt("totalCount", "totalCount", null, true, null),
      ResponseField.forList("edges", "edges", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.FriendsConnection2 {
      return reader.run {
        var __typename: String? = __typename
        var totalCount: Int? = null
        var edges: List<HeroDetails.Edge2?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> totalCount = readInt(RESPONSE_FIELDS[1])
            2 -> edges = readList<HeroDetails.Edge2>(RESPONSE_FIELDS[2]) { reader ->
              reader.readObject<HeroDetails.Edge2> { reader ->
                Edge2_ResponseAdapter.fromResponse(reader)
              }
            }
            else -> break
          }
        }
        HeroDetails.FriendsConnection2(
          __typename = __typename!!,
          totalCount = totalCount,
          edges = edges
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.FriendsConnection2) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeInt(RESPONSE_FIELDS[1], value.totalCount)
      writer.writeList(RESPONSE_FIELDS[2], value.edges) { values, listItemWriter ->
        values?.forEach { value ->
          if(value == null) {
            listItemWriter.writeObject(null)
          } else {
            listItemWriter.writeObject { writer ->
              Edge2_ResponseAdapter.toResponse(writer, value)
            }
          }
        }
      }
    }
  }

  object HumanHeroDetailsImpl_ResponseAdapter : ResponseAdapter<HeroDetails.HumanHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.HumanHeroDetailsImpl {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var friendsConnection: HeroDetails.FriendsConnection2? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> friendsConnection = readObject<HeroDetails.FriendsConnection2>(RESPONSE_FIELDS[2]) { reader ->
              FriendsConnection2_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.HumanHeroDetailsImpl(
          __typename = __typename!!,
          name = name!!,
          friendsConnection = friendsConnection!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.HumanHeroDetailsImpl) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
        FriendsConnection2_ResponseAdapter.toResponse(writer, value.friendsConnection)
      }
    }
  }

  object Node3_ResponseAdapter : ResponseAdapter<HeroDetails.Node3> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Node3 {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            else -> break
          }
        }
        HeroDetails.Node3(
          __typename = __typename!!,
          name = name!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Node3) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
    }
  }

  object Edge3_ResponseAdapter : ResponseAdapter<HeroDetails.Edge3> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forObject("node", "node", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?): HeroDetails.Edge3 {
      return reader.run {
        var __typename: String? = __typename
        var node: HeroDetails.Node3? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> node = readObject<HeroDetails.Node3>(RESPONSE_FIELDS[1]) { reader ->
              Node3_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.Edge3(
          __typename = __typename!!,
          node = node
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.Edge3) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      if(value.node == null) {
        writer.writeObject(RESPONSE_FIELDS[1], null)
      } else {
        writer.writeObject(RESPONSE_FIELDS[1]) { writer ->
          Node3_ResponseAdapter.toResponse(writer, value.node)
        }
      }
    }
  }

  object FriendsConnection3_ResponseAdapter : ResponseAdapter<HeroDetails.FriendsConnection3> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forInt("totalCount", "totalCount", null, true, null),
      ResponseField.forList("edges", "edges", null, true, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.FriendsConnection3 {
      return reader.run {
        var __typename: String? = __typename
        var totalCount: Int? = null
        var edges: List<HeroDetails.Edge3?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> totalCount = readInt(RESPONSE_FIELDS[1])
            2 -> edges = readList<HeroDetails.Edge3>(RESPONSE_FIELDS[2]) { reader ->
              reader.readObject<HeroDetails.Edge3> { reader ->
                Edge3_ResponseAdapter.fromResponse(reader)
              }
            }
            else -> break
          }
        }
        HeroDetails.FriendsConnection3(
          __typename = __typename!!,
          totalCount = totalCount,
          edges = edges
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.FriendsConnection3) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeInt(RESPONSE_FIELDS[1], value.totalCount)
      writer.writeList(RESPONSE_FIELDS[2], value.edges) { values, listItemWriter ->
        values?.forEach { value ->
          if(value == null) {
            listItemWriter.writeObject(null)
          } else {
            listItemWriter.writeObject { writer ->
              Edge3_ResponseAdapter.toResponse(writer, value)
            }
          }
        }
      }
    }
  }

  object OtherHeroDetailsImpl_ResponseAdapter : ResponseAdapter<HeroDetails.OtherHeroDetailsImpl> {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.forString("__typename", "__typename", null, false, null),
      ResponseField.forString("name", "name", null, false, null),
      ResponseField.forObject("friendsConnection", "friendsConnection", null, false, null)
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        HeroDetails.OtherHeroDetailsImpl {
      return reader.run {
        var __typename: String? = __typename
        var name: String? = null
        var friendsConnection: HeroDetails.FriendsConnection3? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> __typename = readString(RESPONSE_FIELDS[0])
            1 -> name = readString(RESPONSE_FIELDS[1])
            2 -> friendsConnection = readObject<HeroDetails.FriendsConnection3>(RESPONSE_FIELDS[2]) { reader ->
              FriendsConnection3_ResponseAdapter.fromResponse(reader)
            }
            else -> break
          }
        }
        HeroDetails.OtherHeroDetailsImpl(
          __typename = __typename!!,
          name = name!!,
          friendsConnection = friendsConnection!!
        )
      }
    }

    override fun toResponse(writer: ResponseWriter, value: HeroDetails.OtherHeroDetailsImpl) {
      writer.writeString(RESPONSE_FIELDS[0], value.__typename)
      writer.writeString(RESPONSE_FIELDS[1], value.name)
      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
        FriendsConnection3_ResponseAdapter.toResponse(writer, value.friendsConnection)
      }
    }
  }
}
