// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.inline_fragment_complex.fragment

import com.apollographql.apollo.api.GraphqlFragment
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseFieldMapper
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller
import com.apollographql.apollo.api.internal.ResponseReader
import kotlin.Array
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
data class HumanFrag(
  val __typename: String = "Human",
  val profilePictureUrl: String?,
  val friends: List<Friend>
) : GraphqlFragment {
  override fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->
    writer.writeString(RESPONSE_FIELDS[0], this@HumanFrag.__typename)
    writer.writeString(RESPONSE_FIELDS[1], this@HumanFrag.profilePictureUrl)
    writer.writeList(RESPONSE_FIELDS[2], this@HumanFrag.friends) { value, listItemWriter ->
      value?.forEach { value ->
        listItemWriter.writeObject(value.marshaller())}
    }
  }

  companion object {
    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField.forString("__typename", "__typename", null, false, null),
        ResponseField.forString("profilePictureUrl", "profilePictureUrl", null, true, null),
        ResponseField.forList("friends", "friends", null, false, null)
        )

    val FRAGMENT_DEFINITION: String = """
        |fragment HumanFrag on Human {
        |  __typename
        |  profilePictureUrl
        |  friends {
        |    __typename
        |    isFamous
        |  }
        |}
        """.trimMargin()

    operator fun invoke(reader: ResponseReader): HumanFrag = reader.run {
      val __typename = readString(RESPONSE_FIELDS[0])!!
      val profilePictureUrl = readString(RESPONSE_FIELDS[1])
      val friends = readList<Friend>(RESPONSE_FIELDS[2]) { reader ->
        reader.readObject<Friend> { reader ->
          Friend(reader)
        }
      }!!.map { it!! }
      HumanFrag(
        __typename = __typename,
        profilePictureUrl = profilePictureUrl,
        friends = friends
      )
    }

    @Suppress("FunctionName")
    fun Mapper(): ResponseFieldMapper<HumanFrag> = ResponseFieldMapper { invoke(it) }
  }

  data class Friend(
    val __typename: String = "Being",
    val isFamous: Boolean?
  ) {
    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->
      writer.writeString(RESPONSE_FIELDS[0], this@Friend.__typename)
      writer.writeBoolean(RESPONSE_FIELDS[1], this@Friend.isFamous)
    }

    companion object {
      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField.forString("__typename", "__typename", null, false, null),
          ResponseField.forBoolean("isFamous", "isFamous", null, true, null)
          )

      operator fun invoke(reader: ResponseReader): Friend = reader.run {
        val __typename = readString(RESPONSE_FIELDS[0])!!
        val isFamous = readBoolean(RESPONSE_FIELDS[1])
        Friend(
          __typename = __typename,
          isFamous = isFamous
        )
      }

      @Suppress("FunctionName")
      fun Mapper(): ResponseFieldMapper<Friend> = ResponseFieldMapper { invoke(it) }
    }
  }
}
