// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.named_fragment_without_implementation

import com.apollographql.apollo3.api.Operation
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.named_fragment_without_implementation.adapter.TestQuery_Adapter
import com.example.named_fragment_without_implementation.adapter.TestQuery_ResponseAdapter
import com.example.named_fragment_without_implementation.fragment.DroidDetails
import com.example.named_fragment_without_implementation.fragment.HumanDetails
import kotlin.Double
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery : Query<TestQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    responseAdapterCache.getVariablesAdapterFor(this::class) {
      TestQuery_Adapter(responseAdapterCache)
    }.toResponse(writer, this)
  }

  override fun name(): String = OPERATION_NAME

  override fun adapter(responseAdapterCache: ResponseAdapterCache): ResponseAdapter<Data> {
    val adapter = responseAdapterCache.getAdapterFor(this::class) {
      TestQuery_ResponseAdapter(responseAdapterCache)
    }
    return adapter
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet(null, TestQuery_ResponseAdapter.RESPONSE_FIELDS)
  )
  /**
   * The query type, represents all of the entry points into our object graph
   */
  data class Data(
    val hero: Hero?
  ) : Operation.Data {
    /**
     * A character from the Star Wars universe
     */
    interface Hero {
      val __typename: String

      /**
       * The name of the character
       */
      val name: String

      data class HumanHero(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * Height in the preferred unit, default is meters
         */
        override val height: Double?
      ) : Hero, HumanDetails

      data class DroidHero(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * This droid's primary function
         */
        override val primaryFunction: String?
      ) : Hero, DroidDetails

      data class OtherHero(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String
      ) : Hero

      companion object {
        fun Hero.asHumanHero(): HumanHero? = this as? HumanHero

        fun Hero.asDroidHero(): DroidHero? = this as? DroidHero

        fun Hero.asHumanDetails(): HumanDetails? = this as? HumanDetails

        fun Hero.asDroidDetails(): DroidDetails? = this as? DroidDetails
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "3081feaebd920cae2f043ab275040816dd7b5ad96f81512c93dc843a9e4e918c"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestQuery {
          |  hero {
          |    __typename
          |    name
          |    ...HumanDetails
          |    ...DroidDetails
          |  }
          |}
          |fragment HumanDetails on Human {
          |  __typename
          |  height
          |}
          |fragment DroidDetails on Droid {
          |  __typename
          |  primaryFunction
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: String = "TestQuery"
  }
}
