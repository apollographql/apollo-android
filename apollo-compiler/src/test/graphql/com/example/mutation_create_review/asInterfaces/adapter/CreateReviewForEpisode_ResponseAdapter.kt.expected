//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.adapter

import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review.CreateReviewForEpisode
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.adapter.Episode_ResponseAdapter
import java.util.Date
import kotlin.Int
import kotlin.String
import kotlin.collections.List

internal object CreateReviewForEpisode_ResponseAdapter {
  object Data : ResponseAdapter<CreateReviewForEpisode.Data> {
    val RESPONSE_NAMES: List<String> = listOf("createReview")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        CreateReviewForEpisode.Data {
      var createReview: CreateReviewForEpisode.Data.CreateReview? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> createReview = CreateReview.obj().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return CreateReviewForEpisode.Data(
        createReview = createReview
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: CreateReviewForEpisode.Data
    ) {
      writer.name("createReview")
      CreateReview.obj().nullable().toResponse(writer, responseAdapterCache, value.createReview)
    }

    object CreateReview : ResponseAdapter<CreateReviewForEpisode.Data.CreateReview> {
      val RESPONSE_NAMES: List<String> = listOf("stars", "commentary", "listOfListOfString",
          "listOfListOfEnum", "listOfListOfCustom", "listOfListOfObject")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          CreateReviewForEpisode.Data.CreateReview {
        var stars: Int? = null
        var commentary: String? = null
        var listOfListOfString: List<List<String>>? = null
        var listOfListOfEnum: List<List<Episode>>? = null
        var listOfListOfCustom: List<List<Date>>? = null
        var listOfListOfObject: List<List<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject>>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> stars = IntResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> commentary = NullableStringResponseAdapter.fromResponse(reader,
                responseAdapterCache)
            2 -> listOfListOfString = StringResponseAdapter.list().list().nullable().fromResponse(reader,
                responseAdapterCache)
            3 -> listOfListOfEnum = Episode_ResponseAdapter.list().list().nullable().fromResponse(reader,
                responseAdapterCache)
            4 -> listOfListOfCustom = responseAdapterCache.responseAdapterFor<Date>(com.example.mutation_create_review.type.CustomScalars.Date).list().list().nullable().fromResponse(reader,
                responseAdapterCache)
            5 -> listOfListOfObject = ListOfListOfObject.obj().list().list().nullable().fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return CreateReviewForEpisode.Data.CreateReview(
          stars = stars!!,
          commentary = commentary,
          listOfListOfString = listOfListOfString,
          listOfListOfEnum = listOfListOfEnum,
          listOfListOfCustom = listOfListOfCustom,
          listOfListOfObject = listOfListOfObject
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: CreateReviewForEpisode.Data.CreateReview
      ) {
        writer.name("stars")
        IntResponseAdapter.toResponse(writer, responseAdapterCache, value.stars)
        writer.name("commentary")
        NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.commentary)
        writer.name("listOfListOfString")
        StringResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
            value.listOfListOfString)
        writer.name("listOfListOfEnum")
        Episode_ResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
            value.listOfListOfEnum)
        writer.name("listOfListOfCustom")
        responseAdapterCache.responseAdapterFor<Date>(com.example.mutation_create_review.type.CustomScalars.Date).list().list().nullable().toResponse(writer,
            responseAdapterCache, value.listOfListOfCustom)
        writer.name("listOfListOfObject")
        ListOfListOfObject.obj().list().list().nullable().toResponse(writer, responseAdapterCache,
            value.listOfListOfObject)
      }

      object ListOfListOfObject :
          ResponseAdapter<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject> {
        val RESPONSE_NAMES: List<String> = listOf("name")

        override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
            CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject {
          var name: String? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
              else -> break
            }
          }
          return CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject(
            name = name!!
          )
        }

        override fun toResponse(
          writer: JsonWriter,
          responseAdapterCache: ResponseAdapterCache,
          value: CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject
        ) {
          writer.name("name")
          StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
        }
      }
    }
  }
}
