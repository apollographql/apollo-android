//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.mutation_create_review.responsefields

import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.MergedField
import com.apollographql.apollo3.api.Variable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import kotlin.Array

internal object CreateReviewForEpisode_ResponseFields {
  val fields: Array<MergedField> = arrayOf(
    MergedField(
      type = MergedField.Type.Named.Object("unused"),
      fieldName = "data",
      fieldSets = listOf(
        FieldSet(null, Data.fields),
      ),
    ),
  )


  object Data {
    val fields: Array<MergedField> = arrayOf(
      MergedField(
        type = MergedField.Type.Named.Object("unused"),
        fieldName = "createReview",
        arguments = mapOf("episode" to Variable("ep"),
          "review" to Variable("review")
        ),
        fieldSets = listOf(
          FieldSet(null, CreateReview.fields),
        ),
      ),
    )


    object CreateReview {
      val fields: Array<MergedField> = arrayOf(
        MergedField(
          type = MergedField.Type.Named.Other("unused").notNull(),
          fieldName = "stars",
        ),
        MergedField(
          type = MergedField.Type.Named.Other("unused"),
          fieldName = "commentary",
        ),
        MergedField(
          type = MergedField.Type.Named.Other("unused").notNull().list().notNull().list(),
          fieldName = "listOfListOfString",
        ),
        MergedField(
          type = MergedField.Type.Named.Other("unused").notNull().list().notNull().list(),
          fieldName = "listOfListOfEnum",
        ),
        MergedField(
          type = MergedField.Type.Named.Other("unused").notNull().list().notNull().list(),
          fieldName = "listOfListOfCustom",
        ),
        MergedField(
          type = MergedField.Type.Named.Object("unused").notNull().list().notNull().list(),
          fieldName = "listOfListOfObject",
          fieldSets = listOf(
            FieldSet(null, ListOfListOfObject.fields),
          ),
        ),
      )


      object ListOfListOfObject {
        val fields: Array<MergedField> = arrayOf(
          MergedField(
            type = MergedField.Type.Named.Other("unused").notNull(),
            fieldName = "name",
          ),
        )

      }
    }
  }
}
