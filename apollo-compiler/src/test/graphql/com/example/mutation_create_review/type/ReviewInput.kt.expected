// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.type

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.InputType
import java.util.Date
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

/**
 * The input object sent when someone is creating a new review
 */
@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
internal data class ReviewInput(
  /**
   * 0-5 stars
   */
  val stars: Int,
  /**
   * for test purpose only
   */
  val nullableIntFieldWithDefaultValue: Input<Int?> = Input.Absent,
  /**
   * Comment about the movie, optional
   */
  val commentary: Input<String?> = Input.Absent,
  /**
   * Favorite color, optional
   */
  val favoriteColor: ColorInput,
  /**
   * for test purpose only
   */
  val enumWithDefaultValue: Input<Episode?> = Input.Absent,
  /**
   * for test purpose only
   */
  val nonNullableEnumWithDefaultValue: Input<Episode> = Input.Absent,
  /**
   * for test purpose only
   */
  val nullableEnum: Input<Episode?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfCustomScalar: Input<List<Date?>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val customScalar: Input<Date?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfEnums: Input<List<Episode?>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfInt: Input<List<Int?>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfString: Input<List<String?>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfStringNonOptional: List<String?>,
  /**
   * for test purpose only
   */
  val listOfInputTypes: Input<List<ColorInput?>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val booleanWithDefaultValue: Input<Boolean?> = Input.Absent,
  /**
   * for test purpose only
   */
  val booleanNonOptional: Input<Boolean?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfListOfString: Input<List<List<String>>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfListOfEnum: Input<List<List<Episode>>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfListOfCustom: Input<List<List<Date>>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val listOfListOfObject: Input<List<List<ColorInput>>?> = Input.Absent,
  /**
   * for test purpose only
   */
  val capitalizedField: Input<String?> = Input.Absent,
  /**
   * for test purpose only
   */
  val capitalizedInt: Input<Int?> = Input.Absent
) : InputType
