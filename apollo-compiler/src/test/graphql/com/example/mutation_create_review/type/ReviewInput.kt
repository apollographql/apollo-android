// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.type

import com.apollographql.apollo.api.InputType
import com.apollographql.apollo.api.internal.InputFieldMarshaller
import com.apollographql.apollo.api.internal.InputFieldWriter
import java.util.Date
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

/**
 * The input object sent when someone is creating a new review
 */
@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter")
internal data class ReviewInput(
  /**
   * 0-5 stars
   */
  val stars: Int,
  /**
   * for test purpose only
   */
  val nullableIntFieldWithDefaultValue: Int? = 10,
  /**
   * Comment about the movie, optional
   */
  val commentary: String? = null,
  /**
   * Favorite color, optional
   */
  val favoriteColor: ColorInput,
  /**
   * for test purpose only
   */
  val enumWithDefaultValue: Episode? = Episode.safeValueOf("JEDI"),
  /**
   * for test purpose only
   */
  val nonNullableEnumWithDefaultValue: Episode = Episode.safeValueOf("JEDI"),
  /**
   * for test purpose only
   */
  val nullableEnum: Episode? = null,
  /**
   * for test purpose only
   */
  val listOfCustomScalar: List<Date?>? = null,
  /**
   * for test purpose only
   */
  val customScalar: Date? = null,
  /**
   * for test purpose only
   */
  val listOfEnums: List<Episode?>? = listOf(Episode.safeValueOf("NEWHOPE"),
      Episode.safeValueOf("EMPIRE")),
  /**
   * for test purpose only
   */
  val listOfInt: List<Int?>? = listOf(1, 2, 3),
  /**
   * for test purpose only
   */
  val listOfString: List<String?>? = listOf("test1", "test2", "test3"),
  /**
   * for test purpose only
   */
  val listOfStringNonOptional: List<String?>,
  /**
   * for test purpose only
   */
  val listOfInputTypes: List<ColorInput?>? = emptyList(),
  /**
   * for test purpose only
   */
  val booleanWithDefaultValue: Boolean? = true,
  /**
   * for test purpose only
   */
  val listOfListOfString: List<List<String>>? = null,
  /**
   * for test purpose only
   */
  val listOfListOfEnum: List<List<Episode>>? = null,
  /**
   * for test purpose only
   */
  val listOfListOfCustom: List<List<Date>>? = null,
  /**
   * for test purpose only
   */
  val listOfListOfObject: List<List<ColorInput>>? = null,
  /**
   * for test purpose only
   */
  val capitalizedField: String? = null
) : InputType {
  override fun marshaller(): InputFieldMarshaller = InputFieldMarshaller.invoke { writer ->
    writer.writeInt("stars", this@ReviewInput.stars)
    if (this@ReviewInput.nullableIntFieldWithDefaultValue != null) {
      writer.writeInt("nullableIntFieldWithDefaultValue",
          this@ReviewInput.nullableIntFieldWithDefaultValue)
    }
    if (this@ReviewInput.commentary != null) {
      writer.writeString("commentary", this@ReviewInput.commentary)
    }
    writer.writeObject("favoriteColor", this@ReviewInput.favoriteColor.marshaller())
    if (this@ReviewInput.enumWithDefaultValue != null) {
      writer.writeString("enumWithDefaultValue", this@ReviewInput.enumWithDefaultValue.rawValue)
    }
    writer.writeString("nonNullableEnumWithDefaultValue",
        this@ReviewInput.nonNullableEnumWithDefaultValue.rawValue)
    if (this@ReviewInput.nullableEnum != null) {
      writer.writeString("nullableEnum", this@ReviewInput.nullableEnum.rawValue)
    }
    if (this@ReviewInput.listOfCustomScalar != null) {
      writer.writeList("listOfCustomScalar", this@ReviewInput.listOfCustomScalar.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeCustom(CustomType.DATE, value)
          }
        }
      })
    }
    if (this@ReviewInput.customScalar != null) {
      writer.writeCustom("customScalar", CustomType.DATE, this@ReviewInput.customScalar)
    }
    if (this@ReviewInput.listOfEnums != null) {
      writer.writeList("listOfEnums", this@ReviewInput.listOfEnums.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeString(value?.rawValue)
          }
        }
      })
    }
    if (this@ReviewInput.listOfInt != null) {
      writer.writeList("listOfInt", this@ReviewInput.listOfInt.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeInt(value)
          }
        }
      })
    }
    if (this@ReviewInput.listOfString != null) {
      writer.writeList("listOfString", this@ReviewInput.listOfString.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeString(value)
          }
        }
      })
    }
    writer.writeList("listOfStringNonOptional") { listItemWriter ->
      this@ReviewInput.listOfStringNonOptional.forEach { value ->
        listItemWriter.writeString(value)
      }
    }
    if (this@ReviewInput.listOfInputTypes != null) {
      writer.writeList("listOfInputTypes", this@ReviewInput.listOfInputTypes.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeObject(value?.marshaller())
          }
        }
      })
    }
    if (this@ReviewInput.booleanWithDefaultValue != null) {
      writer.writeBoolean("booleanWithDefaultValue", this@ReviewInput.booleanWithDefaultValue)
    }
    if (this@ReviewInput.listOfListOfString != null) {
      writer.writeList("listOfListOfString", this@ReviewInput.listOfListOfString.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeList { listItemWriter ->
              value.forEach { value ->
                listItemWriter.writeString(value)
              }
            }
          }
        }
      })
    }
    if (this@ReviewInput.listOfListOfEnum != null) {
      writer.writeList("listOfListOfEnum", this@ReviewInput.listOfListOfEnum.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeList { listItemWriter ->
              value.forEach { value ->
                listItemWriter.writeString(value.rawValue)
              }
            }
          }
        }
      })
    }
    if (this@ReviewInput.listOfListOfCustom != null) {
      writer.writeList("listOfListOfCustom", this@ReviewInput.listOfListOfCustom.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeList { listItemWriter ->
              value.forEach { value ->
                listItemWriter.writeCustom(CustomType.DATE, value)
              }
            }
          }
        }
      })
    }
    if (this@ReviewInput.listOfListOfObject != null) {
      writer.writeList("listOfListOfObject", this@ReviewInput.listOfListOfObject.let { value ->
        InputFieldWriter.ListWriter { listItemWriter ->
          value.forEach { value ->
            listItemWriter.writeList { listItemWriter ->
              value.forEach { value ->
                listItemWriter.writeObject(value.marshaller())
              }
            }
          }
        }
      })
    }
    if (this@ReviewInput.capitalizedField != null) {
      writer.writeString("CapitalizedField", this@ReviewInput.capitalizedField)
    }
  }
}
