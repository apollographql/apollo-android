// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.type.adapter

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.internal.BooleanResponseAdapter
import com.apollographql.apollo3.api.internal.IntResponseAdapter
import com.apollographql.apollo3.api.internal.ListResponseAdapter
import com.apollographql.apollo3.api.internal.NullableResponseAdapter
import com.apollographql.apollo3.api.internal.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.mutation_create_review.type.ColorInput
import com.example.mutation_create_review.type.CustomScalars
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.Episode_ResponseAdapter
import com.example.mutation_create_review.type.ReviewInput
import java.util.Date
import kotlin.Boolean
import kotlin.IllegalStateException
import kotlin.Int
import kotlin.String
import kotlin.collections.List

internal class ReviewInput_Adapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<ReviewInput> {
  private val intAdapter: ResponseAdapter<Int> = IntResponseAdapter

  private val nullableIntAdapter: ResponseAdapter<Int?> =
      NullableResponseAdapter(IntResponseAdapter)

  private val nullableStringAdapter: ResponseAdapter<String?> =
      NullableResponseAdapter(StringResponseAdapter)

  private val colorInputAdapter: ResponseAdapter<ColorInput> =
      ColorInput_Adapter(responseAdapterCache)

  private val nullableEpisodeAdapter: ResponseAdapter<Episode?> =
      NullableResponseAdapter(Episode_ResponseAdapter)

  private val episodeAdapter: ResponseAdapter<Episode> = Episode_ResponseAdapter

  private val nullableListOfNullableDateAdapter: ResponseAdapter<List<Date?>?> =
      NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date))))

  private val nullableDateAdapter: ResponseAdapter<Date?> =
      NullableResponseAdapter(responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date))

  private val nullableListOfNullableEpisodeAdapter: ResponseAdapter<List<Episode?>?> =
      NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(Episode_ResponseAdapter)))

  private val nullableListOfNullableIntAdapter: ResponseAdapter<List<Int?>?> =
      NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(IntResponseAdapter)))

  private val nullableListOfNullableStringAdapter: ResponseAdapter<List<String?>?> =
      NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(StringResponseAdapter)))

  private val listOfNullableStringAdapter: ResponseAdapter<List<String?>> =
      ListResponseAdapter(NullableResponseAdapter(StringResponseAdapter))

  private val nullableListOfNullableColorInputAdapter: ResponseAdapter<List<ColorInput?>?> =
      NullableResponseAdapter(ListResponseAdapter(NullableResponseAdapter(ColorInput_Adapter(responseAdapterCache))))

  private val nullableBooleanAdapter: ResponseAdapter<Boolean?> =
      NullableResponseAdapter(BooleanResponseAdapter)

  private val nullableListOfListOfStringAdapter: ResponseAdapter<List<List<String>>?> =
      NullableResponseAdapter(ListResponseAdapter(ListResponseAdapter(StringResponseAdapter)))

  private val nullableListOfListOfEpisodeAdapter: ResponseAdapter<List<List<Episode>>?> =
      NullableResponseAdapter(ListResponseAdapter(ListResponseAdapter(Episode_ResponseAdapter)))

  private val nullableListOfListOfDateAdapter: ResponseAdapter<List<List<Date>>?> =
      NullableResponseAdapter(ListResponseAdapter(ListResponseAdapter(responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date))))

  private val nullableListOfListOfColorInputAdapter: ResponseAdapter<List<List<ColorInput>>?> =
      NullableResponseAdapter(ListResponseAdapter(ListResponseAdapter(ColorInput_Adapter(responseAdapterCache))))

  override fun fromResponse(reader: JsonReader): ReviewInput = throw
      IllegalStateException("Input type used in output position")
  override fun toResponse(writer: JsonWriter, value: ReviewInput) {
    writer.beginObject()
    writer.name("stars")
    intAdapter.toResponse(writer, value.stars)
    if (value.nullableIntFieldWithDefaultValue is Input.Present) {
      writer.name("nullableIntFieldWithDefaultValue")
      nullableIntAdapter.toResponse(writer, value.nullableIntFieldWithDefaultValue.value)
    }
    if (value.commentary is Input.Present) {
      writer.name("commentary")
      nullableStringAdapter.toResponse(writer, value.commentary.value)
    }
    writer.name("favoriteColor")
    colorInputAdapter.toResponse(writer, value.favoriteColor)
    if (value.enumWithDefaultValue is Input.Present) {
      writer.name("enumWithDefaultValue")
      nullableEpisodeAdapter.toResponse(writer, value.enumWithDefaultValue.value)
    }
    if (value.nonNullableEnumWithDefaultValue is Input.Present) {
      writer.name("nonNullableEnumWithDefaultValue")
      episodeAdapter.toResponse(writer, value.nonNullableEnumWithDefaultValue.value)
    }
    if (value.nullableEnum is Input.Present) {
      writer.name("nullableEnum")
      nullableEpisodeAdapter.toResponse(writer, value.nullableEnum.value)
    }
    if (value.listOfCustomScalar is Input.Present) {
      writer.name("listOfCustomScalar")
      nullableListOfNullableDateAdapter.toResponse(writer, value.listOfCustomScalar.value)
    }
    if (value.customScalar is Input.Present) {
      writer.name("customScalar")
      nullableDateAdapter.toResponse(writer, value.customScalar.value)
    }
    if (value.listOfEnums is Input.Present) {
      writer.name("listOfEnums")
      nullableListOfNullableEpisodeAdapter.toResponse(writer, value.listOfEnums.value)
    }
    if (value.listOfInt is Input.Present) {
      writer.name("listOfInt")
      nullableListOfNullableIntAdapter.toResponse(writer, value.listOfInt.value)
    }
    if (value.listOfString is Input.Present) {
      writer.name("listOfString")
      nullableListOfNullableStringAdapter.toResponse(writer, value.listOfString.value)
    }
    writer.name("listOfStringNonOptional")
    listOfNullableStringAdapter.toResponse(writer, value.listOfStringNonOptional)
    if (value.listOfInputTypes is Input.Present) {
      writer.name("listOfInputTypes")
      nullableListOfNullableColorInputAdapter.toResponse(writer, value.listOfInputTypes.value)
    }
    if (value.booleanWithDefaultValue is Input.Present) {
      writer.name("booleanWithDefaultValue")
      nullableBooleanAdapter.toResponse(writer, value.booleanWithDefaultValue.value)
    }
    if (value.booleanNonOptional is Input.Present) {
      writer.name("booleanNonOptional")
      nullableBooleanAdapter.toResponse(writer, value.booleanNonOptional.value)
    }
    if (value.listOfListOfString is Input.Present) {
      writer.name("listOfListOfString")
      nullableListOfListOfStringAdapter.toResponse(writer, value.listOfListOfString.value)
    }
    if (value.listOfListOfEnum is Input.Present) {
      writer.name("listOfListOfEnum")
      nullableListOfListOfEpisodeAdapter.toResponse(writer, value.listOfListOfEnum.value)
    }
    if (value.listOfListOfCustom is Input.Present) {
      writer.name("listOfListOfCustom")
      nullableListOfListOfDateAdapter.toResponse(writer, value.listOfListOfCustom.value)
    }
    if (value.listOfListOfObject is Input.Present) {
      writer.name("listOfListOfObject")
      nullableListOfListOfColorInputAdapter.toResponse(writer, value.listOfListOfObject.value)
    }
    if (value.capitalizedField is Input.Present) {
      writer.name("capitalizedField")
      nullableStringAdapter.toResponse(writer, value.capitalizedField.value)
    }
    if (value.capitalizedInt is Input.Present) {
      writer.name("capitalizedInt")
      nullableIntAdapter.toResponse(writer, value.capitalizedInt.value)
    }
    writer.endObject()
  }
}
