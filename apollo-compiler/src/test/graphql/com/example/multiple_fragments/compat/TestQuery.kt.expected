//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.multiple_fragments

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.multiple_fragments.adapter.TestQuery_ResponseAdapter
import com.example.multiple_fragments.fragment.AFragment
import com.example.multiple_fragments.selections.TestQuerySelections
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections.root

  data class Data(
    val a: A?
  ) : Query.Data

  data class A(
    val __typename: String,
    /**
     * Synthetic field for grouping fragments
     */
    val fragments: Fragments
  ) {
    data class Fragments(
      /**
       * Synthetic field for 'aFragment'
       */
      val aFragment: AFragment?
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "17957893a92546c5a6a6c22ea23453c05b06d4bf74f3be7e2ecec5d89338e14c"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   a {
     *     __typename
     *     ...aFragment
     *   }
     * }
     *
     * fragment fragment1 on ANode {
     *   field1
     * }
     *
     * fragment fragment2 on ANode {
     *   field2
     * }
     *
     * fragment aFragment on A {
     *   node {
     *     __typename
     *     ...fragment1
     *     ...fragment2
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { a { __typename ...aFragment } }  fragment fragment1 on ANode { field1 }  fragment fragment2 on ANode { field2 }  fragment aFragment on A { node { __typename ...fragment1 ...fragment2 } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
