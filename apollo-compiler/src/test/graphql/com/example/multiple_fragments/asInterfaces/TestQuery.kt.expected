//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.multiple_fragments

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.multiple_fragments.adapter.TestQuery_ResponseAdapter
import com.example.multiple_fragments.fragment.AFragment
import com.example.multiple_fragments.fragment.Fragment1
import com.example.multiple_fragments.fragment.Fragment2
import com.example.multiple_fragments.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have any variable
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val a: A?
  ) : Query.Data {
    data class A(
      override val __typename: String,
      override val node: Node?
    ) : AFragment {
      interface Node : AFragment.Node {
        override val __typename: String

        companion object {
          fun Node.fragment1() = this as? Fragment1

          fun Node.fragment2() = this as? Fragment2

          fun Node.asANode() = this as? ANodeNode
        }
      }

      data class ANodeNode(
        override val __typename: String,
        override val field1: String?,
        override val field2: String?
      ) : Node, Fragment1, Fragment2, AFragment.ANodeNode

      data class OtherNode(
        override val __typename: String
      ) : Node, AFragment.Node

      companion object {
        fun A.aFragment() = this as? AFragment
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "43544757a57e58015402d2f7cfae79196a1220e0a2fbca80f196e4738c4198d6"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   a {
     *     __typename
     *     ...aFragment
     *   }
     * }
     * fragment aFragment on A {
     *   __typename
     *   node {
     *     __typename
     *     ...fragment1
     *     ...fragment2
     *   }
     * }
     * fragment fragment1 on ANode {
     *   __typename
     *   field1
     * }
     * fragment fragment2 on ANode {
     *   __typename
     *   field2
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { a { __typename ...aFragment } } fragment aFragment on A { __typename node { __typename ...fragment1 ...fragment2 } } fragment fragment1 on ANode { __typename field1 } fragment fragment2 on ANode { __typename field2 }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
