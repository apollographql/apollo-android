// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.input_object_type.type.adapter

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.internal.DoubleResponseAdapter
import com.apollographql.apollo3.api.internal.IntResponseAdapter
import com.apollographql.apollo3.api.internal.NullableResponseAdapter
import com.apollographql.apollo3.api.internal.ResponseAdapter
import com.apollographql.apollo3.api.internal.json.JsonReader
import com.apollographql.apollo3.api.internal.json.JsonWriter
import com.example.input_object_type.type.ColorInput
import com.example.input_object_type.type.Episode
import com.example.input_object_type.type.Episode_ResponseAdapter
import com.example.input_object_type.type.ReviewRefInput
import kotlin.Double
import kotlin.IllegalStateException
import kotlin.Int

class ColorInput_Adapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<ColorInput> {
  private val intAdapter: ResponseAdapter<Int> = IntResponseAdapter

  private val nullableFloatAdapter: ResponseAdapter<Double?> =
      NullableResponseAdapter(DoubleResponseAdapter)

  private val floatAdapter: ResponseAdapter<Double> = DoubleResponseAdapter

  private val nullableEpisodeAdapter: ResponseAdapter<Episode?> =
      NullableResponseAdapter(Episode_ResponseAdapter)

  private val nullableReviewRefInputAdapter: ResponseAdapter<ReviewRefInput?> =
      NullableResponseAdapter(ReviewRefInput_Adapter(responseAdapterCache))

  override fun fromResponse(reader: JsonReader): ColorInput = throw
      IllegalStateException("Input type used in output position")
  override fun toResponse(writer: JsonWriter, value: ColorInput) {
    writer.beginObject()
    if (value.red is Input.Present) {
      writer.name("red")
      intAdapter.toResponse(writer, value.red.value)
    }
    if (value.green is Input.Present) {
      writer.name("green")
      nullableFloatAdapter.toResponse(writer, value.green.value)
    }
    if (value.blue is Input.Present) {
      writer.name("blue")
      floatAdapter.toResponse(writer, value.blue.value)
    }
    if (value.enumWithDefaultValue is Input.Present) {
      writer.name("enumWithDefaultValue")
      nullableEpisodeAdapter.toResponse(writer, value.enumWithDefaultValue.value)
    }
    if (value.reviewRefInput is Input.Present) {
      writer.name("reviewRefInput")
      nullableReviewRefInputAdapter.toResponse(writer, value.reviewRefInput.value)
    }
    writer.endObject()
  }
}
