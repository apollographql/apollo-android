//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.not_all_combinations_are_needed.selections

import com.apollographql.apollo3.api.CompiledCompoundType
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledOtherType
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.example.not_all_combinations_are_needed.fragment.selections.bFragmentSelections
import kotlin.collections.List

private val onB: List<CompiledSelection> = listOf(
      CompiledField(
        name = "__typename",
        type = CompiledOtherType("unused").notNull()
      ),
      CompiledFragment(
        possibleTypes = listOf("ABC", "SomeBC"),
        selections = bFragmentSelections
      )
    )

private val onA: List<CompiledSelection> = listOf(
      CompiledField(
        name = "__typename",
        type = CompiledOtherType("unused").notNull()
      ),
      CompiledField(
        name = "fieldA1",
        type = CompiledOtherType("unused")
      ),
      CompiledFragment(
        possibleTypes = listOf("ABC", "SomeBC"),
        selections = onB
      )
    )

private val root: List<CompiledSelection> = listOf(
      CompiledField(
        name = "__typename",
        type = CompiledOtherType("unused").notNull()
      ),
      CompiledFragment(
        possibleTypes = listOf("ABC"),
        selections = onA
      )
    )

val TestQuerySelections: List<CompiledSelection> = listOf(
      CompiledField(
        name = "root",
        type = CompiledCompoundType("unused"),
        selections = root
      )
    )
