//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.not_all_combinations_are_needed

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.not_all_combinations_are_needed.adapter.TestQuery_ResponseAdapter
import com.example.not_all_combinations_are_needed.fragment.BFragment
import com.example.not_all_combinations_are_needed.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val root: Root?
  ) : Query.Data {
    data class Root(
      val __typename: String,
      /**
       * Synthetic field for inline fragment on A
       */
      val onA: OnA?
    ) {
      data class OnA(
        val __typename: String,
        val fieldA1: String?,
        /**
         * Synthetic field for inline fragment on B
         */
        val onB: OnB?
      ) {
        data class OnB(
          val __typename: String,
          /**
           * Synthetic field for fragment spread on B
           */
          val bFragment: BFragment?
        )
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "ec6d8d89a97a6fcc70ea1d1b7df0da779dd3fab0791532586486701fdaae1fe1"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   root {
     *     __typename
     *     ... on A {
     *       __typename
     *       fieldA1
     *       ... on B {
     *         __typename
     *         ...bFragment
     *       }
     *     }
     *   }
     * }
     *
     * fragment bFragment on B {
     *   __typename
     *   fieldB1
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { root { __typename ... on A { __typename fieldA1 ... on B { __typename ...bFragment } } } }  fragment bFragment on B { __typename fieldB1 }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
