//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment_with_nested_fragments.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment_with_nested_fragments.fragment.DroidFragment
import com.example.root_query_fragment_with_nested_fragments.fragment.HeroFragment
import com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment
import com.example.root_query_fragment_with_nested_fragments.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    override val __typename: String,
    override val hero: Hero?,
    override val droid: Droid?,
    override val human: Human?
  ) : QueryFragment, Query.Data {
    data class Hero(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String
    ) : HeroFragment, QueryFragment.Hero {
      companion object {
        fun Hero.heroFragment() = this as? HeroFragment
      }
    }

    data class Droid(
      override val __typename: String,
      /**
       * What others call this droid
       */
      override val name: String,
      /**
       * This droid's primary function
       */
      override val primaryFunction: String?
    ) : DroidFragment, QueryFragment.Droid {
      companion object {
        fun Droid.droidFragment() = this as? DroidFragment
      }
    }

    data class Human(
      override val __typename: String,
      /**
       * What this human calls themselves
       */
      override val name: String,
      /**
       * The home planet of the human, or null if unknown
       */
      override val homePlanet: String?
    ) : QueryFragment.Human

    companion object {
      fun Data.queryFragment() = this as? QueryFragment
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "28a70b2a9a393b236756d92edea600a8d90d3e5cfb24cdfeda92fec1b5778794"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   __typename
     *   ...QueryFragment
     * }
     *
     * fragment heroFragment on Character {
     *   name
     * }
     *
     * fragment droidFragment on Droid {
     *   name
     *   primaryFunction
     * }
     *
     * fragment QueryFragment on Query {
     *   __typename
     *   hero {
     *     __typename
     *     ...heroFragment
     *   }
     *   droid(id: 1) {
     *     __typename
     *     ...droidFragment
     *   }
     *   human(id: 1) {
     *     __typename
     *     ... on Human {
     *       name
     *       homePlanet
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { __typename ...QueryFragment }  fragment heroFragment on Character { name }  fragment droidFragment on Droid { name primaryFunction }  fragment QueryFragment on Query { __typename hero { __typename ...heroFragment } droid(id: 1) { __typename ...droidFragment } human(id: 1) { __typename ... on Human { name homePlanet } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
