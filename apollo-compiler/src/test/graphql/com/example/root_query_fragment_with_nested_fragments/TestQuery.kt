// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.root_query_fragment_with_nested_fragments

import com.apollographql.apollo.api.Operation
import com.apollographql.apollo.api.OperationName
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.internal.QueryDocumentMinifier
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.example.root_query_fragment_with_nested_fragments.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment_with_nested_fragments.fragment.DroidFragment
import com.example.root_query_fragment_with_nested_fragments.fragment.HeroFragment
import com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment
import kotlin.String
import kotlin.Suppress

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery : Query<TestQuery.Data, Operation.Variables> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun variables(): Operation.Variables = Operation.EMPTY_VARIABLES

  override fun name(): OperationName = OPERATION_NAME

  override fun adapter(): ResponseAdapter<Data> = TestQuery_ResponseAdapter
  /**
   * The query type, represents all of the entry points into our object graph
   */
  interface Data : Operation.Data {
    val __typename: String

    interface Query : Data, QueryFragment {
      override val __typename: String

      override val hero: Hero?

      override val droid: Droid?

      override val human: Human?

      /**
       * A character from the Star Wars universe
       */
      interface Hero : QueryFragment.Hero {
        override val __typename: String

        interface Character : Hero, HeroFragment, QueryFragment.Hero.Character, QueryFragment.Hero {
          override val __typename: String

          /**
           * The name of the character
           */
          override val name: String
        }

        companion object {
          fun Hero.asCharacter(): Character? = this as? Character

          fun Hero.heroFragment(): HeroFragment? = this as? HeroFragment
        }
      }

      /**
       * An autonomous mechanical character in the Star Wars universe
       */
      interface Droid : QueryFragment.Droid {
        override val __typename: String

        interface Droid : Query.Droid, DroidFragment, QueryFragment.Droid.Droid, QueryFragment.Droid
            {
          override val __typename: String

          /**
           * What others call this droid
           */
          override val name: String

          /**
           * This droid's primary function
           */
          override val primaryFunction: String?
        }

        companion object {
          fun Query.Droid.asDroid(): Droid? = this as? Droid

          fun Query.Droid.droidFragment(): DroidFragment? = this as? DroidFragment
        }
      }

      /**
       * A humanoid creature from the Star Wars universe
       */
      interface Human : QueryFragment.Human {
        override val __typename: String

        interface Human : Query.Human, QueryFragment.Human.Human, QueryFragment.Human {
          override val __typename: String

          /**
           * What this human calls themselves
           */
          override val name: String

          /**
           * The home planet of the human, or null if unknown
           */
          override val homePlanet: String?
        }

        companion object {
          fun Query.Human.asHuman(): Human? = this as? Human
        }
      }
    }

    data class QueryDatum(
      override val __typename: String,
      override val hero: Hero?,
      override val droid: Droid?,
      override val human: Human?
    ) : Data, Query, QueryFragment {
      /**
       * A character from the Star Wars universe
       */
      interface Hero : Query.Hero, QueryFragment.Hero {
        override val __typename: String

<<<<<<< HEAD
        override fun marshaller(): ResponseFieldMarshaller
=======
        interface Character : Query.Hero, Query.Hero.Character, HeroFragment,
            QueryFragment.Hero.Character, QueryFragment.Hero, Hero {
          override val __typename: String

          /**
           * The name of the character
           */
          override val name: String
        }
>>>>>>> 7fb58f43... remove ResponseFieldMapper

        data class CharacterHero(
          override val __typename: String,
          /**
           * The name of the character
           */
          override val name: String
        ) : Query.Hero, Query.Hero.Character, HeroFragment, QueryFragment.Hero.Character,
<<<<<<< HEAD
            QueryFragment.Hero, Hero {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Hero.CharacterHero.toResponse(writer, this)
            }
          }
        }

        data class OtherHero(
          override val __typename: String
        ) : Query.Hero, QueryFragment.Hero, Hero {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Hero.OtherHero.toResponse(writer, this)
            }
          }
=======
            QueryFragment.Hero, Hero, Character

        data class OtherHero(
          override val __typename: String
        ) : Query.Hero, QueryFragment.Hero, Hero

        companion object {
          fun Hero.asHero(): QueryFragment.Hero? = this as? QueryFragment.Hero

          fun Hero.asCharacter(): Character? = this as? Character

          fun Hero.heroFragment(): HeroFragment? = this as? HeroFragment
>>>>>>> 7fb58f43... remove ResponseFieldMapper
        }
      }

      /**
       * An autonomous mechanical character in the Star Wars universe
       */
      interface Droid : Query.Droid, QueryFragment.Droid {
        override val __typename: String

<<<<<<< HEAD
        override fun marshaller(): ResponseFieldMarshaller
=======
        interface Droid : Query.Droid, Query.Droid.Droid, DroidFragment, QueryFragment.Droid.Droid,
            QueryFragment.Droid, QueryDatum.Droid {
          override val __typename: String

          /**
           * What others call this droid
           */
          override val name: String

          /**
           * This droid's primary function
           */
          override val primaryFunction: String?
        }
>>>>>>> 7fb58f43... remove ResponseFieldMapper

        data class DroidDroid(
          override val __typename: String,
          /**
           * What others call this droid
           */
          override val name: String,
          /**
           * This droid's primary function
           */
          override val primaryFunction: String?
        ) : Query.Droid, Query.Droid.Droid, DroidFragment, QueryFragment.Droid.Droid,
<<<<<<< HEAD
            QueryFragment.Droid, Droid {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Droid.DroidDroid.toResponse(writer, this)
            }
          }
        }

        data class OtherDroid(
          override val __typename: String
        ) : Query.Droid, QueryFragment.Droid, Droid {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Droid.OtherDroid.toResponse(writer, this)
            }
          }
=======
            QueryFragment.Droid, QueryDatum.Droid, Droid

        data class OtherDroid(
          override val __typename: String
        ) : Query.Droid, QueryFragment.Droid, QueryDatum.Droid

        companion object {
          fun QueryDatum.Droid.asDroid(): Droid? = this as? Droid

          fun QueryDatum.Droid.droidFragment(): DroidFragment? = this as? DroidFragment
>>>>>>> 7fb58f43... remove ResponseFieldMapper
        }
      }

      /**
       * A humanoid creature from the Star Wars universe
       */
      interface Human : Query.Human, QueryFragment.Human {
        override val __typename: String

<<<<<<< HEAD
        override fun marshaller(): ResponseFieldMarshaller
=======
        interface Human : Query.Human, Query.Human.Human, QueryFragment.Human.Human,
            QueryFragment.Human, QueryDatum.Human {
          override val __typename: String

          /**
           * What this human calls themselves
           */
          override val name: String

          /**
           * The home planet of the human, or null if unknown
           */
          override val homePlanet: String?
        }
>>>>>>> 7fb58f43... remove ResponseFieldMapper

        data class HumanHuman(
          override val __typename: String,
          /**
           * What this human calls themselves
           */
          override val name: String,
          /**
           * The home planet of the human, or null if unknown
           */
          override val homePlanet: String?
<<<<<<< HEAD
        ) : Query.Human, Query.Human.Human, QueryFragment.Human.Human, QueryFragment.Human, Human {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Human.HumanHuman.toResponse(writer, this)
            }
          }
        }

        data class OtherHuman(
          override val __typename: String
        ) : Query.Human, QueryFragment.Human, Human {
          override fun marshaller(): ResponseFieldMarshaller {
            return ResponseFieldMarshaller { writer ->
              TestQuery_ResponseAdapter.Data.QueryDatum.Human.OtherHuman.toResponse(writer, this)
            }
          }
=======
        ) : Query.Human, Query.Human.Human, QueryFragment.Human.Human, QueryFragment.Human,
            QueryDatum.Human, Human

        data class OtherHuman(
          override val __typename: String
        ) : Query.Human, QueryFragment.Human, QueryDatum.Human

        companion object {
          fun QueryDatum.Human.asHuman(): Human? = this as? Human
>>>>>>> 7fb58f43... remove ResponseFieldMapper
        }
      }
    }

    data class OtherDatum(
      override val __typename: String
    ) : Data

    companion object {
      fun Data.asQuery(): Query? = this as? Query

      fun Data.queryFragment(): QueryFragment? = this as? QueryFragment
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "a9a2dda27867aae4e7ec4ee3ed20374db9e0ac14f565cd293b397f8aa5580f1e"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestQuery {
          |  __typename
          |  ...QueryFragment
          |}
          |fragment QueryFragment on Query {
          |  __typename
          |  hero {
          |    __typename
          |    ...heroFragment
          |  }
          |  droid(id: 1) {
          |    __typename
          |    ...droidFragment
          |  }
          |  human(id: 1) {
          |    __typename
          |    ... on Human {
          |      name
          |      homePlanet
          |    }
          |  }
          |}
          |fragment heroFragment on Character {
          |  __typename
          |  name
          |}
          |fragment droidFragment on Droid {
          |  __typename
          |  name
          |  primaryFunction
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: OperationName = object : OperationName {
      override fun name(): String {
        return "TestQuery"
      }
    }
  }
}
