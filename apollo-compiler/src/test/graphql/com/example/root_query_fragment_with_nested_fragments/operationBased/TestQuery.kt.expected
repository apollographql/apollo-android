//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment_with_nested_fragments

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.FieldSet
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment_with_nested_fragments.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment_with_nested_fragments.fragment.QueryFragment
import com.example.root_query_fragment_with_nested_fragments.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    // This operation doesn't have any variable
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun fieldSets(): List<FieldSet> = TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val __typename: String,
    /**
     * Synthetic field for fragment spread on Query
     */
    val queryFragment: QueryFragment?
  ) : Query.Data

  companion object {
    const val OPERATION_ID: String =
        "df7e4431b18a55ed54b22e012b87642c784161f5c09d4bbc9eb14f9777ff95c1"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   __typename
     *   ...QueryFragment
     * }
     *
     * fragment heroFragment on Character {
     *   __typename
     *   name
     * }
     *
     * fragment droidFragment on Droid {
     *   __typename
     *   name
     *   primaryFunction
     * }
     *
     * fragment QueryFragment on Query {
     *   __typename
     *   hero {
     *     __typename
     *     ...heroFragment
     *   }
     *   droid(id: 1) {
     *     __typename
     *     ...droidFragment
     *   }
     *   human(id: 1) {
     *     __typename
     *     ... on Human {
     *       name
     *       homePlanet
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { __typename ...QueryFragment }  fragment heroFragment on Character { __typename name }  fragment droidFragment on Droid { __typename name primaryFunction }  fragment QueryFragment on Query { __typename hero { __typename ...heroFragment } droid(id: 1) { __typename ...droidFragment } human(id: 1) { __typename ... on Human { name homePlanet } } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
