//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.unique_type_name.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableDoubleAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.unique_type_name.HeroDetailQuery
import com.example.unique_type_name.type.Episode
import com.example.unique_type_name.type.adapter.Episode_ResponseAdapter
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.collections.List

object HeroDetailQuery_ResponseAdapter {
  object Data : Adapter<HeroDetailQuery.Data> {
    val RESPONSE_NAMES: List<String> = listOf("heroDetailQuery")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.unique_type_name.HeroDetailQuery.Data {
      var heroDetailQuery: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> heroDetailQuery = HeroDetailQuery.obj().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }
      return com.example.unique_type_name.HeroDetailQuery.Data(
        heroDetailQuery = heroDetailQuery
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      value: com.example.unique_type_name.HeroDetailQuery.Data
    ) {
      writer.name("heroDetailQuery")
      HeroDetailQuery.obj().nullable().toJson(writer, customScalarAdapters, value.heroDetailQuery)
    }

    object HeroDetailQuery :
        Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery> {
      val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery {
        reader.selectName(RESPONSE_NAMES).also {
          check(it == 0) {
            "__typename not present in first position"
          }
        }
        val __typename = reader.nextString()!!
        return when(__typename) {
          "Human",
          -> HumanHeroDetailQuery.fromJson(reader, customScalarAdapters, __typename)
          else
          -> OtherHeroDetailQuery.fromJson(reader, customScalarAdapters, __typename)
        }
      }

      override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: com.example.unique_type_name.HeroDetailQuery.Data.HeroDetailQuery
      ) {
        when(value) {
          is com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery ->
              HumanHeroDetailQuery.toJson(writer, customScalarAdapters, value)
          is com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery ->
              OtherHeroDetailQuery.toJson(writer, customScalarAdapters, value)
        }
      }
    }

    object HumanHeroDetailQuery {
      val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends", "height")

      fun fromJson(
        reader: JsonReader,
        customScalarAdapters: CustomScalarAdapters,
        typename: String
      ): com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery {
        var __typename: String? = typename
        var name: String? = null
        var friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend?>? = null
        var height: Double? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> friends = Friend.obj().nullable().list().nullable().fromJson(reader,
                customScalarAdapters)
            3 -> height = NullableDoubleAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }
        return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery(
          __typename = __typename!!,
          name = name!!,
          friends = friends,
          height = height
        )
      }

      fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("friends")
        Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
            value.friends)

        writer.name("height")
        NullableDoubleAdapter.toJson(writer, customScalarAdapters, value.height)
      }

      object Friend :
          Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend> {
        val RESPONSE_NAMES: List<String> = listOf("name", "appearsIn", "friends")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend {
          var name: String? = null
          var appearsIn: List<Episode?>? = null
          var friends: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend?>? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
              1 -> appearsIn = Episode_ResponseAdapter.nullable().list().fromJson(reader,
                  customScalarAdapters)
              2 -> friends = Friend.obj().nullable().list().nullable().fromJson(reader,
                  customScalarAdapters)
              else -> break
            }
          }
          return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend(
            name = name!!,
            appearsIn = appearsIn!!,
            friends = friends
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend
        ) {
          writer.name("name")
          StringAdapter.toJson(writer, customScalarAdapters, value.name)

          writer.name("appearsIn")
          Episode_ResponseAdapter.nullable().list().toJson(writer, customScalarAdapters,
              value.appearsIn)

          writer.name("friends")
          Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
              value.friends)
        }

        object Friend :
            Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend>
            {
          val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friendsConnection")

          override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
              com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend {
            var __typename: String? = null
            var name: String? = null
            var friendsConnection: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection? = null
            while(true) {
              when (reader.selectName(RESPONSE_NAMES)) {
                0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
                1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                2 -> friendsConnection = FriendsConnection.obj().fromJson(reader,
                    customScalarAdapters)
                else -> break
              }
            }
            return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend(
              __typename = __typename!!,
              name = name!!,
              friendsConnection = friendsConnection!!
            )
          }

          override fun toJson(
            writer: JsonWriter,
            customScalarAdapters: CustomScalarAdapters,
            value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend
          ) {
            writer.name("__typename")
            StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

            writer.name("name")
            StringAdapter.toJson(writer, customScalarAdapters, value.name)

            writer.name("friendsConnection")
            FriendsConnection.obj().toJson(writer, customScalarAdapters, value.friendsConnection)
          }

          object FriendsConnection :
              Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection>
              {
            val RESPONSE_NAMES: List<String> = listOf("totalCount", "edges")

            override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
                com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection {
              var totalCount: Int? = null
              var edges: List<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge?>? = null
              while(true) {
                when (reader.selectName(RESPONSE_NAMES)) {
                  0 -> totalCount = NullableIntAdapter.fromJson(reader, customScalarAdapters)
                  1 -> edges = Edge.obj().nullable().list().nullable().fromJson(reader,
                      customScalarAdapters)
                  else -> break
                }
              }
              return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection(
                totalCount = totalCount,
                edges = edges
              )
            }

            override fun toJson(
              writer: JsonWriter,
              customScalarAdapters: CustomScalarAdapters,
              value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection
            ) {
              writer.name("totalCount")
              NullableIntAdapter.toJson(writer, customScalarAdapters, value.totalCount)

              writer.name("edges")
              Edge.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
                  value.edges)
            }

            object Edge :
                Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge>
                {
              val RESPONSE_NAMES: List<String> = listOf("node")

              override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
                  com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge {
                var node: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node? = null
                while(true) {
                  when (reader.selectName(RESPONSE_NAMES)) {
                    0 -> node = Node.obj().nullable().fromJson(reader, customScalarAdapters)
                    else -> break
                  }
                }
                return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge(
                  node = node
                )
              }

              override fun toJson(
                writer: JsonWriter,
                customScalarAdapters: CustomScalarAdapters,
                value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge
              ) {
                writer.name("node")
                Node.obj().nullable().toJson(writer, customScalarAdapters, value.node)
              }

              object Node :
                  Adapter<com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node>
                  {
                val RESPONSE_NAMES: List<String> = listOf("name")

                override fun fromJson(reader: JsonReader,
                    customScalarAdapters: CustomScalarAdapters):
                    com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node {
                  var name: String? = null
                  while(true) {
                    when (reader.selectName(RESPONSE_NAMES)) {
                      0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
                      else -> break
                    }
                  }
                  return com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node(
                    name = name!!
                  )
                }

                override fun toJson(
                  writer: JsonWriter,
                  customScalarAdapters: CustomScalarAdapters,
                  value: com.example.unique_type_name.HeroDetailQuery.Data.HumanHeroDetailQuery.Friend.Friend.FriendsConnection.Edge.Node
                ) {
                  writer.name("name")
                  StringAdapter.toJson(writer, customScalarAdapters, value.name)
                }
              }
            }
          }
        }
      }
    }

    object OtherHeroDetailQuery {
      val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends")

      fun fromJson(
        reader: JsonReader,
        customScalarAdapters: CustomScalarAdapters,
        typename: String
      ): com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery {
        var __typename: String? = typename
        var name: String? = null
        var friends: List<com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend?>? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> friends = Friend.obj().nullable().list().nullable().fromJson(reader,
                customScalarAdapters)
            else -> break
          }
        }
        return com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery(
          __typename = __typename!!,
          name = name!!,
          friends = friends
        )
      }

      fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        value: com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery
      ) {
        writer.name("__typename")
        StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("friends")
        Friend.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
            value.friends)
      }

      object Friend :
          Adapter<com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend> {
        val RESPONSE_NAMES: List<String> = listOf("name")

        override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
            com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend {
          var name: String? = null
          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> name = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }
          return com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend(
            name = name!!
          )
        }

        override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          value: com.example.unique_type_name.HeroDetailQuery.Data.OtherHeroDetailQuery.Friend
        ) {
          writer.name("name")
          StringAdapter.toJson(writer, customScalarAdapters, value.name)
        }
      }
    }
  }
}
