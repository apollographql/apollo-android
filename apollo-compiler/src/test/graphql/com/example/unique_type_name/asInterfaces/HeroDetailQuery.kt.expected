//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.unique_type_name

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter
import com.example.unique_type_name.fragment.HeroDetails
import com.example.unique_type_name.responsefields.HeroDetailQuery_ResponseFields
import com.example.unique_type_name.type.Episode
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class HeroDetailQuery : Query<HeroDetailQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have any variable
  }

  override fun adapter(): ResponseAdapter<Data> {
    return HeroDetailQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      HeroDetailQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    val heroDetailQuery: HeroDetailQuery?
  ) : Query.Data {
    interface HeroDetailQuery {
      val __typename: String

      /**
       * The name of the character
       */
      val name: String

      /**
       * The friends of the character, or an empty list if they have none
       */
      val friends: List<Friend?>?

      interface Friend {
        /**
         * The name of the character
         */
        val name: String
      }

      companion object {
        fun HeroDetailQuery.asCharacterHuman() = this as? HumanHeroDetailQuery
      }
    }

    data class HumanHeroDetailQuery(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      override val friends: List<Friend?>?,
      /**
       * Height in the preferred unit, default is meters
       */
      val height: Double?
    ) : HeroDetailQuery {
      fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

      data class Friend(
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * The movies this character appears in
         */
        val appearsIn: List<Episode?>,
        /**
         * The friends of the character, or an empty list if they have none
         */
        val friends: List<Friend?>?
      ) : HeroDetailQuery.Friend {
        fun appearsInFilterNotNull(): List<Episode> = appearsIn.filterNotNull()

        fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

        data class Friend(
          override val __typename: String,
          /**
           * The name of the character
           */
          override val name: String,
          /**
           * The friends of the character exposed as a connection with edges
           */
          override val friendsConnection: FriendsConnection
        ) : HeroDetails {
          data class FriendsConnection(
            /**
             * The total number of friends
             */
            override val totalCount: Int?,
            /**
             * The edges for each of the character's friends.
             */
            override val edges: List<Edge?>?
          ) : HeroDetails.FriendsConnection {
            fun edgesFilterNotNull(): List<Edge>? = edges?.filterNotNull()

            data class Edge(
              /**
               * The character represented by this friendship edge
               */
              override val node: Node?
            ) : HeroDetails.FriendsConnection.Edge {
              data class Node(
                /**
                 * The name of the character
                 */
                override val name: String
              ) : HeroDetails.FriendsConnection.Edge.Node
            }
          }

          companion object {
            fun Friend.HeroDetails() = this as? HeroDetails
          }
        }
      }
    }

    data class OtherHeroDetailQuery(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      override val friends: List<Friend?>?
    ) : HeroDetailQuery {
      fun friendsFilterNotNull(): List<Friend>? = friends?.filterNotNull()

      data class Friend(
        /**
         * The name of the character
         */
        override val name: String
      ) : HeroDetailQuery.Friend
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "9c330cc4e43ed8887546ccd95fb638afaf447285b3f00715118de9e475413aee"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query HeroDetailQuery {
     *   heroDetailQuery {
     *     __typename
     *     name
     *     friends {
     *       name
     *     }
     *     ... on Human {
     *       height
     *       friends {
     *         appearsIn
     *         friends {
     *           __typename
     *           ...HeroDetails
     *         }
     *       }
     *     }
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query HeroDetailQuery { heroDetailQuery { __typename name friends { name } ... on Human { height friends { appearsIn friends { __typename ...HeroDetails } } } } }"

    const val OPERATION_NAME: String = "HeroDetailQuery"
  }
}
