//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev6-SNAPSHOT'.
//
package com.example.unique_type_name

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter
import com.example.unique_type_name.responsefields.HeroDetailQuery_ResponseFields
import com.example.unique_type_name.type.Episode
import kotlin.Double
import kotlin.Int
import kotlin.String
import kotlin.collections.List

class HeroDetailQuery : Query<HeroDetailQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have variables
  }

  override fun adapter(): ResponseAdapter<Data> {
    return HeroDetailQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      HeroDetailQuery_ResponseFields.fields.first().fieldSets
  data class Data(
    val heroDetailQuery: HeroDetailQuery?
  ) : Query.Data {
    interface HeroDetailQuery {
      val __typename: String

      /**
       * The name of the character
       */
      val name: String

      /**
       * The friends of the character, or an empty list if they have none
       */
      val friends: List<Friends?>?

      interface Friends {
        /**
         * The name of the character
         */
        val name: String
      }
    }

    data class OtherHeroDetailQuery(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      override val friends: List<Friends?>?
    ) : HeroDetailQuery {
      data class Friends(
        /**
         * The name of the character
         */
        override val name: String
      ) : HeroDetailQuery.Friends
    }

    data class HumanHeroDetailQuery(
      override val __typename: String,
      /**
       * The name of the character
       */
      override val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      override val friends: List<Friends?>?,
      /**
       * Height in the preferred unit, default is meters
       */
      val height: Double?
    ) : HeroDetailQuery {
      data class Friends(
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * The movies this character appears in
         */
        val appearsIn: List<Episode?>,
        /**
         * The friends of the character, or an empty list if they have none
         */
        val friends: List<Friends?>?
      ) : HeroDetailQuery.Friends {
        data class Friends(
          override val __typename: String,
          /**
           * The name of the character
           */
          override val name: String,
          /**
           * The friends of the character exposed as a connection with edges
           */
          override val friendsConnection: FriendsConnection
        ) : HeroDetails.Data {
          data class FriendsConnection(
            /**
             * The total number of friends
             */
            override val totalCount: Int?,
            /**
             * The edges for each of the character's friends.
             */
            override val edges: List<Edges?>?
          ) : HeroDetails.Data.FriendsConnection {
            data class Edges(
              /**
               * The character represented by this friendship edge
               */
              override val node: Node?
            ) : HeroDetails.Data.FriendsConnection.Edges {
              data class Node(
                /**
                 * The name of the character
                 */
                override val name: String
              ) : HeroDetails.Data.FriendsConnection.Edges.Node
            }
          }
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String = "HeroDetailQuery"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query HeroDetailQuery {
          |  heroDetailQuery {
          |    __typename
          |    name
          |    friends {
          |      name
          |    }
          |    ... on Human {
          |      height
          |      friends {
          |        appearsIn
          |        friends {
          |          __typename
          |          ...HeroDetails
          |        }
          |      }
          |    }
          |  }
          |}
          """.trimMargin()
        )

    const val OPERATION_NAME: String = "HeroDetailQuery"
  }
}
