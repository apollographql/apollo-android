//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.unique_type_name

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.unique_type_name.adapter.HeroDetailQuery_ResponseAdapter
import com.example.unique_type_name.fragment.HeroDetails
import com.example.unique_type_name.responsefields.HeroDetailQuery_ResponseFields
import com.example.unique_type_name.type.Episode
import kotlin.Double
import kotlin.String
import kotlin.collections.List

class HeroDetailQuery : Query<HeroDetailQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have variables
  }

  override fun adapter(): ResponseAdapter<Data> {
    return HeroDetailQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      HeroDetailQuery_ResponseFields.fields.first().fieldSets
  data class Data(
    val heroDetailQuery: HeroDetailQuery?
  ) : Query.Data {
    data class HeroDetailQuery(
      val __typename: String,
      /**
       * The name of the character
       */
      val name: String,
      /**
       * The friends of the character, or an empty list if they have none
       */
      val friends: List<Friends?>?,
      /**
       * Synthetic field for inline fragment
       */
      val asHuman: AsHuman?
    ) {
      fun friendsFilterNotNull(): List<Friends>? = friends?.filterNotNull()

      data class Friends(
        /**
         * The name of the character
         */
        val name: String
      )

      data class AsHuman(
        val __typename: String,
        /**
         * The name of the character
         */
        val name: String,
        /**
         * The friends of the character, or an empty list if they have none
         */
        val friends: List<Friends?>?,
        /**
         * Height in the preferred unit, default is meters
         */
        val height: Double?
      ) {
        fun friendsFilterNotNull(): List<Friends>? = friends?.filterNotNull()

        data class Friends(
          /**
           * The name of the character
           */
          val name: String,
          /**
           * The movies this character appears in
           */
          val appearsIn: List<Episode?>,
          /**
           * The friends of the character, or an empty list if they have none
           */
          val friends: List<Friends?>?
        ) {
          fun appearsInFilterNotNull(): List<Episode> = appearsIn.filterNotNull()

          fun friendsFilterNotNull(): List<Friends>? = friends?.filterNotNull()

          data class Friends(
            val __typename: String,
            /**
             * Synthetic field for inline fragment
             */
            val heroDetails: HeroDetails?
          )
        }
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "9c330cc4e43ed8887546ccd95fb638afaf447285b3f00715118de9e475413aee"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query HeroDetailQuery {
          |  heroDetailQuery {
          |    __typename
          |    name
          |    friends {
          |      name
          |    }
          |    ... on Human {
          |      height
          |      friends {
          |        appearsIn
          |        friends {
          |          __typename
          |          ...HeroDetails
          |        }
          |      }
          |    }
          |  }
          |}
          """.trimMargin()
        )

    const val OPERATION_NAME: String = "HeroDetailQuery"
  }
}
