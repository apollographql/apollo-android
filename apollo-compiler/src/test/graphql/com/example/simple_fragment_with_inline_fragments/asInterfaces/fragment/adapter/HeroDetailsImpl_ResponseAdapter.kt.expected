//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.0.0-dev7-SNAPSHOT'.
//
package com.example.simple_fragment_with_inline_fragments.fragment.adapter

import com.apollographql.apollo3.api.NullableDoubleResponseAdapter
import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.example.simple_fragment_with_inline_fragments.fragment.HeroDetailsImpl
import kotlin.Double
import kotlin.String
import kotlin.collections.List

object HeroDetailsImpl_ResponseAdapter {
  object Data : ResponseAdapter<HeroDetailsImpl.Data> {
    val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "friends")

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        HeroDetailsImpl.Data {
      var __typename: String? = null
      var name: String? = null
      var friends: List<HeroDetailsImpl.Data.Friends?>? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          2 -> friends = Friends.nullable().list().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return HeroDetailsImpl.Data(
        __typename = __typename!!,
        name = name!!,
        friends = friends
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: HeroDetailsImpl.Data
    ) {
      writer.name("__typename")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
      writer.name("name")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
      writer.name("friends")
      Friends.nullable().list().nullable().toResponse(writer, responseAdapterCache, value.friends)
    }

    object Friends : ResponseAdapter<HeroDetailsImpl.Data.Friends> {
      val RESPONSE_NAMES: List<String> = listOf("__typename")

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          HeroDetailsImpl.Data.Friends {
        reader.selectName(RESPONSE_NAMES).also {
          check(it == 0) {
            "__typename not present in first position"
          }
        }
        val __typename = reader.nextString()!!
        return when(__typename) {
          "Droid",
          -> DroidFriends.fromResponse(reader, responseAdapterCache, __typename)
          "Human",
          -> HumanFriends.fromResponse(reader, responseAdapterCache, __typename)
          else
          -> OtherFriends.fromResponse(reader, responseAdapterCache, __typename)
        }
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: HeroDetailsImpl.Data.Friends
      ) {
        when(value) {
          is HeroDetailsImpl.Data.DroidFriends -> DroidFriends.toResponse(writer,
              responseAdapterCache, value)
          is HeroDetailsImpl.Data.HumanFriends -> HumanFriends.toResponse(writer,
              responseAdapterCache, value)
          is HeroDetailsImpl.Data.OtherFriends -> OtherFriends.toResponse(writer,
              responseAdapterCache, value)
        }
      }
    }

    object OtherFriends {
      val RESPONSE_NAMES: List<String> = listOf("__typename", "name")

      fun fromResponse(
        reader: JsonReader,
        responseAdapterCache: ResponseAdapterCache,
        __typename: String
      ): HeroDetailsImpl.Data.OtherFriends {
        var __typename: String? = __typename
        var name: String? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            else -> break
          }
        }
        return HeroDetailsImpl.Data.OtherFriends(
          __typename = __typename!!,
          name = name!!
        )
      }

      fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: HeroDetailsImpl.Data.OtherFriends
      ) {
        writer.name("__typename")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
        writer.name("name")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
      }
    }

    object DroidFriends {
      val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "primaryFunction")

      fun fromResponse(
        reader: JsonReader,
        responseAdapterCache: ResponseAdapterCache,
        __typename: String
      ): HeroDetailsImpl.Data.DroidFriends {
        var __typename: String? = __typename
        var name: String? = null
        var primaryFunction: String? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            2 -> primaryFunction = NullableStringResponseAdapter.fromResponse(reader,
                responseAdapterCache)
            else -> break
          }
        }
        return HeroDetailsImpl.Data.DroidFriends(
          __typename = __typename!!,
          name = name!!,
          primaryFunction = primaryFunction
        )
      }

      fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: HeroDetailsImpl.Data.DroidFriends
      ) {
        writer.name("__typename")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
        writer.name("name")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
        writer.name("primaryFunction")
        NullableStringResponseAdapter.toResponse(writer, responseAdapterCache,
            value.primaryFunction)
      }
    }

    object HumanFriends {
      val RESPONSE_NAMES: List<String> = listOf("__typename", "name", "height")

      fun fromResponse(
        reader: JsonReader,
        responseAdapterCache: ResponseAdapterCache,
        __typename: String
      ): HeroDetailsImpl.Data.HumanFriends {
        var __typename: String? = __typename
        var name: String? = null
        var height: Double? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            2 -> height = NullableDoubleResponseAdapter.fromResponse(reader, responseAdapterCache)
            else -> break
          }
        }
        return HeroDetailsImpl.Data.HumanFriends(
          __typename = __typename!!,
          name = name!!,
          height = height
        )
      }

      fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: HeroDetailsImpl.Data.HumanFriends
      ) {
        writer.name("__typename")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
        writer.name("name")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
        writer.name("height")
        NullableDoubleResponseAdapter.toResponse(writer, responseAdapterCache, value.height)
      }
    }
  }
}
