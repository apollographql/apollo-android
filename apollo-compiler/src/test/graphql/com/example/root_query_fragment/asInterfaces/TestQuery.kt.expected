//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment.fragment.QueryFragment
import com.example.root_query_fragment.responsefields.TestQuery_ResponseFields
import kotlin.String
import kotlin.collections.List

class TestQuery : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    // This operation doesn't have any variable
  }

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> =
      TestQuery_ResponseFields.fields.first().fieldSets

  data class Data(
    override val __typename: String,
    override val hero: Hero?
  ) : QueryFragment, Query.Data {
    data class Hero(
      /**
       * The name of the character
       */
      override val name: String
    ) : QueryFragment.Hero

    companion object {
      fun Data.queryFragment() = this as? QueryFragment
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "f2287d7a8933207536dba2321db795487257ae1c8f5a9f0577d02361c0117ae5"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery {
     *   __typename
     *   ...QueryFragment
     * }
     * fragment QueryFragment on Query {
     *   __typename
     *   hero {
     *     name
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery { __typename ...QueryFragment } fragment QueryFragment on Query { __typename hero { name } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
