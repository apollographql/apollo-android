// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.root_query_fragment.adapter

import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.internal.json.MapJsonReader.Companion.buffer
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.root_query_fragment.TestQuery
import com.example.root_query_fragment.fragment.QueryFragment
import com.example.root_query_fragment.fragment.adapter.QueryFragment_ResponseAdapter
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery_ResponseAdapter(
  responseAdapterCache: ResponseAdapterCache
) : ResponseAdapter<TestQuery.Data> {
  private val stringAdapter: ResponseAdapter<String> = StringResponseAdapter

  private val QueryFragmentAdapter: QueryFragment_ResponseAdapter =
      com.example.root_query_fragment.fragment.adapter.QueryFragment_ResponseAdapter(responseAdapterCache)

  override fun fromResponse(reader: JsonReader): TestQuery.Data {
    val reader = reader.buffer()
    reader.beginObject()

    var __typename: String? = null
    var queryFragment: QueryFragment.Data? = null
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> __typename = stringAdapter.fromResponse(reader)
        else -> break
      }
    }
    if (__typename in arrayOf("Query")) {
      reader.rewind()
      queryFragment = QueryFragmentAdapter.fromResponse(reader)
    }

    return TestQuery.Data(
      __typename = __typename!!,
      queryFragment = queryFragment
    )
    .also { reader.endObject() }
  }

  override fun toResponse(writer: JsonWriter, value: TestQuery.Data) {
    writer.beginObject()
    writer.name("__typename")
    stringAdapter.toResponse(writer, value.__typename)
    if (value.queryFragment != null) QueryFragmentAdapter.toResponse(writer, value.queryFragment)
    writer.endObject()
  }

  companion object {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField.Typename
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }
  }
}
