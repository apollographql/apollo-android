//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.variable_default_value

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.variable_default_value.adapter.TestQuery_ResponseAdapter
import com.example.variable_default_value.adapter.TestQuery_VariablesAdapter
import com.example.variable_default_value.selections.TestQuerySelections
import com.example.variable_default_value.type.Episode
import kotlin.String
import kotlin.collections.List

data class TestQuery(
  val episode: Optional<Episode> = Optional.Absent
) : Query<TestQuery.Data> {
  override fun id(): String = OPERATION_ID

  override fun document(): String = OPERATION_DOCUMENT

  override fun name(): String = OPERATION_NAME

  override fun serializeVariables(writer: JsonWriter, customScalarAdapters: CustomScalarAdapters) {
    TestQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  override fun adapter(): Adapter<Data> {
    return TestQuery_ResponseAdapter.Data.obj()
  }

  override fun selections(): List<CompiledSelection> = TestQuerySelections.root

  data class Data(
    val hero: Hero?
  ) : Query.Data {
    data class Hero(
      /**
       * The name of the character
       */
      val name: String
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "7bba59b12a0090dd1fbc4c409ea7e72bd6885a6b31d442bfeb86f4a67e5b62d9"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestQuery($episode: Episode! = JEDI ) {
     *   hero(episode: $episode) {
     *     name
     *   }
     * }
     */
    const val OPERATION_DOCUMENT: String =
        "query TestQuery(${'$'}episode: Episode! = JEDI ) { hero(episode: ${'$'}episode) { name } }"

    const val OPERATION_NAME: String = "TestQuery"
  }
}
