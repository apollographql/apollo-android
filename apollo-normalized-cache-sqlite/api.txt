// Signature format: 3.0
package com.apollographql.apollo.cache.normalized.sql {

  @Deprecated public final class ApolloSqlHelper {
    ctor @Deprecated public ApolloSqlHelper(android.content.Context context, String? name);
    method @Deprecated public static com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper create(android.content.Context context, String? name = "apollo.db");
    method @Deprecated public static com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper create(android.content.Context context);
    field @Deprecated public static final com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper.Companion Companion;
  }

  @Deprecated public static final class ApolloSqlHelper.Companion {
    method @Deprecated public com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper create(android.content.Context context, String? name = "apollo.db");
    method @Deprecated public com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper create(android.content.Context context);
  }

  public final class SqlNormalizedCache extends com.apollographql.apollo.cache.normalized.NormalizedCache {
    method public void clearAll();
    method public void createRecord(String key, String fields);
    method public boolean deleteRecord(String key);
    method public boolean deleteRecords(java.util.Collection<java.lang.String> keys);
    method public com.apollographql.apollo.cache.normalized.Record? loadRecord(String key, com.apollographql.apollo.cache.CacheHeaders cacheHeaders);
    method protected java.util.Set<java.lang.String> performMerge(com.apollographql.apollo.cache.normalized.Record apolloRecord, com.apollographql.apollo.cache.normalized.Record? oldRecord, com.apollographql.apollo.cache.CacheHeaders cacheHeaders);
    method public boolean remove(com.apollographql.apollo.cache.normalized.CacheKey cacheKey, boolean cascade);
    method public com.apollographql.apollo.cache.normalized.Record? selectRecordForKey(String key);
    method public java.util.List<com.apollographql.apollo.cache.normalized.Record> selectRecordsForKey(java.util.Collection<java.lang.String> keys);
  }

  public final class SqlNormalizedCacheFactory extends com.apollographql.apollo.cache.normalized.NormalizedCacheFactory<com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache> {
    ctor public SqlNormalizedCacheFactory(String url, java.util.Properties properties);
    ctor public SqlNormalizedCacheFactory(String url);
    method public com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache create(com.apollographql.apollo.cache.normalized.RecordFieldJsonAdapter recordFieldAdapter);
    field public static final com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCacheFactory.Companion Companion;
  }

  public static final class SqlNormalizedCacheFactory.Companion {
  }

  public final class SqlNormalizedCacheFactory extends com.apollographql.apollo.cache.normalized.NormalizedCacheFactory<com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache> {
    ctor public SqlNormalizedCacheFactory(android.content.Context context, String? name, androidx.sqlite.db.SupportSQLiteOpenHelper.Factory factory, boolean useNoBackupDirectory);
    ctor public SqlNormalizedCacheFactory(android.content.Context context, String? name, androidx.sqlite.db.SupportSQLiteOpenHelper.Factory factory);
    ctor public SqlNormalizedCacheFactory(android.content.Context context, String? name);
    ctor public SqlNormalizedCacheFactory(android.content.Context context);
    ctor public SqlNormalizedCacheFactory(com.apollographql.apollo.cache.normalized.sql.ApolloSqlHelper apolloSqlHelper);
    method public com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache create(com.apollographql.apollo.cache.normalized.RecordFieldJsonAdapter recordFieldAdapter);
  }

  public final class SqlNormalizedCacheFactory extends com.apollographql.apollo.cache.normalized.NormalizedCacheFactory<com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache> {
    ctor public SqlNormalizedCacheFactory();
    ctor public SqlNormalizedCacheFactory(String name);
    method public com.apollographql.apollo.cache.normalized.sql.SqlNormalizedCache create(com.apollographql.apollo.cache.normalized.RecordFieldJsonAdapter recordFieldAdapter);
  }

}

