// Signature format: 3.0
package com.apollographql.apollo.coroutines {

  public final class CoroutinesExtensionsKt {
    method public static suspend <T> Object? await(com.apollographql.apollo.ApolloCall<T>, kotlin.coroutines.Continuation<? super com.apollographql.apollo.api.Response<T>> p);
    method public static suspend Object? await(com.apollographql.apollo.ApolloPrefetch, kotlin.coroutines.Continuation<? super kotlin.Unit> p);
    method @Deprecated public static <T> kotlinx.coroutines.Deferred<com.apollographql.apollo.api.Response<T>> toDeferred(com.apollographql.apollo.ApolloCall<T>);
    method @kotlinx.coroutines.ExperimentalCoroutinesApi public static <T> kotlinx.coroutines.flow.Flow<com.apollographql.apollo.api.Response<T>> toFlow(com.apollographql.apollo.ApolloCall<T>);
    method @kotlinx.coroutines.ExperimentalCoroutinesApi public static <T> kotlinx.coroutines.flow.Flow<com.apollographql.apollo.api.Response<T>> toFlow(com.apollographql.apollo.ApolloQueryWatcher<T>);
    method @kotlinx.coroutines.ExperimentalCoroutinesApi public static <T> kotlinx.coroutines.flow.Flow<com.apollographql.apollo.api.Response<T>> toFlow(com.apollographql.apollo.ApolloSubscriptionCall<T>);
    method @Deprecated public static kotlinx.coroutines.Job toJob(com.apollographql.apollo.ApolloPrefetch);
  }

}

